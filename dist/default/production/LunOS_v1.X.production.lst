

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Jun 07 04:17:44 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           ; Version 2.05
    45                           ; Generated 20/12/2018 GMT
    46                           ; 
    47                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F4520 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     
    79 ;;_p	offset=-2 (param)
    80 ;;_s	offset=-4 (param)
    81 ;;_s	offset=-2 (param)
    82 ;;_valor	offset=-4 (param)
    83 ;;_new_task	offset	0
    84 ;;_prior	offset=-2 (param)
    85 ;;_f	offset=-4 (param)
    86 ;;_count	offset	0
    87 ;;_pHeap	offset	2
    88 ;;_state	offset=-1 (param)
    89 ;;_next_task_to_run	offset	0
    90 ;;_counter	offset	0
    91 ;;_dividend	offset=-2 (param)
    92 ;;_divisor	offset=-4 (param)
    93 ;;_time	offset=-2 (param)
    94 ;;_state	offset=-1 (param)
    95 ;;_next_task_to_run	offset	0
    96 ;;_counter	offset	0
    97 ;;_dividend	offset=-2 (param)
    98 ;;_divisor	offset=-4 (param)
    99 ;;_p	offset=-2 (param)
   100 ;;_s	offset=-4 (param)
   101 ;;_s	offset=-2 (param)
   102 ;;_valor	offset=-4 (param)
   103 ;;_s	offset=-2 (param)
   104 ;;_s	offset=-2 (param)
   105 ;;_s	offset=-2 (param)
   106 ;;_s	offset=-2 (param)
   107 ;;_state	offset=-1 (param)
   108 ;;_next_task_to_run	offset	0
   109 ;;_counter	offset	0
   110 ;;_dividend	offset=-2 (param)
   111 ;;_divisor	offset=-4 (param)
   112 ;;_a	offset=-2 (param)
   113 ;;_i	offset	0
   114 ;;_result	offset	0
   115 ;;_number	offset=-2 (param)
   116 ;;_div	offset=-4 (param)
   117 ;;_result	offset	0
   118 ;;_number	offset=-2 (param)
   119 ;;_div	offset=-4 (param)
   120 ;;_product	offset	0
   121 ;;_multiplier	offset=-2 (param)
   122 ;;_multiplicand	offset=-4 (param)
   123                           
   124                           	psect	idataCOMRAM
   125  0017AA                     __pidataCOMRAM:
   126                           	opt callstack 0
   127                           
   128                           ;initializer for _quantum
   129  0017AA  000A               	dw	10
   130  0000                     _TOS	set	4093
   131  0000                     _PORTC	set	3970
   132  0000                     _TRISD	set	3989
   133  0000                     _TRISC	set	3988
   134  0000                     _TRISB	set	3987
   135  0000                     _STKPTR	set	4092
   136  0000                     _TOSL	set	4093
   137  0000                     _TOSH	set	4094
   138  0000                     _TOSU	set	4095
   139  0000                     _BSR	set	4064
   140  0000                     _STATUS	set	4056
   141  0000                     _WREG	set	4072
   142  0000                     _PORTDbits	set	3971
   143  0000                     _PORTCbits	set	3970
   144  0000                     _PORTBbits	set	3969
   145  0000                     _TMR0L	set	4054
   146  0000                     _T0CONbits	set	4053
   147  0000                     _INTCON2bits	set	4081
   148  0000                     _INTCONbits	set	4082
   149  0000                     _TRISDbits	set	3989
   150                           
   151                           ; #config settings
   152  0000                     
   153                           	psect	cinit
   154  001668                     __pcinit:
   155                           	opt callstack 0
   156  001668                     start_initialization:
   157                           	opt callstack 0
   158  001668                     __initialization:
   159                           	opt callstack 0
   160                           
   161                           ; Initialize objects allocated to COMRAM (2 bytes)
   162                           ; load TBLPTR registers with __pidataCOMRAM
   163  001668  0EAA               	movlw	low __pidataCOMRAM
   164  00166A  6EF6               	movwf	tblptrl,c
   165  00166C  0E17               	movlw	high __pidataCOMRAM
   166  00166E  6EF7               	movwf	tblptrh,c
   167  001670  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   168  001672  6EF8               	movwf	tblptru,c
   169  001674  0009               	tblrd		*+	;fetch initializer
   170  001676  CFF5 F079          	movff	tablat,__pdataCOMRAM
   171  00167A  0009               	tblrd		*+	;fetch initializer
   172  00167C  CFF5 F07A          	movff	tablat,__pdataCOMRAM+1
   173                           
   174                           ; Clear objects allocated to BIGRAM (1056 bytes)
   175  001680  EE00  F0DA         	lfsr	0,__pbssBIGRAM
   176  001684  EE24 F020          	lfsr	2,1056
   177  001688                     clear_0:
   178  001688  6AEE               	clrf	postinc0,c
   179  00168A  50DD               	movf	postdec2,w,c
   180  00168C  50D9               	movf	fsr2l,w,c
   181  00168E  E1FC               	bnz	clear_0
   182  001690  50DA               	movf	fsr2h,w,c
   183  001692  E1FA               	bnz	clear_0
   184                           
   185                           ; Clear objects allocated to BANK0 (90 bytes)
   186  001694  EE00  F080         	lfsr	0,__pbssBANK0
   187  001698  0E5A               	movlw	90
   188  00169A                     clear_1:
   189  00169A  6AEE               	clrf	postinc0,c
   190  00169C  06E8               	decf	wreg,f,c
   191  00169E  E1FD               	bnz	clear_1
   192                           
   193                           ; Clear objects allocated to COMRAM (70 bytes)
   194  0016A0  EE00  F001         	lfsr	0,__pbssCOMRAM
   195  0016A4  0E46               	movlw	70
   196  0016A6                     clear_2:
   197  0016A6  6AEE               	clrf	postinc0,c
   198  0016A8  06E8               	decf	wreg,f,c
   199  0016AA  E1FD               	bnz	clear_2
   200  0016AC                     end_of_initialization:
   201                           	opt callstack 0
   202  0016AC                     __end_of__initialization:
   203                           	opt callstack 0
   204  0016AC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   205  0016AE  6EF8               	movwf	tblptru,c
   206  0016B0  0100               	movlb	0
   207  0016B2  EF5B  F00B         	goto	_main	;jump to C main() function
   208                           
   209                           	psect	bssCOMRAM
   210  000001                     __pbssCOMRAM:
   211                           	opt callstack 0
   212  000001                     _timer_index:
   213                           	opt callstack 0
   214  000001                     	ds	2
   215  000003                     _unidade:
   216                           	opt callstack 0
   217  000003                     	ds	2
   218  000005                     _dezena:
   219                           	opt callstack 0
   220  000005                     	ds	2
   221  000007                     _time:
   222                           	opt callstack 0
   223  000007                     	ds	2
   224  000009                     _count:
   225                           	opt callstack 0
   226  000009                     	ds	2
   227  00000B                     _started:
   228                           	opt callstack 0
   229  00000B                     	ds	2
   230  00000D                     _indice:
   231                           	opt callstack 0
   232  00000D                     	ds	2
   233  00000F                     _size:
   234                           	opt callstack 0
   235  00000F                     	ds	2
   236  000011                     _who:
   237                           	opt callstack 0
   238  000011                     	ds	2
   239  000013                     _s_started:
   240                           	opt callstack 0
   241  000013                     	ds	14
   242  000021                     _s_time:
   243                           	opt callstack 0
   244  000021                     	ds	14
   245  00002F                     _s_count:
   246                           	opt callstack 0
   247  00002F                     	ds	14
   248  00003D                     _pipe_time:
   249                           	opt callstack 0
   250  00003D                     	ds	10
   251                           
   252                           	psect	dataCOMRAM
   253  000079                     __pdataCOMRAM:
   254                           	opt callstack 0
   255  000079                     _quantum:
   256                           	opt callstack 0
   257  000079                     	ds	2
   258                           
   259                           	psect	bssBANK0
   260  000080                     __pbssBANK0:
   261                           	opt callstack 0
   262  000080                     _s_pipe_start:
   263                           	opt callstack 0
   264  000080                     	ds	14
   265  00008E                     _s_pipe_time:
   266                           	opt callstack 0
   267  00008E                     	ds	14
   268  00009C                     _s_pipe:
   269                           	opt callstack 0
   270  00009C                     	ds	14
   271  0000AA                     _teste_2:
   272                           	opt callstack 0
   273  0000AA                     	ds	14
   274  0000B8                     _teste_1:
   275                           	opt callstack 0
   276  0000B8                     	ds	14
   277  0000C6                     _pipe_start:
   278                           	opt callstack 0
   279  0000C6                     	ds	10
   280  0000D0                     _p:
   281                           	opt callstack 0
   282  0000D0                     	ds	10
   283                           
   284                           	psect	bssBIGRAM
   285  0000DA                     __pbssBIGRAM:
   286                           	opt callstack 0
   287  0000DA                     _ready_queue:
   288                           	opt callstack 0
   289  0000DA                     	ds	544
   290  0002FA                     __uDynamicHeap:
   291                           	opt callstack 0
   292  0002FA                     	ds	512
   293                           
   294                           	psect	cstackCOMRAM
   295  000067                     __pcstackCOMRAM:
   296                           	opt callstack 0
   297  000067                     ??_ISR_timer0:
   298                           
   299                           ; 1 bytes @ 0x0
   300  000067                     	ds	18
   301                           
   302 ;;
   303 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   304 ;;
   305 ;; *************** function _main *****************
   306 ;; Defined at:
   307 ;;		line 18 in file "main.c"
   308 ;; Parameters:    Size  Location     Type
   309 ;;		None
   310 ;; Auto vars:     Size  Location     Type
   311 ;;		None
   312 ;; Return value:  Size  Location     Type
   313 ;;                  1  [STACK] void 
   314 ;; Registers used:
   315 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
   316 ;; Tracked objects:
   317 ;;		On entry : 0/0
   318 ;;		On exit  : 0/0
   319 ;;		Unchanged: 0/0
   320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   321 ;;      Params:         0       0       0       0       0       0       0
   322 ;;      Locals:         0       0       0       0       0       0       0
   323 ;;      Temps:          0       0       0       0       0       0       0
   324 ;;      Totals:         0       0       0       0       0       0       0
   325 ;;Total ram usage:        0 bytes
   326 ;; Hardware stack levels required when called:   16
   327 ;; This function calls:
   328 ;;		_config_INT0
   329 ;;		_config_timer0
   330 ;;		_dispatcher
   331 ;;		_lunos_createTask
   332 ;;		_lunos_init
   333 ;;		_micro_setup
   334 ;; This function is called by:
   335 ;;		Startup code after reset
   336 ;; This function uses a reentrant model
   337 ;;
   338                           
   339                           	psect	text0
   340  0016B6                     __ptext0:
   341                           	opt callstack 0
   342  0016B6                     _main:
   343                           	opt callstack 15
   344                           
   345                           ;main.c: 20: 
   346                           
   347                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   348                           ;incstack = 0
   349  0016B6  EC7C  F00B         	call	_lunos_init	;wreg free
   350                           
   351                           ;main.c: 23: 
   352  0016BA  ECBD  F00B         	call	_config_INT0	;wreg free
   353                           
   354                           ;main.c: 24: 
   355  0016BE  ECC7  F00B         	call	_config_timer0	;wreg free
   356                           
   357                           ;main.c: 26: 
   358  0016C2  EC43  F009         	call	_micro_setup	;wreg free
   359  0016C6  0EA8               	movlw	low _task_keyboard
   360  0016C8  6EE6               	movwf	postinc1,c
   361  0016CA  0E15               	movlw	high _task_keyboard
   362  0016CC  6EE6               	movwf	postinc1,c
   363  0016CE  0E05               	movlw	5
   364  0016D0  6EE6               	movwf	postinc1,c
   365  0016D2  0E00               	movlw	0
   366  0016D4  6EE6               	movwf	postinc1,c
   367  0016D6  ECE7  F006         	call	_lunos_createTask	;wreg free
   368  0016DA  0E5A               	movlw	low _task_2heat
   369  0016DC  6EE6               	movwf	postinc1,c
   370  0016DE  0E17               	movlw	high _task_2heat
   371  0016E0  6EE6               	movwf	postinc1,c
   372  0016E2  0E05               	movlw	5
   373  0016E4  6EE6               	movwf	postinc1,c
   374  0016E6  0E00               	movlw	0
   375  0016E8  6EE6               	movwf	postinc1,c
   376  0016EA  ECE7  F006         	call	_lunos_createTask	;wreg free
   377  0016EE  0E00               	movlw	0
   378  0016F0  6EE6               	movwf	postinc1,c
   379  0016F2  EC9A  F003         	call	_dispatcher	;wreg free
   380  0016F6                     l249:
   381  0016F6  D7FF               	goto	l249
   382  0016F8                     __end_of_main:
   383                           	opt callstack 0
   384                           
   385 ;; *************** function _pipe_create *****************
   386 ;; Defined at:
   387 ;;		line 9 in file "pipe.c"
   388 ;; Parameters:    Size  Location     Type
   389 ;;  p               2  [STACK] PTR struct pipe
   390 ;;		 -> pipe_start(10), pipe_time(10), p(10), 
   391 ;;  s               2  [STACK] PTR struct semaphore
   392 ;;		 -> s_pipe_start(14), s_pipe_time(14), s_pipe(14), 
   393 ;; Auto vars:     Size  Location     Type
   394 ;;		None
   395 ;; Return value:  Size  Location     Type
   396 ;;                  1  [STACK] void 
   397 ;; Registers used:
   398 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
   399 ;; Tracked objects:
   400 ;;		On entry : 0/0
   401 ;;		On exit  : 0/0
   402 ;;		Unchanged: 0/0
   403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   404 ;;      Params:         0       0       0       0       0       0       0
   405 ;;      Locals:         0       0       0       0       0       0       0
   406 ;;      Temps:          0       0       0       0       0       0       0
   407 ;;      Totals:         0       0       0       0       0       0       0
   408 ;;Total ram usage:        0 bytes
   409 ;; Hardware stack levels used:    1
   410 ;; Hardware stack levels required when called:   13
   411 ;; This function calls:
   412 ;;		_sem_init
   413 ;; This function is called by:
   414 ;;		_micro_setup
   415 ;; This function uses a reentrant model
   416 ;;
   417                           
   418                           	psect	text1
   419  001068                     __ptext1:
   420                           	opt callstack 0
   421  001068                     _pipe_create:
   422                           	opt callstack 12
   423                           
   424                           ;pipe.c: 10:   p->index_write = 0;
   425                           ;stkvar	_p @ sp[(0)+-2]
   426                           
   427                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   428                           ;incstack = 0
   429  001068  0EFE               	movlw	-2
   430  00106A  CFE3 F051          	movff	plusw1,btemp+10
   431  00106E  0EFF               	movlw	-1
   432  001070  CFE3 F052          	movff	plusw1,btemp+11
   433  001074  0E02               	movlw	2
   434  001076  2451               	addwf	btemp+10,w,c
   435  001078  6ED9               	movwf	fsr2l,c
   436  00107A  0E00               	movlw	0
   437  00107C  2052               	addwfc	btemp+11,w,c
   438  00107E  6EDA               	movwf	fsr2h,c
   439  001080  0E00               	movlw	0
   440  001082  6EDE               	movwf	postinc2,c
   441  001084  0E00               	movlw	0
   442  001086  6EDD               	movwf	postdec2,c
   443                           
   444                           ;pipe.c: 11:   p->index_read = 0;
   445                           ;stkvar	_p @ sp[(0)+-2]
   446  001088  0EFE               	movlw	-2
   447  00108A  CFE3 F051          	movff	plusw1,btemp+10
   448  00108E  0EFF               	movlw	-1
   449  001090  CFE3 F052          	movff	plusw1,btemp+11
   450  001094  0E04               	movlw	4
   451  001096  2451               	addwf	btemp+10,w,c
   452  001098  6ED9               	movwf	fsr2l,c
   453  00109A  0E00               	movlw	0
   454  00109C  2052               	addwfc	btemp+11,w,c
   455  00109E  6EDA               	movwf	fsr2h,c
   456  0010A0  0E00               	movlw	0
   457  0010A2  6EDE               	movwf	postinc2,c
   458  0010A4  0E00               	movlw	0
   459  0010A6  6EDD               	movwf	postdec2,c
   460                           
   461                           ;pipe.c: 12:   p->p_size = 0;
   462                           ;stkvar	_p @ sp[(0)+-2]
   463  0010A8  0EFE               	movlw	-2
   464  0010AA  CFE3 F051          	movff	plusw1,btemp+10
   465  0010AE  0EFF               	movlw	-1
   466  0010B0  CFE3 F052          	movff	plusw1,btemp+11
   467  0010B4  0E06               	movlw	6
   468  0010B6  2451               	addwf	btemp+10,w,c
   469  0010B8  6ED9               	movwf	fsr2l,c
   470  0010BA  0E00               	movlw	0
   471  0010BC  2052               	addwfc	btemp+11,w,c
   472  0010BE  6EDA               	movwf	fsr2h,c
   473  0010C0  0E00               	movlw	0
   474  0010C2  6EDE               	movwf	postinc2,c
   475  0010C4  0E00               	movlw	0
   476  0010C6  6EDD               	movwf	postdec2,c
   477                           
   478                           ;pipe.c: 13:   p->s = s;
   479                           ;stkvar	_s @ sp[(0)+-4]
   480  0010C8  50E1               	movf	fsr1l,w,c
   481  0010CA  0FFC               	addlw	-4
   482  0010CC  6ED9               	movwf	fsr2l,c
   483  0010CE  50E2               	movf	fsr1h,w,c
   484  0010D0  6EDA               	movwf	fsr2h,c
   485  0010D2  0EFF               	movlw	255
   486  0010D4  22DA               	addwfc	fsr2h,f,c
   487                           
   488                           ;stkvar	_p @ sp[(0)+-2]
   489  0010D6  0EFE               	movlw	-2
   490  0010D8  CFE3 F051          	movff	plusw1,btemp+10
   491  0010DC  0EFF               	movlw	-1
   492  0010DE  CFE3 F052          	movff	plusw1,btemp+11
   493  0010E2  0E08               	movlw	8
   494  0010E4  2451               	addwf	btemp+10,w,c
   495  0010E6  6EE9               	movwf	fsr0l,c
   496  0010E8  0E00               	movlw	0
   497  0010EA  2052               	addwfc	btemp+11,w,c
   498  0010EC  6EEA               	movwf	fsr0h,c
   499  0010EE  CFDE FFEE          	movff	postinc2,postinc0
   500  0010F2  CFDD FFED          	movff	postdec2,postdec0
   501                           
   502                           ;pipe.c: 14:   sem_init(p->s, 0);
   503  0010F6  0E00               	movlw	0
   504  0010F8  6EE6               	movwf	postinc1,c
   505  0010FA  0E00               	movlw	0
   506  0010FC  6EE6               	movwf	postinc1,c
   507                           
   508                           ;stkvar	_p @ sp[(-2)+-2]
   509  0010FE  0EFC               	movlw	-4
   510  001100  CFE3 F051          	movff	plusw1,btemp+10
   511  001104  0EFD               	movlw	-3
   512  001106  CFE3 F052          	movff	plusw1,btemp+11
   513  00110A  0E08               	movlw	8
   514  00110C  2451               	addwf	btemp+10,w,c
   515  00110E  6ED9               	movwf	fsr2l,c
   516  001110  0E00               	movlw	0
   517  001112  2052               	addwfc	btemp+11,w,c
   518  001114  6EDA               	movwf	fsr2h,c
   519  001116  CFDE F051          	movff	postinc2,btemp+10
   520  00111A  CFDD F052          	movff	postdec2,btemp+11
   521  00111E  C051  FFE6         	movff	btemp+10,postinc1
   522  001122  C052  FFE6         	movff	btemp+11,postinc1
   523  001126  EC9C  F00A         	call	_sem_init	;wreg free
   524                           
   525                           ; _pipe_create: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, a
      +                          rgsize = 4, vargsize = 0
   526  00112A  52E5               	movf	postdec1,f,c
   527  00112C  52E5               	movf	postdec1,f,c
   528  00112E  52E5               	movf	postdec1,f,c
   529  001130  52E5               	movf	postdec1,f,c
   530  001132  0012               	return		;funcret
   531  001134                     __end_of_pipe_create:
   532                           	opt callstack 0
   533                           
   534 ;; *************** function _sem_init *****************
   535 ;; Defined at:
   536 ;;		line 10 in file "semaphore.c"
   537 ;; Parameters:    Size  Location     Type
   538 ;;  s               2  [STACK] PTR struct semaphore
   539 ;;		 -> s_pipe_start(14), s_pipe_time(14), s_pipe(14), teste_2(14), 
   540 ;;		 -> teste_1(14), s_time(14), s_count(14), s_started(14), 
   541 ;;  valor           2  [STACK] int 
   542 ;; Auto vars:     Size  Location     Type
   543 ;;		None
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1  [STACK] void 
   546 ;; Registers used:
   547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   553 ;;      Params:         0       0       0       0       0       0       0
   554 ;;      Locals:         0       0       0       0       0       0       0
   555 ;;      Temps:          0       0       0       0       0       0       0
   556 ;;      Totals:         0       0       0       0       0       0       0
   557 ;;Total ram usage:        0 bytes
   558 ;; Hardware stack levels used:    1
   559 ;; Hardware stack levels required when called:   12
   560 ;; This function calls:
   561 ;;		Nothing
   562 ;; This function is called by:
   563 ;;		_pipe_create
   564 ;;		_micro_setup
   565 ;; This function uses a reentrant model
   566 ;;
   567                           
   568                           	psect	text2
   569  001538                     __ptext2:
   570                           	opt callstack 0
   571  001538                     _sem_init:
   572                           	opt callstack 13
   573                           
   574                           ;semaphore.c: 11:   INTCONbits.GIE = 0;
   575                           
   576                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   577                           ;incstack = 0
   578  001538  9EF2               	bcf	4082,7,c	;volatile
   579                           
   580                           ;semaphore.c: 13:   s->contador = valor;
   581                           ;stkvar	_valor @ sp[(0)+-4]
   582  00153A  50E1               	movf	fsr1l,w,c
   583  00153C  0FFC               	addlw	-4
   584  00153E  6ED9               	movwf	fsr2l,c
   585  001540  50E2               	movf	fsr1h,w,c
   586  001542  6EDA               	movwf	fsr2h,c
   587  001544  0EFF               	movlw	255
   588  001546  22DA               	addwfc	fsr2h,f,c
   589                           
   590                           ;stkvar	_s @ sp[(0)+-2]
   591  001548  0EFE               	movlw	-2
   592  00154A  CFE3 FFE9          	movff	plusw1,fsr0l
   593  00154E  0EFF               	movlw	-1
   594  001550  CFE3 FFEA          	movff	plusw1,fsr0h
   595  001554  CFDE FFEE          	movff	postinc2,postinc0
   596  001558  CFDD FFED          	movff	postdec2,postdec0
   597                           
   598                           ;semaphore.c: 14:   s->bloqued_size = 0;
   599                           ;stkvar	_s @ sp[(0)+-2]
   600  00155C  0EFE               	movlw	-2
   601  00155E  CFE3 F051          	movff	plusw1,btemp+10
   602  001562  0EFF               	movlw	-1
   603  001564  CFE3 F052          	movff	plusw1,btemp+11
   604  001568  0E0A               	movlw	10
   605  00156A  2451               	addwf	btemp+10,w,c
   606  00156C  6ED9               	movwf	fsr2l,c
   607  00156E  0E00               	movlw	0
   608  001570  2052               	addwfc	btemp+11,w,c
   609  001572  6EDA               	movwf	fsr2h,c
   610  001574  0E00               	movlw	0
   611  001576  6EDE               	movwf	postinc2,c
   612  001578  0E00               	movlw	0
   613  00157A  6EDD               	movwf	postdec2,c
   614                           
   615                           ;semaphore.c: 15:   s->task_to_ready = 0;
   616                           ;stkvar	_s @ sp[(0)+-2]
   617  00157C  0EFE               	movlw	-2
   618  00157E  CFE3 F051          	movff	plusw1,btemp+10
   619  001582  0EFF               	movlw	-1
   620  001584  CFE3 F052          	movff	plusw1,btemp+11
   621  001588  0E0C               	movlw	12
   622  00158A  2451               	addwf	btemp+10,w,c
   623  00158C  6ED9               	movwf	fsr2l,c
   624  00158E  0E00               	movlw	0
   625  001590  2052               	addwfc	btemp+11,w,c
   626  001592  6EDA               	movwf	fsr2h,c
   627  001594  0E00               	movlw	0
   628  001596  6EDE               	movwf	postinc2,c
   629  001598  0E00               	movlw	0
   630  00159A  6EDD               	movwf	postdec2,c
   631                           
   632                           ;semaphore.c: 17:   INTCONbits.GIE = 1;
   633  00159C  8EF2               	bsf	4082,7,c	;volatile
   634                           
   635                           ; _sem_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
   636  00159E  52E5               	movf	postdec1,f,c
   637  0015A0  52E5               	movf	postdec1,f,c
   638  0015A2  52E5               	movf	postdec1,f,c
   639  0015A4  52E5               	movf	postdec1,f,c
   640  0015A6  0012               	return		;funcret
   641  0015A8                     __end_of_sem_init:
   642                           	opt callstack 0
   643                           
   644 ;; *************** function _lunos_init *****************
   645 ;; Defined at:
   646 ;;		line 50 in file "kernel.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;		None
   649 ;; Auto vars:     Size  Location     Type
   650 ;;		None
   651 ;; Return value:  Size  Location     Type
   652 ;;                  1  [STACK] void 
   653 ;; Registers used:
   654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
   655 ;; Tracked objects:
   656 ;;		On entry : 0/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   660 ;;      Params:         0       0       0       0       0       0       0
   661 ;;      Locals:         0       0       0       0       0       0       0
   662 ;;      Temps:          0       0       0       0       0       0       0
   663 ;;      Totals:         0       0       0       0       0       0       0
   664 ;;Total ram usage:        0 bytes
   665 ;; Hardware stack levels used:    1
   666 ;; Hardware stack levels required when called:   13
   667 ;; This function calls:
   668 ;;		_SRAMInitHeap
   669 ;;		_lunos_createTask
   670 ;; This function is called by:
   671 ;;		_main
   672 ;; This function uses a reentrant model
   673 ;;
   674                           
   675                           	psect	text3
   676  0016F8                     __ptext3:
   677                           	opt callstack 0
   678  0016F8                     _lunos_init:
   679                           	opt callstack 17
   680                           
   681                           ;kernel.c: 51:   SRAMInitHeap();
   682                           
   683                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   684                           ;incstack = 0
   685  0016F8  ECCD  F007         	call	_SRAMInitHeap	;wreg free
   686                           
   687                           ;kernel.c: 52:   ready_queue.task_running = 0;
   688  0016FC  0E00               	movlw	0
   689  0016FE  CFE8 F2F8          	movff	wreg,_ready_queue+542
   690  001702  0E00               	movlw	0
   691  001704  CFE8 F2F9          	movff	wreg,_ready_queue+543
   692                           
   693                           ;kernel.c: 53:   ready_queue.tasks_installed = 0;
   694  001708  0E00               	movlw	0
   695  00170A  CFE8 F2F6          	movff	wreg,_ready_queue+540
   696  00170E  0E00               	movlw	0
   697  001710  CFE8 F2F7          	movff	wreg,_ready_queue+541
   698                           
   699                           ;kernel.c: 54:   lunos_createTask(0, &task_idle);
   700  001714  0EA6               	movlw	low _task_idle
   701  001716  6EE6               	movwf	postinc1,c
   702  001718  0E17               	movlw	high _task_idle
   703  00171A  6EE6               	movwf	postinc1,c
   704  00171C  0E00               	movlw	0
   705  00171E  6EE6               	movwf	postinc1,c
   706  001720  0E00               	movlw	0
   707  001722  6EE6               	movwf	postinc1,c
   708  001724  ECE7  F006         	call	_lunos_createTask	;wreg free
   709                           
   710                           ; _lunos_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
   711  001728  0012               	return		;funcret
   712  00172A                     __end_of_lunos_init:
   713                           	opt callstack 0
   714                           
   715 ;; *************** function _lunos_createTask *****************
   716 ;; Defined at:
   717 ;;		line 14 in file "kernel.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;  prior           2  [STACK] unsigned int 
   720 ;;  f               2  [STACK] PTR FTN()void 
   721 ;;		 -> task_2heat(1), task_keyboard(1), task_idle(1), 
   722 ;; Auto vars:     Size  Location     Type
   723 ;;  new_task      108  [STACK] struct pcb
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1  [STACK] void 
   726 ;; Registers used:
   727 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, pro
      +dh
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   733 ;;      Params:         0       0       0       0       0       0       0
   734 ;;      Locals:         0       0       0       0       0       0       0
   735 ;;      Temps:          0       0       0       0       0       0       0
   736 ;;      Totals:         0       0       0       0       0       0       0
   737 ;;Total ram usage:        0 bytes
   738 ;; Hardware stack levels used:    1
   739 ;; Hardware stack levels required when called:   12
   740 ;; This function calls:
   741 ;;		Nothing
   742 ;; This function is called by:
   743 ;;		_lunos_init
   744 ;;		_main
   745 ;; This function uses a reentrant model
   746 ;;
   747                           
   748                           	psect	text4
   749  000DCE                     __ptext4:
   750                           	opt callstack 0
   751  000DCE                     _lunos_createTask:
   752                           	opt callstack 0
   753                           
   754                           ; autosize = 108, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 v
      +                          argsize = 0, retsize = 0 argfudge = 0
   755  000DCE  0E6C               	movlw	108
   756  000DD0  26E1               	addwf	fsr1l,f,c
   757  000DD2  0E00               	movlw	0
   758  000DD4  22E2               	addwfc	fsr1h,f,c
   759                           
   760                           ;kernel.c: 15:   t_pcb new_task;;kernel.c: 18:   new_task.task_id = ready_queue.tasks_in
      +                          stalled + 1;
   761                           
   762                           ;incstack = 0
   763  000DD6  EE22  F0F6         	lfsr	2,_ready_queue+540
   764  000DDA  CFDE F051          	movff	postinc2,btemp+10
   765  000DDE  CFDD F052          	movff	postdec2,btemp+11
   766  000DE2  0E01               	movlw	1
   767  000DE4  2651               	addwf	btemp+10,f,c
   768  000DE6  0E00               	movlw	0
   769  000DE8  2252               	addwfc	btemp+11,f,c
   770                           
   771                           ;stkvar	_new_task @ sp[(-108)+0]
   772  000DEA  0E94               	movlw	-108
   773  000DEC  C051  FFE3         	movff	btemp+10,plusw1
   774  000DF0  0E95               	movlw	-107
   775  000DF2  C052  FFE3         	movff	btemp+11,plusw1
   776                           
   777                           ;kernel.c: 19:   new_task.task_prior = prior;
   778                           ;stkvar	_prior @ sp[(-108)+-2]
   779  000DF6  50E1               	movf	fsr1l,w,c
   780  000DF8  0F92               	addlw	-110
   781  000DFA  6ED9               	movwf	fsr2l,c
   782  000DFC  50E2               	movf	fsr1h,w,c
   783  000DFE  6EDA               	movwf	fsr2h,c
   784  000E00  0EFF               	movlw	255
   785  000E02  22DA               	addwfc	fsr2h,f,c
   786                           
   787                           ;stkvar	_new_task @ sp[(-108)+0]
   788  000E04  0E96               	movlw	150
   789  000E06  24E1               	addwf	fsr1l,w,c
   790  000E08  6EE9               	movwf	fsr0l,c
   791  000E0A  0EFF               	movlw	255
   792  000E0C  20E2               	addwfc	fsr1h,w,c
   793  000E0E  6EEA               	movwf	fsr0h,c
   794  000E10  CFDE FFEE          	movff	postinc2,postinc0
   795  000E14  CFDD FFED          	movff	postdec2,postdec0
   796                           
   797                           ;kernel.c: 20:   new_task.task_state = READY;
   798                           ;stkvar	_new_task @ sp[(-108)+0]
   799  000E18  0E9C               	movlw	156
   800  000E1A  24E1               	addwf	fsr1l,w,c
   801  000E1C  6ED9               	movwf	fsr2l,c
   802  000E1E  0EFF               	movlw	255
   803  000E20  20E2               	addwfc	fsr1h,w,c
   804  000E22  6EDA               	movwf	fsr2h,c
   805  000E24  0E00               	movlw	0
   806  000E26  6EDF               	movwf	indf2,c
   807                           
   808                           ;kernel.c: 21:   new_task.task_f = f;
   809                           ;stkvar	_f @ sp[(-108)+-4]
   810  000E28  50E1               	movf	fsr1l,w,c
   811  000E2A  0F90               	addlw	-112
   812  000E2C  6ED9               	movwf	fsr2l,c
   813  000E2E  50E2               	movf	fsr1h,w,c
   814  000E30  6EDA               	movwf	fsr2h,c
   815  000E32  0EFF               	movlw	255
   816  000E34  22DA               	addwfc	fsr2h,f,c
   817                           
   818                           ;stkvar	_new_task @ sp[(-108)+0]
   819  000E36  0EFC               	movlw	252
   820  000E38  24E1               	addwf	fsr1l,w,c
   821  000E3A  6EE9               	movwf	fsr0l,c
   822  000E3C  0EFF               	movlw	255
   823  000E3E  20E2               	addwfc	fsr1h,w,c
   824  000E40  6EEA               	movwf	fsr0h,c
   825  000E42  CFDE FFEE          	movff	postinc2,postinc0
   826  000E46  CFDD FFED          	movff	postdec2,postdec0
   827                           
   828                           ;kernel.c: 22:   new_task.task_stack.stack_level = 0;
   829                           ;stkvar	_new_task @ sp[(-108)+0]
   830  000E4A  0EFA               	movlw	250
   831  000E4C  24E1               	addwf	fsr1l,w,c
   832  000E4E  6ED9               	movwf	fsr2l,c
   833  000E50  0EFF               	movlw	255
   834  000E52  20E2               	addwfc	fsr1h,w,c
   835  000E54  6EDA               	movwf	fsr2h,c
   836  000E56  0E00               	movlw	0
   837  000E58  6EDE               	movwf	postinc2,c
   838  000E5A  0E00               	movlw	0
   839  000E5C  6EDD               	movwf	postdec2,c
   840                           
   841                           ;kernel.c: 23:   new_task.task_delay_time = 0;
   842                           ;stkvar	_new_task @ sp[(-108)+0]
   843  000E5E  0EFE               	movlw	254
   844  000E60  24E1               	addwf	fsr1l,w,c
   845  000E62  6ED9               	movwf	fsr2l,c
   846  000E64  0EFF               	movlw	255
   847  000E66  20E2               	addwfc	fsr1h,w,c
   848  000E68  6EDA               	movwf	fsr2h,c
   849  000E6A  0E00               	movlw	0
   850  000E6C  6EDE               	movwf	postinc2,c
   851  000E6E  0E00               	movlw	0
   852  000E70  6EDD               	movwf	postdec2,c
   853                           
   854                           ;kernel.c: 26:   ready_queue.tasks[ready_queue.tasks_installed] = new_task;
   855                           ;stkvar	_new_task @ sp[(-108)+0]
   856  000E72  0E94               	movlw	148
   857  000E74  24E1               	addwf	fsr1l,w,c
   858  000E76  6ED9               	movwf	fsr2l,c
   859  000E78  0EFF               	movlw	255
   860  000E7A  20E2               	addwfc	fsr1h,w,c
   861  000E7C  6EDA               	movwf	fsr2h,c
   862  000E7E  EE02  F0F6         	lfsr	0,_ready_queue+540
   863  000E82  CFEE F051          	movff	postinc0,btemp+10
   864  000E86  CFED F052          	movff	postdec0,btemp+11
   865  000E8A  0E6C               	movlw	108
   866  000E8C  0251               	mulwf	btemp+10,c
   867  000E8E  CFF3 F04F          	movff	prodl,btemp+8
   868  000E92  CFF4 F050          	movff	prodh,btemp+9
   869  000E96  0252               	mulwf	btemp+11,c
   870  000E98  50F3               	movf	prodl,w,c
   871  000E9A  2650               	addwf	btemp+9,f,c
   872  000E9C  0EDA               	movlw	low _ready_queue
   873  000E9E  244F               	addwf	btemp+8,w,c
   874  000EA0  6EE9               	movwf	fsr0l,c
   875  000EA2  0E00               	movlw	high _ready_queue
   876  000EA4  2050               	addwfc	btemp+9,w,c
   877  000EA6  6EEA               	movwf	fsr0h,c
   878  000EA8  0E6B               	movlw	107
   879  000EAA                     u431:
   880  000EAA  CFDB FFEB          	movff	plusw2,plusw0
   881  000EAE  06E8               	decf	wreg,f,c
   882  000EB0  E2FC               	bc	u431
   883                           
   884                           ;kernel.c: 27:   ready_queue.tasks_installed++;
   885  000EB2  EE22  F0F6         	lfsr	2,_ready_queue+540
   886  000EB6  2ADE               	incf	postinc2,f,c
   887  000EB8  0E00               	movlw	0
   888  000EBA  22DD               	addwfc	postdec2,f,c
   889                           
   890                           ; _lunos_createTask: autosize = 108, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 4, argsize = 4, vargsize = 0
   891  000EBC  0E90               	movlw	144
   892  000EBE  26E1               	addwf	fsr1l,f,c
   893  000EC0  0EFF               	movlw	255
   894  000EC2  22E2               	addwfc	fsr1h,f,c
   895  000EC4  0012               	return		;funcret
   896  000EC6                     __end_of_lunos_createTask:
   897                           	opt callstack 0
   898                           
   899 ;; *************** function _SRAMInitHeap *****************
   900 ;; Defined at:
   901 ;;		line 313 in file "sralloc.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;  count           2  [STACK] unsigned int 
   906 ;;  pHeap           2  [STACK] PTR unsigned char 
   907 ;;		 -> _uDynamicHeap(512), 
   908 ;; Return value:  Size  Location     Type
   909 ;;                  1  [STACK] void 
   910 ;; Registers used:
   911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   917 ;;      Params:         0       0       0       0       0       0       0
   918 ;;      Locals:         0       0       0       0       0       0       0
   919 ;;      Temps:          0       0       0       0       0       0       0
   920 ;;      Totals:         0       0       0       0       0       0       0
   921 ;;Total ram usage:        0 bytes
   922 ;; Hardware stack levels used:    1
   923 ;; Hardware stack levels required when called:   12
   924 ;; This function calls:
   925 ;;		Nothing
   926 ;; This function is called by:
   927 ;;		_lunos_init
   928 ;; This function uses a reentrant model
   929 ;;
   930                           
   931                           	psect	text5
   932  000F9A                     __ptext5:
   933                           	opt callstack 0
   934  000F9A                     _SRAMInitHeap:
   935                           	opt callstack 0
   936                           
   937                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   938  000F9A  52E6               	movf	postinc1,f,c
   939  000F9C  52E6               	movf	postinc1,f,c
   940  000F9E  52E6               	movf	postinc1,f,c
   941  000FA0  52E6               	movf	postinc1,f,c
   942                           
   943                           ;sralloc.c: 315:  unsigned char * pHeap;;sralloc.c: 316:       unsigned int count;;srall
      +                          oc.c: 318:  pHeap = _uDynamicHeap;
   944                           ;stkvar	_pHeap @ sp[(-4)+2]
   945                           
   946                           ;incstack = 0
   947  000FA2  0E02               	movlw	high __uDynamicHeap
   948  000FA4  6E47               	movwf	btemp,c
   949  000FA6  0EFF               	movlw	-1
   950  000FA8  C047  FFE3         	movff	btemp,plusw1
   951  000FAC  0EFA               	movlw	low __uDynamicHeap
   952  000FAE  6E47               	movwf	btemp,c
   953  000FB0  0EFE               	movlw	-2
   954  000FB2  C047  FFE3         	movff	btemp,plusw1
   955                           
   956                           ;sralloc.c: 319:  count = 0x200 -1;
   957  000FB6  0EFF               	movlw	255
   958  000FB8  6E51               	movwf	btemp+10,c
   959  000FBA  0E01               	movlw	1
   960  000FBC  6E52               	movwf	btemp+11,c
   961                           
   962                           ;stkvar	_count @ sp[(-4)+0]
   963  000FBE  0EFC               	movlw	-4
   964  000FC0  C051  FFE3         	movff	btemp+10,plusw1
   965  000FC4  0EFD               	movlw	-3
   966  000FC6  C052  FFE3         	movff	btemp+11,plusw1
   967  000FCA                     l1819:
   968                           
   969                           ;sralloc.c: 322:  {;sralloc.c: 323:   if (count > 0x7F)
   970                           ;stkvar	_count @ sp[(-4)+0]
   971  000FCA  0EFD               	movlw	-3
   972  000FCC  50E3               	movf	plusw1,w,c
   973  000FCE  E107               	bnz	u470
   974  000FD0  0EFC               	movlw	-4
   975  000FD2  CFE3 F047          	movff	plusw1,btemp
   976  000FD6  0E80               	movlw	128
   977  000FD8  5E47               	subwf	btemp,f,c
   978  000FDA  A0D8               	btfss	status,0,c
   979  000FDC  D023               	goto	l1827
   980  000FDE                     u470:
   981                           
   982                           ;sralloc.c: 324:   {;sralloc.c: 325:    *pHeap = 0x7F;
   983                           ;stkvar	_pHeap @ sp[(-4)+2]
   984  000FDE  0EFE               	movlw	-2
   985  000FE0  CFE3 FFD9          	movff	plusw1,fsr2l
   986  000FE4  0EFF               	movlw	-1
   987  000FE6  CFE3 FFDA          	movff	plusw1,fsr2h
   988  000FEA  0E7F               	movlw	127
   989  000FEC  6EDF               	movwf	indf2,c
   990                           
   991                           ;sralloc.c: 326:    pHeap += 0x7F;
   992                           ;stkvar	_pHeap @ sp[(-4)+2]
   993  000FEE  0EFE               	movlw	-2
   994  000FF0  50E3               	movf	plusw1,w,c
   995  000FF2  0F7F               	addlw	127
   996  000FF4  6E47               	movwf	btemp,c
   997  000FF6  0EFE               	movlw	-2
   998  000FF8  C047  FFE3         	movff	btemp,plusw1
   999  000FFC  6A47               	clrf	btemp,c
  1000  000FFE  0EFF               	movlw	-1
  1001  001000  50E3               	movf	plusw1,w,c
  1002  001002  2047               	addwfc	btemp,w,c
  1003  001004  6E47               	movwf	btemp,c
  1004  001006  0EFF               	movlw	-1
  1005  001008  C047  FFE3         	movff	btemp,plusw1
  1006                           
  1007                           ;sralloc.c: 327:    count = count - 0x7F;
  1008                           ;stkvar	_count @ sp[(-4)+0]
  1009  00100C  50E1               	movf	fsr1l,w,c
  1010  00100E  0FFC               	addlw	-4
  1011  001010  6ED9               	movwf	fsr2l,c
  1012  001012  50E2               	movf	fsr1h,w,c
  1013  001014  6EDA               	movwf	fsr2h,c
  1014  001016  0EFF               	movlw	255
  1015  001018  22DA               	addwfc	fsr2h,f,c
  1016  00101A  0E81               	movlw	129
  1017  00101C  26DE               	addwf	postinc2,f,c
  1018  00101E  0EFF               	movlw	255
  1019  001020  22DD               	addwfc	postdec2,f,c
  1020                           
  1021                           ;sralloc.c: 328:   }
  1022  001022  D7D3               	goto	l1819
  1023  001024                     l1827:
  1024                           
  1025                           ;sralloc.c: 330:   {;sralloc.c: 331:    *pHeap = count;
  1026                           ;stkvar	_count @ sp[(-4)+0]
  1027                           ;stkvar	_pHeap @ sp[(-4)+2]
  1028  001024  0EFE               	movlw	-2
  1029  001026  CFE3 FFD9          	movff	plusw1,fsr2l
  1030  00102A  0EFF               	movlw	-1
  1031  00102C  CFE3 FFDA          	movff	plusw1,fsr2h
  1032  001030  0EFC               	movlw	-4
  1033  001032  CFE3 FFDF          	movff	plusw1,indf2
  1034                           
  1035                           ;sralloc.c: 332:    *(pHeap + count) = 0;
  1036                           ;stkvar	_count @ sp[(-4)+0]
  1037  001036  0EFC               	movlw	-4
  1038  001038  CFE3 F051          	movff	plusw1,btemp+10
  1039  00103C  0EFD               	movlw	-3
  1040  00103E  CFE3 F052          	movff	plusw1,btemp+11
  1041                           
  1042                           ;stkvar	_pHeap @ sp[(-4)+2]
  1043  001042  0EFE               	movlw	-2
  1044  001044  CFE3 F04F          	movff	plusw1,btemp+8
  1045  001048  0EFF               	movlw	-1
  1046  00104A  CFE3 F050          	movff	plusw1,btemp+9
  1047  00104E  5051               	movf	btemp+10,w,c
  1048  001050  244F               	addwf	btemp+8,w,c
  1049  001052  6ED9               	movwf	fsr2l,c
  1050  001054  5052               	movf	btemp+11,w,c
  1051  001056  2050               	addwfc	btemp+9,w,c
  1052  001058  6EDA               	movwf	fsr2h,c
  1053  00105A  0E00               	movlw	0
  1054  00105C  6EDF               	movwf	indf2,c
  1055                           
  1056                           ; _SRAMInitHeap: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  1057  00105E  52E5               	movf	postdec1,f,c
  1058  001060  52E5               	movf	postdec1,f,c
  1059  001062  52E5               	movf	postdec1,f,c
  1060  001064  52E5               	movf	postdec1,f,c
  1061  001066  0012               	return		;funcret
  1062  001068                     __end_of_SRAMInitHeap:
  1063                           	opt callstack 0
  1064                           
  1065 ;; *************** function _dispatcher *****************
  1066 ;; Defined at:
  1067 ;;		line 65 in file "kernel.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;  state           1  [STACK] enum E4
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;		None
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  1  [STACK] void 
  1074 ;; Registers used:
  1075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl, prodh
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1081 ;;      Params:         0       0       0       0       0       0       0
  1082 ;;      Locals:         0       0       0       0       0       0       0
  1083 ;;      Temps:          0       0       0       0       0       0       0
  1084 ;;      Totals:         0       0       0       0       0       0       0
  1085 ;;Total ram usage:        0 bytes
  1086 ;; Hardware stack levels used:    1
  1087 ;; Hardware stack levels required when called:   15
  1088 ;; This function calls:
  1089 ;;		_scheduler
  1090 ;; This function is called by:
  1091 ;;		_lunos_delayTask
  1092 ;;		_main
  1093 ;;		_sem_wait
  1094 ;;		_sem_post
  1095 ;; This function uses a reentrant model
  1096 ;;
  1097                           
  1098                           	psect	text6
  1099  000734                     __ptext6:
  1100                           	opt callstack 0
  1101  000734                     _dispatcher:
  1102                           	opt callstack 3
  1103                           
  1104                           ;kernel.c: 66:   INTCONbits.GIE = 0;
  1105                           
  1106                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1107                           ;incstack = 0
  1108  000734  9EF2               	bcf	4082,7,c	;volatile
  1109                           
  1110                           ;kernel.c: 68:   { who = ready_queue.task_running; ready_queue.tasks[who].task_state = s
      +                          tate; ready_queue.tasks[who].W_reg = WREG; ready_queue.tasks[who].STATUS_reg = STATUS; r
      +                          eady_queue.tasks[who].BSR_reg = BSR; size = 0; while (STKPTR) { ready_queue.tasks[who].t
      +                          ask_stack.h_stack[size].TOSU_reg = TOSU; ready_queue.tasks[who].task_stack.h_stack[size]
      +                          .TOSH_reg = TOSH; ready_queue.tasks[who].task_stack.h_stack[size].TOSL_reg = TOSL; size+
      +                          +; __asm("POP"); } ready_queue.tasks[who].task_stack.stack_level = size;};
  1111  000736  C2F8  F011         	movff	_ready_queue+542,_who
  1112  00073A  C2F9  F012         	movff	_ready_queue+543,_who+1
  1113                           
  1114                           ;stkvar	_state @ sp[(0)+-1]
  1115  00073E  C011  F051         	movff	_who,btemp+10
  1116  000742  C012  F052         	movff	_who+1,btemp+11
  1117  000746  0E6C               	movlw	108
  1118  000748  0251               	mulwf	btemp+10,c
  1119  00074A  CFF3 F04F          	movff	prodl,btemp+8
  1120  00074E  CFF4 F050          	movff	prodh,btemp+9
  1121  000752  0252               	mulwf	btemp+11,c
  1122  000754  50F3               	movf	prodl,w,c
  1123  000756  2650               	addwf	btemp+9,f,c
  1124  000758  0EE2               	movlw	low (_ready_queue+8)
  1125  00075A  244F               	addwf	btemp+8,w,c
  1126  00075C  6ED9               	movwf	fsr2l,c
  1127  00075E  0E00               	movlw	high (_ready_queue+8)
  1128  000760  2050               	addwfc	btemp+9,w,c
  1129  000762  6EDA               	movwf	fsr2h,c
  1130  000764  0EFF               	movlw	-1
  1131  000766  CFE3 FFDF          	movff	plusw1,indf2
  1132  00076A  C011  F051         	movff	_who,btemp+10
  1133  00076E  C012  F052         	movff	_who+1,btemp+11
  1134  000772  0E6C               	movlw	108
  1135  000774  0251               	mulwf	btemp+10,c
  1136  000776  CFF3 F04F          	movff	prodl,btemp+8
  1137  00077A  CFF4 F050          	movff	prodh,btemp+9
  1138  00077E  0252               	mulwf	btemp+11,c
  1139  000780  50F3               	movf	prodl,w,c
  1140  000782  2650               	addwf	btemp+9,f,c
  1141  000784  0EDF               	movlw	low (_ready_queue+5)
  1142  000786  244F               	addwf	btemp+8,w,c
  1143  000788  6ED9               	movwf	fsr2l,c
  1144  00078A  0E00               	movlw	high (_ready_queue+5)
  1145  00078C  2050               	addwfc	btemp+9,w,c
  1146  00078E  6EDA               	movwf	fsr2h,c
  1147  000790  CFE8 FFDF          	movff	wreg,indf2	;volatile
  1148  000794  C011  F051         	movff	_who,btemp+10
  1149  000798  C012  F052         	movff	_who+1,btemp+11
  1150  00079C  0E6C               	movlw	108
  1151  00079E  0251               	mulwf	btemp+10,c
  1152  0007A0  CFF3 F04F          	movff	prodl,btemp+8
  1153  0007A4  CFF4 F050          	movff	prodh,btemp+9
  1154  0007A8  0252               	mulwf	btemp+11,c
  1155  0007AA  50F3               	movf	prodl,w,c
  1156  0007AC  2650               	addwf	btemp+9,f,c
  1157  0007AE  0EE0               	movlw	low (_ready_queue+6)
  1158  0007B0  244F               	addwf	btemp+8,w,c
  1159  0007B2  6ED9               	movwf	fsr2l,c
  1160  0007B4  0E00               	movlw	high (_ready_queue+6)
  1161  0007B6  2050               	addwfc	btemp+9,w,c
  1162  0007B8  6EDA               	movwf	fsr2h,c
  1163  0007BA  CFD8 FFDF          	movff	status,indf2	;volatile
  1164  0007BE  C011  F051         	movff	_who,btemp+10
  1165  0007C2  C012  F052         	movff	_who+1,btemp+11
  1166  0007C6  0E6C               	movlw	108
  1167  0007C8  0251               	mulwf	btemp+10,c
  1168  0007CA  CFF3 F04F          	movff	prodl,btemp+8
  1169  0007CE  CFF4 F050          	movff	prodh,btemp+9
  1170  0007D2  0252               	mulwf	btemp+11,c
  1171  0007D4  50F3               	movf	prodl,w,c
  1172  0007D6  2650               	addwf	btemp+9,f,c
  1173  0007D8  0EE1               	movlw	low (_ready_queue+7)
  1174  0007DA  244F               	addwf	btemp+8,w,c
  1175  0007DC  6ED9               	movwf	fsr2l,c
  1176  0007DE  0E00               	movlw	high (_ready_queue+7)
  1177  0007E0  2050               	addwfc	btemp+9,w,c
  1178  0007E2  6EDA               	movwf	fsr2h,c
  1179  0007E4  CFE0 FFDF          	movff	bsr,indf2	;volatile
  1180  0007E8  6A0F               	clrf	_size,c
  1181  0007EA  6A10               	clrf	_size+1,c
  1182  0007EC  D08D               	goto	l1791
  1183  0007EE                     l1787:
  1184  0007EE  C00F  F051         	movff	_size,btemp+10
  1185  0007F2  C010  F052         	movff	_size+1,btemp+11
  1186  0007F6  0E03               	movlw	3
  1187  0007F8  0251               	mulwf	btemp+10,c
  1188  0007FA  CFF3 F04F          	movff	prodl,btemp+8
  1189  0007FE  CFF4 F050          	movff	prodh,btemp+9
  1190  000802  0252               	mulwf	btemp+11,c
  1191  000804  50F3               	movf	prodl,w,c
  1192  000806  2650               	addwf	btemp+9,f,c
  1193  000808  C011  F051         	movff	_who,btemp+10
  1194  00080C  C012  F052         	movff	_who+1,btemp+11
  1195  000810  0E6C               	movlw	108
  1196  000812  0251               	mulwf	btemp+10,c
  1197  000814  CFF3 F04D          	movff	prodl,btemp+6
  1198  000818  CFF4 F04E          	movff	prodh,btemp+7
  1199  00081C  0252               	mulwf	btemp+11,c
  1200  00081E  50F3               	movf	prodl,w,c
  1201  000820  264E               	addwf	btemp+7,f,c
  1202  000822  0EDA               	movlw	low _ready_queue
  1203  000824  6E51               	movwf	btemp+10,c
  1204  000826  0E00               	movlw	high _ready_queue
  1205  000828  6E52               	movwf	btemp+11,c
  1206  00082A  0E09               	movlw	9
  1207  00082C  2651               	addwf	btemp+10,f,c
  1208  00082E  0E00               	movlw	0
  1209  000830  2252               	addwfc	btemp+11,f,c
  1210  000832  504D               	movf	btemp+6,w,c
  1211  000834  2651               	addwf	btemp+10,f,c
  1212  000836  504E               	movf	btemp+7,w,c
  1213  000838  2252               	addwfc	btemp+11,f,c
  1214  00083A  504F               	movf	btemp+8,w,c
  1215  00083C  2451               	addwf	btemp+10,w,c
  1216  00083E  6ED9               	movwf	fsr2l,c
  1217  000840  5050               	movf	btemp+9,w,c
  1218  000842  2052               	addwfc	btemp+11,w,c
  1219  000844  6EDA               	movwf	fsr2h,c
  1220  000846  CFFF FFDF          	movff	tosu,indf2	;volatile
  1221  00084A  C00F  F051         	movff	_size,btemp+10
  1222  00084E  C010  F052         	movff	_size+1,btemp+11
  1223  000852  0E03               	movlw	3
  1224  000854  0251               	mulwf	btemp+10,c
  1225  000856  CFF3 F04F          	movff	prodl,btemp+8
  1226  00085A  CFF4 F050          	movff	prodh,btemp+9
  1227  00085E  0252               	mulwf	btemp+11,c
  1228  000860  50F3               	movf	prodl,w,c
  1229  000862  2650               	addwf	btemp+9,f,c
  1230  000864  C011  F051         	movff	_who,btemp+10
  1231  000868  C012  F052         	movff	_who+1,btemp+11
  1232  00086C  0E6C               	movlw	108
  1233  00086E  0251               	mulwf	btemp+10,c
  1234  000870  CFF3 F04D          	movff	prodl,btemp+6
  1235  000874  CFF4 F04E          	movff	prodh,btemp+7
  1236  000878  0252               	mulwf	btemp+11,c
  1237  00087A  50F3               	movf	prodl,w,c
  1238  00087C  264E               	addwf	btemp+7,f,c
  1239  00087E  0EDA               	movlw	low _ready_queue
  1240  000880  6E51               	movwf	btemp+10,c
  1241  000882  0E00               	movlw	high _ready_queue
  1242  000884  6E52               	movwf	btemp+11,c
  1243  000886  0E0B               	movlw	11
  1244  000888  2651               	addwf	btemp+10,f,c
  1245  00088A  0E00               	movlw	0
  1246  00088C  2252               	addwfc	btemp+11,f,c
  1247  00088E  504D               	movf	btemp+6,w,c
  1248  000890  2651               	addwf	btemp+10,f,c
  1249  000892  504E               	movf	btemp+7,w,c
  1250  000894  2252               	addwfc	btemp+11,f,c
  1251  000896  504F               	movf	btemp+8,w,c
  1252  000898  2451               	addwf	btemp+10,w,c
  1253  00089A  6ED9               	movwf	fsr2l,c
  1254  00089C  5050               	movf	btemp+9,w,c
  1255  00089E  2052               	addwfc	btemp+11,w,c
  1256  0008A0  6EDA               	movwf	fsr2h,c
  1257  0008A2  CFFE FFDF          	movff	tosh,indf2	;volatile
  1258  0008A6  C00F  F051         	movff	_size,btemp+10
  1259  0008AA  C010  F052         	movff	_size+1,btemp+11
  1260  0008AE  0E03               	movlw	3
  1261  0008B0  0251               	mulwf	btemp+10,c
  1262  0008B2  CFF3 F04F          	movff	prodl,btemp+8
  1263  0008B6  CFF4 F050          	movff	prodh,btemp+9
  1264  0008BA  0252               	mulwf	btemp+11,c
  1265  0008BC  50F3               	movf	prodl,w,c
  1266  0008BE  2650               	addwf	btemp+9,f,c
  1267  0008C0  C011  F051         	movff	_who,btemp+10
  1268  0008C4  C012  F052         	movff	_who+1,btemp+11
  1269  0008C8  0E6C               	movlw	108
  1270  0008CA  0251               	mulwf	btemp+10,c
  1271  0008CC  CFF3 F04D          	movff	prodl,btemp+6
  1272  0008D0  CFF4 F04E          	movff	prodh,btemp+7
  1273  0008D4  0252               	mulwf	btemp+11,c
  1274  0008D6  50F3               	movf	prodl,w,c
  1275  0008D8  264E               	addwf	btemp+7,f,c
  1276  0008DA  0EDA               	movlw	low _ready_queue
  1277  0008DC  6E51               	movwf	btemp+10,c
  1278  0008DE  0E00               	movlw	high _ready_queue
  1279  0008E0  6E52               	movwf	btemp+11,c
  1280  0008E2  0E0A               	movlw	10
  1281  0008E4  2651               	addwf	btemp+10,f,c
  1282  0008E6  0E00               	movlw	0
  1283  0008E8  2252               	addwfc	btemp+11,f,c
  1284  0008EA  504D               	movf	btemp+6,w,c
  1285  0008EC  2651               	addwf	btemp+10,f,c
  1286  0008EE  504E               	movf	btemp+7,w,c
  1287  0008F0  2252               	addwfc	btemp+11,f,c
  1288  0008F2  504F               	movf	btemp+8,w,c
  1289  0008F4  2451               	addwf	btemp+10,w,c
  1290  0008F6  6ED9               	movwf	fsr2l,c
  1291  0008F8  5050               	movf	btemp+9,w,c
  1292  0008FA  2052               	addwfc	btemp+11,w,c
  1293  0008FC  6EDA               	movwf	fsr2h,c
  1294  0008FE  CFFD FFDF          	movff	tosl,indf2	;volatile
  1295  000902  4A0F               	infsnz	_size,f,c
  1296  000904  2A10               	incf	_size+1,f,c
  1297  000906  0006               	pop		;# 
  1298  000908                     l1791:
  1299  000908  50FC               	movf	stkptr,w,c	;volatile
  1300  00090A  A4D8               	btfss	status,2,c
  1301  00090C  D770               	goto	l1787
  1302  00090E  C011  F051         	movff	_who,btemp+10
  1303  000912  C012  F052         	movff	_who+1,btemp+11
  1304  000916  0E6C               	movlw	108
  1305  000918  0251               	mulwf	btemp+10,c
  1306  00091A  CFF3 F04F          	movff	prodl,btemp+8
  1307  00091E  CFF4 F050          	movff	prodh,btemp+9
  1308  000922  0252               	mulwf	btemp+11,c
  1309  000924  50F3               	movf	prodl,w,c
  1310  000926  2650               	addwf	btemp+9,f,c
  1311  000928  0E40               	movlw	low (_ready_queue+102)
  1312  00092A  244F               	addwf	btemp+8,w,c
  1313  00092C  6ED9               	movwf	fsr2l,c
  1314  00092E  0E01               	movlw	high (_ready_queue+102)
  1315  000930  2050               	addwfc	btemp+9,w,c
  1316  000932  6EDA               	movwf	fsr2h,c
  1317  000934  C00F  FFDE         	movff	_size,postinc2
  1318  000938  C010  FFDD         	movff	_size+1,postdec2
  1319                           
  1320                           ;kernel.c: 70:   ready_queue.task_running = scheduler();
  1321  00093C  ECD0  F00B         	call	_scheduler	;wreg free
  1322  000940  C047  F2F8         	movff	btemp,_ready_queue+542
  1323  000944  C048  F2F9         	movff	btemp+1,_ready_queue+543
  1324                           
  1325                           ;kernel.c: 72:   { STKPTR = 0; who = ready_queue.task_running; if (ready_queue.tasks[who
      +                          ].task_stack.stack_level == 0) { __asm("PUSH"); TOS = ready_queue.tasks[who].task_f; } e
      +                          lse { ready_queue.tasks[who].task_state = RUNNING; WREG = ready_queue.tasks[who].W_reg; 
      +                          STATUS = ready_queue.tasks[who].STATUS_reg; BSR = ready_queue.tasks[who].BSR_reg; size =
      +                           ready_queue.tasks[who].task_stack.stack_level; while (size) { __asm("PUSH"); TOSL = rea
      +                          dy_queue.tasks[who].task_stack.h_stack[size-1].TOSL_reg; TOSH = ready_queue.tasks[who].t
      +                          ask_stack.h_stack[size-1].TOSH_reg; TOSU = ready_queue.tasks[who].task_stack.h_stack[siz
      +                          e-1].TOSU_reg; size--; } }};
  1326  000948  6AFC               	clrf	stkptr,c	;volatile
  1327  00094A  C2F8  F011         	movff	_ready_queue+542,_who
  1328  00094E  C2F9  F012         	movff	_ready_queue+543,_who+1
  1329  000952  C011  F051         	movff	_who,btemp+10
  1330  000956  C012  F052         	movff	_who+1,btemp+11
  1331  00095A  0E6C               	movlw	108
  1332  00095C  0251               	mulwf	btemp+10,c
  1333  00095E  CFF3 F04F          	movff	prodl,btemp+8
  1334  000962  CFF4 F050          	movff	prodh,btemp+9
  1335  000966  0252               	mulwf	btemp+11,c
  1336  000968  50F3               	movf	prodl,w,c
  1337  00096A  2650               	addwf	btemp+9,f,c
  1338  00096C  0E40               	movlw	low (_ready_queue+102)
  1339  00096E  244F               	addwf	btemp+8,w,c
  1340  000970  6ED9               	movwf	fsr2l,c
  1341  000972  0E01               	movlw	high (_ready_queue+102)
  1342  000974  2050               	addwfc	btemp+9,w,c
  1343  000976  6EDA               	movwf	fsr2h,c
  1344  000978  50DE               	movf	postinc2,w,c
  1345  00097A  10DE               	iorwf	postinc2,w,c
  1346  00097C  A4D8               	btfss	status,2,c
  1347  00097E  D01E               	goto	l1807
  1348  000980  0005               	push		;# 
  1349  000982  C011  F051         	movff	_who,btemp+10
  1350  000986  C012  F052         	movff	_who+1,btemp+11
  1351  00098A  0E6C               	movlw	108
  1352  00098C  0251               	mulwf	btemp+10,c
  1353  00098E  CFF3 F04F          	movff	prodl,btemp+8
  1354  000992  CFF4 F050          	movff	prodh,btemp+9
  1355  000996  0252               	mulwf	btemp+11,c
  1356  000998  50F3               	movf	prodl,w,c
  1357  00099A  2650               	addwf	btemp+9,f,c
  1358  00099C  0E42               	movlw	low (_ready_queue+104)
  1359  00099E  244F               	addwf	btemp+8,w,c
  1360  0009A0  6ED9               	movwf	fsr2l,c
  1361  0009A2  0E01               	movlw	high (_ready_queue+104)
  1362  0009A4  2050               	addwfc	btemp+9,w,c
  1363  0009A6  6EDA               	movwf	fsr2h,c
  1364  0009A8  CFDE F051          	movff	postinc2,btemp+10
  1365  0009AC  CFDD F052          	movff	postdec2,btemp+11
  1366  0009B0  C051  FFFD         	movff	btemp+10,tosl	;volatile
  1367  0009B4  C052  FFFE         	movff	btemp+11,tosh	;volatile
  1368  0009B8  6AFF               	clrf	tosu,c	;volatile
  1369  0009BA  D0FF               	goto	u460
  1370  0009BC                     l1807:
  1371  0009BC  C011  F051         	movff	_who,btemp+10
  1372  0009C0  C012  F052         	movff	_who+1,btemp+11
  1373  0009C4  0E6C               	movlw	108
  1374  0009C6  0251               	mulwf	btemp+10,c
  1375  0009C8  CFF3 F04F          	movff	prodl,btemp+8
  1376  0009CC  CFF4 F050          	movff	prodh,btemp+9
  1377  0009D0  0252               	mulwf	btemp+11,c
  1378  0009D2  50F3               	movf	prodl,w,c
  1379  0009D4  2650               	addwf	btemp+9,f,c
  1380  0009D6  0EE2               	movlw	low (_ready_queue+8)
  1381  0009D8  244F               	addwf	btemp+8,w,c
  1382  0009DA  6ED9               	movwf	fsr2l,c
  1383  0009DC  0E00               	movlw	high (_ready_queue+8)
  1384  0009DE  2050               	addwfc	btemp+9,w,c
  1385  0009E0  6EDA               	movwf	fsr2h,c
  1386  0009E2  0E01               	movlw	1
  1387  0009E4  6EDF               	movwf	indf2,c
  1388  0009E6  C011  F051         	movff	_who,btemp+10
  1389  0009EA  C012  F052         	movff	_who+1,btemp+11
  1390  0009EE  0E6C               	movlw	108
  1391  0009F0  0251               	mulwf	btemp+10,c
  1392  0009F2  CFF3 F04F          	movff	prodl,btemp+8
  1393  0009F6  CFF4 F050          	movff	prodh,btemp+9
  1394  0009FA  0252               	mulwf	btemp+11,c
  1395  0009FC  50F3               	movf	prodl,w,c
  1396  0009FE  2650               	addwf	btemp+9,f,c
  1397  000A00  0EDF               	movlw	low (_ready_queue+5)
  1398  000A02  244F               	addwf	btemp+8,w,c
  1399  000A04  6ED9               	movwf	fsr2l,c
  1400  000A06  0E00               	movlw	high (_ready_queue+5)
  1401  000A08  2050               	addwfc	btemp+9,w,c
  1402  000A0A  6EDA               	movwf	fsr2h,c
  1403  000A0C  50DF               	movf	indf2,w,c
  1404  000A0E  6E52               	movwf	btemp+11,c
  1405  000A10  5052               	movf	btemp+11,w,c
  1406  000A12  C011  F051         	movff	_who,btemp+10
  1407  000A16  C012  F052         	movff	_who+1,btemp+11
  1408  000A1A  0E6C               	movlw	108
  1409  000A1C  0251               	mulwf	btemp+10,c
  1410  000A1E  CFF3 F04F          	movff	prodl,btemp+8
  1411  000A22  CFF4 F050          	movff	prodh,btemp+9
  1412  000A26  0252               	mulwf	btemp+11,c
  1413  000A28  50F3               	movf	prodl,w,c
  1414  000A2A  2650               	addwf	btemp+9,f,c
  1415  000A2C  0EE0               	movlw	low (_ready_queue+6)
  1416  000A2E  244F               	addwf	btemp+8,w,c
  1417  000A30  6ED9               	movwf	fsr2l,c
  1418  000A32  0E00               	movlw	high (_ready_queue+6)
  1419  000A34  2050               	addwfc	btemp+9,w,c
  1420  000A36  6EDA               	movwf	fsr2h,c
  1421  000A38  50DF               	movf	indf2,w,c
  1422  000A3A  6ED8               	movwf	status,c	;volatile
  1423  000A3C  C011  F051         	movff	_who,btemp+10
  1424  000A40  C012  F052         	movff	_who+1,btemp+11
  1425  000A44  0E6C               	movlw	108
  1426  000A46  0251               	mulwf	btemp+10,c
  1427  000A48  CFF3 F04F          	movff	prodl,btemp+8
  1428  000A4C  CFF4 F050          	movff	prodh,btemp+9
  1429  000A50  0252               	mulwf	btemp+11,c
  1430  000A52  50F3               	movf	prodl,w,c
  1431  000A54  2650               	addwf	btemp+9,f,c
  1432  000A56  0EE1               	movlw	low (_ready_queue+7)
  1433  000A58  244F               	addwf	btemp+8,w,c
  1434  000A5A  6ED9               	movwf	fsr2l,c
  1435  000A5C  0E00               	movlw	high (_ready_queue+7)
  1436  000A5E  2050               	addwfc	btemp+9,w,c
  1437  000A60  6EDA               	movwf	fsr2h,c
  1438  000A62  50DF               	movf	indf2,w,c
  1439  000A64  6EE0               	movwf	bsr,c	;volatile
  1440  000A66  C011  F051         	movff	_who,btemp+10
  1441  000A6A  C012  F052         	movff	_who+1,btemp+11
  1442  000A6E  0E6C               	movlw	108
  1443  000A70  0251               	mulwf	btemp+10,c
  1444  000A72  CFF3 F04F          	movff	prodl,btemp+8
  1445  000A76  CFF4 F050          	movff	prodh,btemp+9
  1446  000A7A  0252               	mulwf	btemp+11,c
  1447  000A7C  50F3               	movf	prodl,w,c
  1448  000A7E  2650               	addwf	btemp+9,f,c
  1449  000A80  0E40               	movlw	low (_ready_queue+102)
  1450  000A82  244F               	addwf	btemp+8,w,c
  1451  000A84  6ED9               	movwf	fsr2l,c
  1452  000A86  0E01               	movlw	high (_ready_queue+102)
  1453  000A88  2050               	addwfc	btemp+9,w,c
  1454  000A8A  6EDA               	movwf	fsr2h,c
  1455  000A8C  CFDE F00F          	movff	postinc2,_size
  1456  000A90  CFDD F010          	movff	postdec2,_size+1
  1457  000A94  D08E               	goto	l1813
  1458  000A96                     l176:
  1459  000A96  0005               	push		;# 
  1460  000A98  C00F  F051         	movff	_size,btemp+10
  1461  000A9C  C010  F052         	movff	_size+1,btemp+11
  1462  000AA0  0E03               	movlw	3
  1463  000AA2  0251               	mulwf	btemp+10,c
  1464  000AA4  CFF3 F04F          	movff	prodl,btemp+8
  1465  000AA8  CFF4 F050          	movff	prodh,btemp+9
  1466  000AAC  0252               	mulwf	btemp+11,c
  1467  000AAE  50F3               	movf	prodl,w,c
  1468  000AB0  2650               	addwf	btemp+9,f,c
  1469  000AB2  C011  F051         	movff	_who,btemp+10
  1470  000AB6  C012  F052         	movff	_who+1,btemp+11
  1471  000ABA  0E6C               	movlw	108
  1472  000ABC  0251               	mulwf	btemp+10,c
  1473  000ABE  CFF3 F04D          	movff	prodl,btemp+6
  1474  000AC2  CFF4 F04E          	movff	prodh,btemp+7
  1475  000AC6  0252               	mulwf	btemp+11,c
  1476  000AC8  50F3               	movf	prodl,w,c
  1477  000ACA  264E               	addwf	btemp+7,f,c
  1478  000ACC  0EDA               	movlw	low _ready_queue
  1479  000ACE  6E51               	movwf	btemp+10,c
  1480  000AD0  0E00               	movlw	high _ready_queue
  1481  000AD2  6E52               	movwf	btemp+11,c
  1482  000AD4  0E07               	movlw	7
  1483  000AD6  2651               	addwf	btemp+10,f,c
  1484  000AD8  0E00               	movlw	0
  1485  000ADA  2252               	addwfc	btemp+11,f,c
  1486  000ADC  504D               	movf	btemp+6,w,c
  1487  000ADE  2651               	addwf	btemp+10,f,c
  1488  000AE0  504E               	movf	btemp+7,w,c
  1489  000AE2  2252               	addwfc	btemp+11,f,c
  1490  000AE4  504F               	movf	btemp+8,w,c
  1491  000AE6  2451               	addwf	btemp+10,w,c
  1492  000AE8  6ED9               	movwf	fsr2l,c
  1493  000AEA  5050               	movf	btemp+9,w,c
  1494  000AEC  2052               	addwfc	btemp+11,w,c
  1495  000AEE  6EDA               	movwf	fsr2h,c
  1496  000AF0  50DF               	movf	indf2,w,c
  1497  000AF2  6EFD               	movwf	tosl,c	;volatile
  1498  000AF4  C00F  F051         	movff	_size,btemp+10
  1499  000AF8  C010  F052         	movff	_size+1,btemp+11
  1500  000AFC  0E03               	movlw	3
  1501  000AFE  0251               	mulwf	btemp+10,c
  1502  000B00  CFF3 F04F          	movff	prodl,btemp+8
  1503  000B04  CFF4 F050          	movff	prodh,btemp+9
  1504  000B08  0252               	mulwf	btemp+11,c
  1505  000B0A  50F3               	movf	prodl,w,c
  1506  000B0C  2650               	addwf	btemp+9,f,c
  1507  000B0E  C011  F051         	movff	_who,btemp+10
  1508  000B12  C012  F052         	movff	_who+1,btemp+11
  1509  000B16  0E6C               	movlw	108
  1510  000B18  0251               	mulwf	btemp+10,c
  1511  000B1A  CFF3 F04D          	movff	prodl,btemp+6
  1512  000B1E  CFF4 F04E          	movff	prodh,btemp+7
  1513  000B22  0252               	mulwf	btemp+11,c
  1514  000B24  50F3               	movf	prodl,w,c
  1515  000B26  264E               	addwf	btemp+7,f,c
  1516  000B28  0EDA               	movlw	low _ready_queue
  1517  000B2A  6E51               	movwf	btemp+10,c
  1518  000B2C  0E00               	movlw	high _ready_queue
  1519  000B2E  6E52               	movwf	btemp+11,c
  1520  000B30  0E08               	movlw	8
  1521  000B32  2651               	addwf	btemp+10,f,c
  1522  000B34  0E00               	movlw	0
  1523  000B36  2252               	addwfc	btemp+11,f,c
  1524  000B38  504D               	movf	btemp+6,w,c
  1525  000B3A  2651               	addwf	btemp+10,f,c
  1526  000B3C  504E               	movf	btemp+7,w,c
  1527  000B3E  2252               	addwfc	btemp+11,f,c
  1528  000B40  504F               	movf	btemp+8,w,c
  1529  000B42  2451               	addwf	btemp+10,w,c
  1530  000B44  6ED9               	movwf	fsr2l,c
  1531  000B46  5050               	movf	btemp+9,w,c
  1532  000B48  2052               	addwfc	btemp+11,w,c
  1533  000B4A  6EDA               	movwf	fsr2h,c
  1534  000B4C  50DF               	movf	indf2,w,c
  1535  000B4E  6EFE               	movwf	tosh,c	;volatile
  1536  000B50  C00F  F051         	movff	_size,btemp+10
  1537  000B54  C010  F052         	movff	_size+1,btemp+11
  1538  000B58  0E03               	movlw	3
  1539  000B5A  0251               	mulwf	btemp+10,c
  1540  000B5C  CFF3 F04F          	movff	prodl,btemp+8
  1541  000B60  CFF4 F050          	movff	prodh,btemp+9
  1542  000B64  0252               	mulwf	btemp+11,c
  1543  000B66  50F3               	movf	prodl,w,c
  1544  000B68  2650               	addwf	btemp+9,f,c
  1545  000B6A  C011  F051         	movff	_who,btemp+10
  1546  000B6E  C012  F052         	movff	_who+1,btemp+11
  1547  000B72  0E6C               	movlw	108
  1548  000B74  0251               	mulwf	btemp+10,c
  1549  000B76  CFF3 F04D          	movff	prodl,btemp+6
  1550  000B7A  CFF4 F04E          	movff	prodh,btemp+7
  1551  000B7E  0252               	mulwf	btemp+11,c
  1552  000B80  50F3               	movf	prodl,w,c
  1553  000B82  264E               	addwf	btemp+7,f,c
  1554  000B84  0EDA               	movlw	low _ready_queue
  1555  000B86  6E51               	movwf	btemp+10,c
  1556  000B88  0E00               	movlw	high _ready_queue
  1557  000B8A  6E52               	movwf	btemp+11,c
  1558  000B8C  0E06               	movlw	6
  1559  000B8E  2651               	addwf	btemp+10,f,c
  1560  000B90  0E00               	movlw	0
  1561  000B92  2252               	addwfc	btemp+11,f,c
  1562  000B94  504D               	movf	btemp+6,w,c
  1563  000B96  2651               	addwf	btemp+10,f,c
  1564  000B98  504E               	movf	btemp+7,w,c
  1565  000B9A  2252               	addwfc	btemp+11,f,c
  1566  000B9C  504F               	movf	btemp+8,w,c
  1567  000B9E  2451               	addwf	btemp+10,w,c
  1568  000BA0  6ED9               	movwf	fsr2l,c
  1569  000BA2  5050               	movf	btemp+9,w,c
  1570  000BA4  2052               	addwfc	btemp+11,w,c
  1571  000BA6  6EDA               	movwf	fsr2h,c
  1572  000BA8  50DF               	movf	indf2,w,c
  1573  000BAA  6EFF               	movwf	tosu,c	;volatile
  1574  000BAC  060F               	decf	_size,f,c
  1575  000BAE  A0D8               	btfss	status,0,c
  1576  000BB0  0610               	decf	_size+1,f,c
  1577  000BB2                     l1813:
  1578  000BB2  500F               	movf	_size,w,c
  1579  000BB4  1010               	iorwf	_size+1,w,c
  1580  000BB6  A4D8               	btfss	status,2,c
  1581  000BB8  D76E               	goto	l176
  1582  000BBA                     u460:
  1583                           
  1584                           ;kernel.c: 74:   INTCONbits.GIE = 1;
  1585  000BBA  8EF2               	bsf	4082,7,c	;volatile
  1586                           
  1587                           ; _dispatcher: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  1588  000BBC  52E5               	movf	postdec1,f,c
  1589  000BBE  0012               	return		;funcret
  1590  000BC0                     __end_of_dispatcher:
  1591                           	opt callstack 0
  1592                           
  1593 ;; *************** function _scheduler *****************
  1594 ;; Defined at:
  1595 ;;		line 57 in file "kernel.c"
  1596 ;; Parameters:    Size  Location     Type
  1597 ;;		None
  1598 ;; Auto vars:     Size  Location     Type
  1599 ;;		None
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  2  [STACK] unsigned int 
  1602 ;; Registers used:
  1603 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1609 ;;      Params:         0       0       0       0       0       0       0
  1610 ;;      Locals:         0       0       0       0       0       0       0
  1611 ;;      Temps:          0       0       0       0       0       0       0
  1612 ;;      Totals:         0       0       0       0       0       0       0
  1613 ;;Total ram usage:        0 bytes
  1614 ;; Hardware stack levels used:    1
  1615 ;; Hardware stack levels required when called:   14
  1616 ;; This function calls:
  1617 ;;		_round_robin
  1618 ;; This function is called by:
  1619 ;;		_dispatcher
  1620 ;; This function uses a reentrant model
  1621 ;;
  1622                           
  1623                           	psect	text7
  1624  0017A0                     __ptext7:
  1625                           	opt callstack 0
  1626  0017A0                     _scheduler:
  1627                           	opt callstack 3
  1628                           
  1629                           ;kernel.c: 59:   return round_robin();
  1630                           
  1631                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1632                           ;incstack = 0
  1633  0017A0  EC8D  F009         	call	_round_robin	;wreg free
  1634                           
  1635                           ; _scheduler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  1636  0017A4  0012               	return		;funcret
  1637  0017A6                     __end_of_scheduler:
  1638                           	opt callstack 0
  1639                           
  1640 ;; *************** function _round_robin *****************
  1641 ;; Defined at:
  1642 ;;		line 77 in file "kernel.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;		None
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;  next_task_to    2  [STACK] int 
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  2  [STACK] unsigned int 
  1649 ;; Registers used:
  1650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1656 ;;      Params:         0       0       0       0       0       0       0
  1657 ;;      Locals:         0       0       0       0       0       0       0
  1658 ;;      Temps:          0       0       0       0       0       0       0
  1659 ;;      Totals:         0       0       0       0       0       0       0
  1660 ;;Total ram usage:        0 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; Hardware stack levels required when called:   13
  1663 ;; This function calls:
  1664 ;;		___lwmod
  1665 ;; This function is called by:
  1666 ;;		_ISR_timer0
  1667 ;;		_scheduler
  1668 ;; This function uses a reentrant model
  1669 ;;
  1670                           
  1671                           	psect	text8
  1672  00131A                     __ptext8:
  1673                           	opt callstack 0
  1674  00131A                     _round_robin:
  1675                           	opt callstack 0
  1676                           
  1677                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1678  00131A  52E6               	movf	postinc1,f,c
  1679  00131C  52E6               	movf	postinc1,f,c
  1680                           
  1681                           ;kernel.c: 78:   int next_task_to_run = ready_queue.task_running;
  1682                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  1683                           
  1684                           ;incstack = 0
  1685  00131E  0EFE               	movlw	-2
  1686  001320  C2F8  FFE3         	movff	_ready_queue+542,plusw1
  1687  001324  0EFF               	movlw	-1
  1688  001326  C2F9  FFE3         	movff	_ready_queue+543,plusw1
  1689  00132A                     l1747:
  1690                           
  1691                           ;kernel.c: 81:     next_task_to_run = (next_task_to_run + 1) % ready_queue.tasks_install
      +                          ed;
  1692  00132A  EE22  F0F6         	lfsr	2,_ready_queue+540
  1693  00132E  CFDE F051          	movff	postinc2,btemp+10
  1694  001332  CFDD F052          	movff	postdec2,btemp+11
  1695  001336  C051  FFE6         	movff	btemp+10,postinc1
  1696  00133A  C052  FFE6         	movff	btemp+11,postinc1
  1697                           
  1698                           ;stkvar	_next_task_to_run @ sp[(-4)+0]
  1699  00133E  0EFC               	movlw	-4
  1700  001340  50E3               	movf	plusw1,w,c
  1701  001342  0F01               	addlw	1
  1702  001344  6E51               	movwf	btemp+10,c
  1703  001346  0EFD               	movlw	-3
  1704  001348  CFE3 F052          	movff	plusw1,btemp+11
  1705  00134C  0E00               	movlw	0
  1706  00134E  2252               	addwfc	btemp+11,f,c
  1707  001350  C051  FFE6         	movff	btemp+10,postinc1
  1708  001354  C052  FFE6         	movff	btemp+11,postinc1
  1709  001358  EC9A  F008         	call	___lwmod	;wreg free
  1710                           
  1711                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  1712  00135C  0EFE               	movlw	-2
  1713  00135E  C047  FFE3         	movff	btemp,plusw1
  1714  001362  0EFF               	movlw	-1
  1715  001364  C048  FFE3         	movff	btemp+1,plusw1
  1716                           
  1717                           ;kernel.c: 82:   } while (ready_queue.tasks[next_task_to_run].task_state != READY);
  1718                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  1719  001368  0EFE               	movlw	-2
  1720  00136A  CFE3 F051          	movff	plusw1,btemp+10
  1721  00136E  0EFF               	movlw	-1
  1722  001370  CFE3 F052          	movff	plusw1,btemp+11
  1723  001374  0E6C               	movlw	108
  1724  001376  0251               	mulwf	btemp+10,c
  1725  001378  CFF3 F04F          	movff	prodl,btemp+8
  1726  00137C  CFF4 F050          	movff	prodh,btemp+9
  1727  001380  0252               	mulwf	btemp+11,c
  1728  001382  50F3               	movf	prodl,w,c
  1729  001384  2650               	addwf	btemp+9,f,c
  1730  001386  0EE2               	movlw	low (_ready_queue+8)
  1731  001388  244F               	addwf	btemp+8,w,c
  1732  00138A  6ED9               	movwf	fsr2l,c
  1733  00138C  0E00               	movlw	high (_ready_queue+8)
  1734  00138E  2050               	addwfc	btemp+9,w,c
  1735  001390  6EDA               	movwf	fsr2h,c
  1736  001392  50DF               	movf	indf2,w,c
  1737  001394  A4D8               	btfss	status,2,c
  1738  001396  D7C9               	goto	l1747
  1739                           
  1740                           ;kernel.c: 84:   return next_task_to_run;
  1741                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  1742  001398  0EFE               	movlw	-2
  1743  00139A  CFE3 F047          	movff	plusw1,btemp
  1744  00139E  0EFF               	movlw	-1
  1745  0013A0  CFE3 F048          	movff	plusw1,btemp+1
  1746                           
  1747                           ; _round_robin: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  1748  0013A4  52E5               	movf	postdec1,f,c
  1749  0013A6  52E5               	movf	postdec1,f,c
  1750  0013A8  0012               	return		;funcret
  1751  0013AA                     __end_of_round_robin:
  1752                           	opt callstack 0
  1753                           
  1754 ;; *************** function ___lwmod *****************
  1755 ;; Defined at:
  1756 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;  dividend        2  [STACK] unsigned int 
  1759 ;;  divisor         2  [STACK] unsigned int 
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;  counter         1  [STACK] unsigned char 
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  2  [STACK] unsigned int 
  1764 ;; Registers used:
  1765 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1771 ;;      Params:         0       0       0       0       0       0       0
  1772 ;;      Locals:         0       0       0       0       0       0       0
  1773 ;;      Temps:          0       0       0       0       0       0       0
  1774 ;;      Totals:         0       0       0       0       0       0       0
  1775 ;;Total ram usage:        0 bytes
  1776 ;; Hardware stack levels used:    1
  1777 ;; Hardware stack levels required when called:   12
  1778 ;; This function calls:
  1779 ;;		Nothing
  1780 ;; This function is called by:
  1781 ;;		_round_robin
  1782 ;; This function uses a reentrant model
  1783 ;;
  1784                           
  1785                           	psect	text9
  1786  001134                     __ptext9:
  1787                           	opt callstack 0
  1788  001134                     ___lwmod:
  1789                           	opt callstack 0
  1790                           
  1791                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1792  001134  52E6               	movf	postinc1,f,c
  1793                           
  1794                           ;stkvar	_divisor @ sp[(-1)+-4]
  1795                           
  1796                           ;incstack = 0
  1797  001136  0EFB               	movlw	-5
  1798  001138  CFE3 F047          	movff	plusw1,btemp
  1799  00113C  0EFC               	movlw	-4
  1800  00113E  50E3               	movf	plusw1,w,c
  1801  001140  1047               	iorwf	btemp,w,c
  1802  001142  B4D8               	btfsc	status,2,c
  1803  001144  D04A               	goto	u410
  1804                           
  1805                           ;stkvar	_counter @ sp[(-1)+0]
  1806  001146  0EFF               	movlw	-1
  1807  001148  6AE3               	clrf	plusw1,c
  1808  00114A  D010               	goto	L1
  1809  00114C                     l1727:
  1810                           
  1811                           ;stkvar	_divisor @ sp[(-1)+-4]
  1812  00114C  0EFB               	movlw	-5
  1813  00114E  50E3               	movf	plusw1,w,c
  1814  001150  90D8               	bcf	status,0,c
  1815  001152  34E8               	rlcf	wreg,w,c
  1816  001154  6E47               	movwf	btemp,c
  1817  001156  0EFB               	movlw	-5
  1818  001158  C047  FFE3         	movff	btemp,plusw1
  1819  00115C  0EFC               	movlw	-4
  1820  00115E  50E3               	movf	plusw1,w,c
  1821  001160  34E8               	rlcf	wreg,w,c
  1822  001162  6E47               	movwf	btemp,c
  1823  001164  0EFC               	movlw	-4
  1824  001166  C047  FFE3         	movff	btemp,plusw1
  1825                           
  1826                           ;stkvar	_counter @ sp[(-1)+0]
  1827  00116A  0EFF               	movlw	-1
  1828  00116C                     L1:
  1829  00116C  2AE3               	incf	plusw1,f,c
  1830                           
  1831                           ;stkvar	_divisor @ sp[(-1)+-4]
  1832  00116E  0EFC               	movlw	-4
  1833  001170  AEE3               	btfss	plusw1,7,c
  1834  001172  D7EC               	goto	l1727
  1835  001174                     u390:
  1836                           
  1837                           ;stkvar	_divisor @ sp[(-1)+-4]
  1838  001174  0EFB               	movlw	-5
  1839  001176  CFE3 F051          	movff	plusw1,btemp+10
  1840  00117A  0EFC               	movlw	-4
  1841  00117C  CFE3 F052          	movff	plusw1,btemp+11
  1842                           
  1843                           ;stkvar	_dividend @ sp[(-1)+-2]
  1844  001180  0EFD               	movlw	-3
  1845  001182  CFE3 F04F          	movff	plusw1,btemp+8
  1846  001186  0EFE               	movlw	-2
  1847  001188  CFE3 F050          	movff	plusw1,btemp+9
  1848  00118C  5051               	movf	btemp+10,w,c
  1849  00118E  5C4F               	subwf	btemp+8,w,c
  1850  001190  5052               	movf	btemp+11,w,c
  1851  001192  5850               	subwfb	btemp+9,w,c
  1852  001194  A0D8               	btfss	status,0,c
  1853  001196  D012               	goto	l1737
  1854                           
  1855                           ;stkvar	_divisor @ sp[(-1)+-4]
  1856                           ;stkvar	_dividend @ sp[(-1)+-2]
  1857  001198  0EFD               	movlw	-3
  1858  00119A  50E3               	movf	plusw1,w,c
  1859  00119C  6E47               	movwf	btemp,c
  1860  00119E  0EFB               	movlw	-5
  1861  0011A0  50E3               	movf	plusw1,w,c
  1862  0011A2  5E47               	subwf	btemp,f,c
  1863  0011A4  0EFD               	movlw	-3
  1864  0011A6  C047  FFE3         	movff	btemp,plusw1
  1865  0011AA  0EFE               	movlw	-2
  1866  0011AC  50E3               	movf	plusw1,w,c
  1867  0011AE  6E47               	movwf	btemp,c
  1868  0011B0  0EFC               	movlw	-4
  1869  0011B2  50E3               	movf	plusw1,w,c
  1870  0011B4  5A47               	subwfb	btemp,f,c
  1871  0011B6  0EFE               	movlw	-2
  1872  0011B8  C047  FFE3         	movff	btemp,plusw1
  1873  0011BC                     l1737:
  1874                           
  1875                           ;stkvar	_divisor @ sp[(-1)+-4]
  1876  0011BC  90D8               	bcf	status,0,c
  1877  0011BE  0EFC               	movlw	-4
  1878  0011C0  32E3               	rrcf	plusw1,f,c
  1879  0011C2  0EFB               	movlw	-5
  1880  0011C4  32E3               	rrcf	plusw1,f,c
  1881                           
  1882                           ;stkvar	_counter @ sp[(-1)+0]
  1883  0011C6  0EFF               	movlw	-1
  1884  0011C8  50E3               	movf	plusw1,w,c
  1885  0011CA  6E47               	movwf	btemp,c
  1886  0011CC  0E01               	movlw	1
  1887  0011CE  5E47               	subwf	btemp,f,c
  1888  0011D0  0EFF               	movlw	-1
  1889  0011D2  C047  FFE3         	movff	btemp,plusw1
  1890  0011D6  A4D8               	btfss	status,2,c
  1891  0011D8  D7CD               	goto	u390
  1892  0011DA                     u410:
  1893                           
  1894                           ;stkvar	_dividend @ sp[(-1)+-2]
  1895  0011DA  0EFD               	movlw	-3
  1896  0011DC  CFE3 F047          	movff	plusw1,btemp
  1897  0011E0  0EFE               	movlw	-2
  1898  0011E2  CFE3 F048          	movff	plusw1,btemp+1
  1899                           
  1900                           ; ___lwmod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  1901  0011E6  0EFB               	movlw	251
  1902  0011E8  26E1               	addwf	fsr1l,f,c
  1903  0011EA  0EFF               	movlw	255
  1904  0011EC  22E2               	addwfc	fsr1h,f,c
  1905  0011EE  0012               	return		;funcret
  1906  0011F0                     __end_of___lwmod:
  1907                           	opt callstack 0
  1908                           
  1909 ;; *************** function _config_timer0 *****************
  1910 ;; Defined at:
  1911 ;;		line 30 in file "int0_test.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;		None
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;		None
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1  [STACK] void 
  1918 ;; Registers used:
  1919 ;;		wreg, status,2
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1925 ;;      Params:         0       0       0       0       0       0       0
  1926 ;;      Locals:         0       0       0       0       0       0       0
  1927 ;;      Temps:          0       0       0       0       0       0       0
  1928 ;;      Totals:         0       0       0       0       0       0       0
  1929 ;;Total ram usage:        0 bytes
  1930 ;; Hardware stack levels used:    1
  1931 ;; Hardware stack levels required when called:   12
  1932 ;; This function calls:
  1933 ;;		Nothing
  1934 ;; This function is called by:
  1935 ;;		_main
  1936 ;; This function uses a reentrant model
  1937 ;;
  1938                           
  1939                           	psect	text10
  1940  00178E                     __ptext10:
  1941                           	opt callstack 0
  1942  00178E                     _config_timer0:
  1943                           	opt callstack 18
  1944                           
  1945                           ;int0_test.c: 36:   T0CONbits.T0CS = 0;
  1946                           
  1947                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1948                           ;incstack = 0
  1949  00178E  9AD5               	bcf	4053,5,c	;volatile
  1950                           
  1951                           ;int0_test.c: 37:   T0CONbits.PSA = 0;
  1952  001790  96D5               	bcf	4053,3,c	;volatile
  1953                           
  1954                           ;int0_test.c: 38:   T0CONbits.T0PS = 0b111;
  1955  001792  0E07               	movlw	7
  1956  001794  12D5               	iorwf	4053,f,c	;volatile
  1957                           
  1958                           ;int0_test.c: 39:   INTCONbits.PEIE = 1;
  1959  001796  8CF2               	bsf	4082,6,c	;volatile
  1960                           
  1961                           ;int0_test.c: 40:   INTCONbits.TMR0IE = 1;
  1962  001798  8AF2               	bsf	4082,5,c	;volatile
  1963                           
  1964                           ;int0_test.c: 41:   TMR0L = 252;
  1965  00179A  0EFC               	movlw	252
  1966  00179C  6ED6               	movwf	4054,c	;volatile
  1967                           
  1968                           ; _config_timer0: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  1969  00179E  0012               	return		;funcret
  1970  0017A0                     __end_of_config_timer0:
  1971                           	opt callstack 0
  1972                           
  1973 ;; *************** function _config_INT0 *****************
  1974 ;; Defined at:
  1975 ;;		line 15 in file "int0_test.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;		None
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;		None
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  1  [STACK] void 
  1982 ;; Registers used:
  1983 ;;		None
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1989 ;;      Params:         0       0       0       0       0       0       0
  1990 ;;      Locals:         0       0       0       0       0       0       0
  1991 ;;      Temps:          0       0       0       0       0       0       0
  1992 ;;      Totals:         0       0       0       0       0       0       0
  1993 ;;Total ram usage:        0 bytes
  1994 ;; Hardware stack levels used:    1
  1995 ;; Hardware stack levels required when called:   12
  1996 ;; This function calls:
  1997 ;;		Nothing
  1998 ;; This function is called by:
  1999 ;;		_main
  2000 ;; This function uses a reentrant model
  2001 ;;
  2002                           
  2003                           	psect	text11
  2004  00177A                     __ptext11:
  2005                           	opt callstack 0
  2006  00177A                     _config_INT0:
  2007                           	opt callstack 18
  2008                           
  2009                           ;int0_test.c: 16:   TRISDbits.RD0 = 0;
  2010                           
  2011                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2012                           ;incstack = 0
  2013  00177A  9095               	bcf	3989,0,c	;volatile
  2014                           
  2015                           ;int0_test.c: 17:   INTCONbits.GIE = 1;
  2016  00177C  8EF2               	bsf	4082,7,c	;volatile
  2017                           
  2018                           ;int0_test.c: 19:   INTCONbits.PEIE_GIEL = 1;
  2019  00177E  8CF2               	bsf	4082,6,c	;volatile
  2020                           
  2021                           ;int0_test.c: 20:   INTCONbits.GIEL = 1;
  2022  001780  8CF2               	bsf	4082,6,c	;volatile
  2023                           
  2024                           ;int0_test.c: 22:   INTCONbits.INT0E = 1;
  2025  001782  88F2               	bsf	4082,4,c	;volatile
  2026                           
  2027                           ;int0_test.c: 23:   INTCONbits.INT0IE = 1;
  2028  001784  88F2               	bsf	4082,4,c	;volatile
  2029                           
  2030                           ;int0_test.c: 24:   INTCONbits.INT0IF = 0;
  2031  001786  92F2               	bcf	4082,1,c	;volatile
  2032                           
  2033                           ;int0_test.c: 25:   INTCON2bits.RBPU = 0;
  2034  001788  9EF1               	bcf	4081,7,c	;volatile
  2035                           
  2036                           ;int0_test.c: 26:   INTCON2bits.INTEDG0 = 1;
  2037  00178A  8CF1               	bsf	4081,6,c	;volatile
  2038                           
  2039                           ; _config_INT0: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  2040  00178C  0012               	return		;funcret
  2041  00178E                     __end_of_config_INT0:
  2042                           	opt callstack 0
  2043                           
  2044 ;; *************** function _task_idle *****************
  2045 ;; Defined at:
  2046 ;;		line 116 in file "kernel.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;		None
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;		None
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  1  [STACK] void 
  2053 ;; Registers used:
  2054 ;;		None
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2060 ;;      Params:         0       0       0       0       0       0       0
  2061 ;;      Locals:         0       0       0       0       0       0       0
  2062 ;;      Temps:          0       0       0       0       0       0       0
  2063 ;;      Totals:         0       0       0       0       0       0       0
  2064 ;;Total ram usage:        0 bytes
  2065 ;; Hardware stack levels used:    1
  2066 ;; Hardware stack levels required when called:    6
  2067 ;; This function calls:
  2068 ;;		Nothing
  2069 ;; This function is called by:
  2070 ;;		_lunos_init
  2071 ;; This function uses a reentrant model
  2072 ;;
  2073                           
  2074                           	psect	text12
  2075  0017A6                     __ptext12:
  2076                           	opt callstack 0
  2077  0017A6                     _task_idle:
  2078                           	opt callstack 20
  2079                           
  2080                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2081                           ;incstack = 0
  2082                           ;kernel.c: 118:   while (1) __nop();
  2083  0017A6  F000               	nop	
  2084  0017A8  D7FE               	goto	_task_idle
  2085  0017AA                     __end_of_task_idle:
  2086                           	opt callstack 0
  2087                           
  2088 ;; *************** function _task_2heat *****************
  2089 ;; Defined at:
  2090 ;;		line 56 in file "car.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;		None
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;		None
  2095 ;; Return value:  Size  Location     Type
  2096 ;;                  1  [STACK] void 
  2097 ;; Registers used:
  2098 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2099 ;; Tracked objects:
  2100 ;;		On entry : 0/0
  2101 ;;		On exit  : 0/0
  2102 ;;		Unchanged: 0/0
  2103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2104 ;;      Params:         0       0       0       0       0       0       0
  2105 ;;      Locals:         0       0       0       0       0       0       0
  2106 ;;      Temps:          0       0       0       0       0       0       0
  2107 ;;      Totals:         0       0       0       0       0       0       0
  2108 ;;Total ram usage:        0 bytes
  2109 ;; Hardware stack levels used:    1
  2110 ;; Hardware stack levels required when called:   11
  2111 ;; This function calls:
  2112 ;;		_lunos_delayTask
  2113 ;; This function is called by:
  2114 ;;		_main
  2115 ;; This function uses a reentrant model
  2116 ;;
  2117                           
  2118                           	psect	text13
  2119  00175A                     __ptext13:
  2120                           	opt callstack 0
  2121  00175A                     _task_2heat:
  2122                           	opt callstack 15
  2123                           
  2124                           ;car.c: 58:         if( started == 1 ){
  2125                           
  2126                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2127                           ;incstack = 0
  2128                           ;car.c: 57:     while(1){
  2129  00175A  040B               	decf	_started,w,c
  2130  00175C  100C               	iorwf	_started+1,w,c
  2131  00175E  A4D8               	btfss	status,2,c
  2132  001760  D002               	goto	l488
  2133                           
  2134                           ;car.c: 59:             PORTDbits.RD2 = 1;
  2135  001762  8483               	bsf	3971,2,c	;volatile
  2136  001764  D002               	goto	l490
  2137  001766                     l488:
  2138                           
  2139                           ;car.c: 62:             PORTDbits.RD2 = 0;
  2140  001766  9483               	bcf	3971,2,c	;volatile
  2141                           
  2142                           ;car.c: 63:             if(PORTBbits.RB4 = 0){
  2143  001768  9881               	bcf	3969,4,c	;volatile
  2144  00176A                     l490:
  2145                           
  2146                           ;car.c: 66:                 PORTDbits.RD3 = 1;
  2147  00176A  8683               	bsf	3971,3,c	;volatile
  2148                           
  2149                           ;car.c: 70:         lunos_delayTask(100);
  2150  00176C  0E64               	movlw	100
  2151  00176E  6EE6               	movwf	postinc1,c
  2152  001770  0E00               	movlw	0
  2153  001772  6EE6               	movwf	postinc1,c
  2154  001774  EC0B  F00B         	call	_lunos_delayTask	;wreg free
  2155  001778  D7F0               	goto	_task_2heat
  2156  00177A                     __end_of_task_2heat:
  2157                           	opt callstack 0
  2158                           
  2159 ;; *************** function _lunos_delayTask *****************
  2160 ;; Defined at:
  2161 ;;		line 30 in file "kernel.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;  time            2  [STACK] unsigned int 
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;		None
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  1  [STACK] void 
  2168 ;; Registers used:
  2169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2175 ;;      Params:         0       0       0       0       0       0       0
  2176 ;;      Locals:         0       0       0       0       0       0       0
  2177 ;;      Temps:          0       0       0       0       0       0       0
  2178 ;;      Totals:         0       0       0       0       0       0       0
  2179 ;;Total ram usage:        0 bytes
  2180 ;; Hardware stack levels used:    1
  2181 ;; Hardware stack levels required when called:   10
  2182 ;; This function calls:
  2183 ;;		_dispatcher
  2184 ;; This function is called by:
  2185 ;;		_task_keyboard
  2186 ;;		_task_2heat
  2187 ;; This function uses a reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text14
  2191  001616                     __ptext14:
  2192                           	opt callstack 0
  2193  001616                     _lunos_delayTask:
  2194                           	opt callstack 15
  2195                           
  2196                           ;kernel.c: 31:   INTCONbits.GIE = 0;
  2197                           
  2198                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2199                           ;incstack = 0
  2200  001616  9EF2               	bcf	4082,7,c	;volatile
  2201                           
  2202                           ;kernel.c: 33:   ready_queue.tasks[ready_queue.task_running].task_delay_time = time;
  2203                           ;stkvar	_time @ sp[(0)+-2]
  2204  001618  50E1               	movf	fsr1l,w,c
  2205  00161A  0FFE               	addlw	-2
  2206  00161C  6ED9               	movwf	fsr2l,c
  2207  00161E  50E2               	movf	fsr1h,w,c
  2208  001620  6EDA               	movwf	fsr2h,c
  2209  001622  0EFF               	movlw	255
  2210  001624  22DA               	addwfc	fsr2h,f,c
  2211  001626  EE02  F0F8         	lfsr	0,_ready_queue+542
  2212  00162A  CFEE F051          	movff	postinc0,btemp+10
  2213  00162E  CFED F052          	movff	postdec0,btemp+11
  2214  001632  0E6C               	movlw	108
  2215  001634  0251               	mulwf	btemp+10,c
  2216  001636  CFF3 F04F          	movff	prodl,btemp+8
  2217  00163A  CFF4 F050          	movff	prodh,btemp+9
  2218  00163E  0252               	mulwf	btemp+11,c
  2219  001640  50F3               	movf	prodl,w,c
  2220  001642  2650               	addwf	btemp+9,f,c
  2221  001644  0E44               	movlw	low (_ready_queue+106)
  2222  001646  244F               	addwf	btemp+8,w,c
  2223  001648  6EE9               	movwf	fsr0l,c
  2224  00164A  0E01               	movlw	high (_ready_queue+106)
  2225  00164C  2050               	addwfc	btemp+9,w,c
  2226  00164E  6EEA               	movwf	fsr0h,c
  2227  001650  CFDE FFEE          	movff	postinc2,postinc0
  2228  001654  CFDD FFED          	movff	postdec2,postdec0
  2229                           
  2230                           ;kernel.c: 34:   dispatcher(WAITING);
  2231  001658  0E02               	movlw	2
  2232  00165A  6EE6               	movwf	postinc1,c
  2233  00165C  EC9A  F003         	call	_dispatcher	;wreg free
  2234                           
  2235                           ;kernel.c: 36:   INTCONbits.GIE = 1;
  2236  001660  8EF2               	bsf	4082,7,c	;volatile
  2237                           
  2238                           ; _lunos_delayTask: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  2239  001662  52E5               	movf	postdec1,f,c
  2240  001664  52E5               	movf	postdec1,f,c
  2241  001666  0012               	return		;funcret
  2242  001668                     __end_of_lunos_delayTask:
  2243                           	opt callstack 0
  2244                           
  2245 ;; *************** function _micro_setup *****************
  2246 ;; Defined at:
  2247 ;;		line 17 in file "car.c"
  2248 ;; Parameters:    Size  Location     Type
  2249 ;;		None
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;		None
  2252 ;; Return value:  Size  Location     Type
  2253 ;;                  1  [STACK] void 
  2254 ;; Registers used:
  2255 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2261 ;;      Params:         0       0       0       0       0       0       0
  2262 ;;      Locals:         0       0       0       0       0       0       0
  2263 ;;      Temps:          0       0       0       0       0       0       0
  2264 ;;      Totals:         0       0       0       0       0       0       0
  2265 ;;Total ram usage:        0 bytes
  2266 ;; Hardware stack levels used:    1
  2267 ;; Hardware stack levels required when called:   14
  2268 ;; This function calls:
  2269 ;;		_pipe_create
  2270 ;;		_sem_init
  2271 ;; This function is called by:
  2272 ;;		_main
  2273 ;; This function uses a reentrant model
  2274 ;;
  2275                           
  2276                           	psect	text15
  2277  001286                     __ptext15:
  2278                           	opt callstack 0
  2279  001286                     _micro_setup:
  2280                           	opt callstack 12
  2281                           
  2282                           ;car.c: 18:     TRISB = 0xFF;
  2283                           
  2284                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2285                           ;incstack = 0
  2286  001286  6893               	setf	3987,c	;volatile
  2287                           
  2288                           ;car.c: 19:     TRISC = 0b00000000;
  2289  001288  6A94               	clrf	3988,c	;volatile
  2290                           
  2291                           ;car.c: 20:     TRISD = 0b00000000;
  2292  00128A  6A95               	clrf	3989,c	;volatile
  2293                           
  2294                           ;car.c: 21:     sem_init(&s_pipe_time, 1);
  2295  00128C  0E01               	movlw	1
  2296  00128E  6EE6               	movwf	postinc1,c
  2297  001290  0E00               	movlw	0
  2298  001292  6EE6               	movwf	postinc1,c
  2299  001294  0E8E               	movlw	low _s_pipe_time
  2300  001296  6EE6               	movwf	postinc1,c
  2301  001298  0E00               	movlw	high _s_pipe_time
  2302  00129A  6EE6               	movwf	postinc1,c
  2303  00129C  EC9C  F00A         	call	_sem_init	;wreg free
  2304                           
  2305                           ;car.c: 22:     pipe_create(&pipe_time, &s_pipe_time);
  2306  0012A0  0E8E               	movlw	low _s_pipe_time
  2307  0012A2  6EE6               	movwf	postinc1,c
  2308  0012A4  0E00               	movlw	high _s_pipe_time
  2309  0012A6  6EE6               	movwf	postinc1,c
  2310  0012A8  0E3D               	movlw	low _pipe_time
  2311  0012AA  6EE6               	movwf	postinc1,c
  2312  0012AC  0E00               	movlw	high _pipe_time
  2313  0012AE  6EE6               	movwf	postinc1,c
  2314  0012B0  EC34  F008         	call	_pipe_create	;wreg free
  2315                           
  2316                           ;car.c: 23:     sem_init(&s_pipe_start, 1);
  2317  0012B4  0E01               	movlw	1
  2318  0012B6  6EE6               	movwf	postinc1,c
  2319  0012B8  0E00               	movlw	0
  2320  0012BA  6EE6               	movwf	postinc1,c
  2321  0012BC  0E80               	movlw	low _s_pipe_start
  2322  0012BE  6EE6               	movwf	postinc1,c
  2323  0012C0  0E00               	movlw	high _s_pipe_start
  2324  0012C2  6EE6               	movwf	postinc1,c
  2325  0012C4  EC9C  F00A         	call	_sem_init	;wreg free
  2326                           
  2327                           ;car.c: 24:     pipe_create(&pipe_start, &s_pipe_start);
  2328  0012C8  0E80               	movlw	low _s_pipe_start
  2329  0012CA  6EE6               	movwf	postinc1,c
  2330  0012CC  0E00               	movlw	high _s_pipe_start
  2331  0012CE  6EE6               	movwf	postinc1,c
  2332  0012D0  0EC6               	movlw	low _pipe_start
  2333  0012D2  6EE6               	movwf	postinc1,c
  2334  0012D4  0E00               	movlw	high _pipe_start
  2335  0012D6  6EE6               	movwf	postinc1,c
  2336  0012D8  EC34  F008         	call	_pipe_create	;wreg free
  2337                           
  2338                           ;car.c: 26:     sem_init(&s_count, 1);
  2339  0012DC  0E01               	movlw	1
  2340  0012DE  6EE6               	movwf	postinc1,c
  2341  0012E0  0E00               	movlw	0
  2342  0012E2  6EE6               	movwf	postinc1,c
  2343  0012E4  0E2F               	movlw	low _s_count
  2344  0012E6  6EE6               	movwf	postinc1,c
  2345  0012E8  0E00               	movlw	high _s_count
  2346  0012EA  6EE6               	movwf	postinc1,c
  2347  0012EC  EC9C  F00A         	call	_sem_init	;wreg free
  2348                           
  2349                           ;car.c: 27:     sem_init(&s_time, 1);
  2350  0012F0  0E01               	movlw	1
  2351  0012F2  6EE6               	movwf	postinc1,c
  2352  0012F4  0E00               	movlw	0
  2353  0012F6  6EE6               	movwf	postinc1,c
  2354  0012F8  0E21               	movlw	low _s_time
  2355  0012FA  6EE6               	movwf	postinc1,c
  2356  0012FC  0E00               	movlw	high _s_time
  2357  0012FE  6EE6               	movwf	postinc1,c
  2358  001300  EC9C  F00A         	call	_sem_init	;wreg free
  2359                           
  2360                           ;car.c: 28:     sem_init(&s_started, 1);
  2361  001304  0E01               	movlw	1
  2362  001306  6EE6               	movwf	postinc1,c
  2363  001308  0E00               	movlw	0
  2364  00130A  6EE6               	movwf	postinc1,c
  2365  00130C  0E13               	movlw	low _s_started
  2366  00130E  6EE6               	movwf	postinc1,c
  2367  001310  0E00               	movlw	high _s_started
  2368  001312  6EE6               	movwf	postinc1,c
  2369  001314  EC9C  F00A         	call	_sem_init	;wreg free
  2370                           
  2371                           ; _micro_setup: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  2372  001318  0012               	return		;funcret
  2373  00131A                     __end_of_micro_setup:
  2374                           	opt callstack 0
  2375                           
  2376 ;; *************** function _task_keyboard *****************
  2377 ;; Defined at:
  2378 ;;		line 33 in file "car.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;		None
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;		None
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  1  [STACK] void 
  2385 ;; Registers used:
  2386 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2392 ;;      Params:         0       0       0       0       0       0       0
  2393 ;;      Locals:         0       0       0       0       0       0       0
  2394 ;;      Temps:          0       0       0       0       0       0       0
  2395 ;;      Totals:         0       0       0       0       0       0       0
  2396 ;;Total ram usage:        0 bytes
  2397 ;; Hardware stack levels used:    1
  2398 ;; Hardware stack levels required when called:   11
  2399 ;; This function calls:
  2400 ;;		_lunos_delayTask
  2401 ;;		_sem_post
  2402 ;;		_sem_wait
  2403 ;; This function is called by:
  2404 ;;		_main
  2405 ;; This function uses a reentrant model
  2406 ;;
  2407                           
  2408                           	psect	text16
  2409  0015A8                     __ptext16:
  2410                           	opt callstack 0
  2411  0015A8                     _task_keyboard:
  2412                           	opt callstack 15
  2413                           
  2414                           ;car.c: 36:         if(PORTBbits.RB5 == 0){
  2415                           
  2416                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2417                           ;incstack = 0
  2418                           ;car.c: 35:     while(1){
  2419  0015A8  BA81               	btfsc	3969,5,c	;volatile
  2420  0015AA  D7FE               	goto	_task_keyboard
  2421                           
  2422                           ;car.c: 37:             if(PORTBbits.RB4 == 0){
  2423  0015AC  B881               	btfsc	3969,4,c	;volatile
  2424  0015AE  D02C               	goto	l2189
  2425                           
  2426                           ;car.c: 38:                 sem_wait(&s_started);
  2427  0015B0  0E13               	movlw	low _s_started
  2428  0015B2  6EE6               	movwf	postinc1,c
  2429  0015B4  0E00               	movlw	high _s_started
  2430  0015B6  6EE6               	movwf	postinc1,c
  2431  0015B8  EC63  F007         	call	_sem_wait	;wreg free
  2432                           
  2433                           ;car.c: 39:                 started = 1;
  2434  0015BC  0E00               	movlw	0
  2435  0015BE  6E0C               	movwf	_started+1,c
  2436  0015C0  0E01               	movlw	1
  2437  0015C2  6E0B               	movwf	_started,c
  2438                           
  2439                           ;car.c: 40:                 sem_post(&s_started);
  2440  0015C4  0E13               	movlw	low _s_started
  2441  0015C6  6EE6               	movwf	postinc1,c
  2442  0015C8  0E00               	movlw	high _s_started
  2443  0015CA  6EE6               	movwf	postinc1,c
  2444  0015CC  EC68  F006         	call	_sem_post	;wreg free
  2445                           
  2446                           ;car.c: 42:                 sem_wait(&s_time);
  2447  0015D0  0E21               	movlw	low _s_time
  2448  0015D2  6EE6               	movwf	postinc1,c
  2449  0015D4  0E00               	movlw	high _s_time
  2450  0015D6  6EE6               	movwf	postinc1,c
  2451  0015D8  EC63  F007         	call	_sem_wait	;wreg free
  2452                           
  2453                           ;car.c: 43:                 sem_wait(&s_count);
  2454  0015DC  0E2F               	movlw	low _s_count
  2455  0015DE  6EE6               	movwf	postinc1,c
  2456  0015E0  0E00               	movlw	high _s_count
  2457  0015E2  6EE6               	movwf	postinc1,c
  2458  0015E4  EC63  F007         	call	_sem_wait	;wreg free
  2459                           
  2460                           ;car.c: 44:                 count = time;
  2461  0015E8  C007  F009         	movff	_time,_count
  2462  0015EC  C008  F00A         	movff	_time+1,_count+1
  2463                           
  2464                           ;car.c: 45:                 sem_post(&s_count);
  2465  0015F0  0E2F               	movlw	low _s_count
  2466  0015F2  6EE6               	movwf	postinc1,c
  2467  0015F4  0E00               	movlw	high _s_count
  2468  0015F6  6EE6               	movwf	postinc1,c
  2469  0015F8  EC68  F006         	call	_sem_post	;wreg free
  2470                           
  2471                           ;car.c: 46:                 sem_post(&s_time);
  2472  0015FC  0E21               	movlw	low _s_time
  2473  0015FE  6EE6               	movwf	postinc1,c
  2474  001600  0E00               	movlw	high _s_time
  2475  001602  6EE6               	movwf	postinc1,c
  2476  001604  EC68  F006         	call	_sem_post	;wreg free
  2477  001608                     l2189:
  2478                           
  2479                           ;car.c: 49:         lunos_delayTask(100);
  2480  001608  0E64               	movlw	100
  2481  00160A  6EE6               	movwf	postinc1,c
  2482  00160C  0E00               	movlw	0
  2483  00160E  6EE6               	movwf	postinc1,c
  2484  001610  EC0B  F00B         	call	_lunos_delayTask	;wreg free
  2485  001614  D7C9               	goto	_task_keyboard
  2486  001616                     __end_of_task_keyboard:
  2487                           	opt callstack 0
  2488                           
  2489 ;; *************** function _sem_wait *****************
  2490 ;; Defined at:
  2491 ;;		line 20 in file "semaphore.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;  s               2  [STACK] PTR struct semaphore
  2494 ;;		 -> s_pipe_start(14), s_pipe_time(14), s_pipe(14), teste_2(14), 
  2495 ;;		 -> teste_1(14), s_time(14), s_count(14), s_started(14), 
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;		None
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  1  [STACK] void 
  2500 ;; Registers used:
  2501 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2507 ;;      Params:         0       0       0       0       0       0       0
  2508 ;;      Locals:         0       0       0       0       0       0       0
  2509 ;;      Temps:          0       0       0       0       0       0       0
  2510 ;;      Totals:         0       0       0       0       0       0       0
  2511 ;;Total ram usage:        0 bytes
  2512 ;; Hardware stack levels used:    1
  2513 ;; Hardware stack levels required when called:   10
  2514 ;; This function calls:
  2515 ;;		_dispatcher
  2516 ;; This function is called by:
  2517 ;;		_ISR_timer0
  2518 ;;		_task_keyboard
  2519 ;; This function uses a reentrant model
  2520 ;;
  2521                           
  2522                           	psect	text17
  2523  000EC6                     __ptext17:
  2524                           	opt callstack 0
  2525  000EC6                     _sem_wait:
  2526                           	opt callstack 9
  2527                           
  2528                           ;semaphore.c: 21:   INTCONbits.GIE = 0;
  2529                           
  2530                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2531                           ;incstack = 0
  2532  000EC6  9EF2               	bcf	4082,7,c	;volatile
  2533                           
  2534                           ;semaphore.c: 23:   s->contador -= 1;
  2535                           ;stkvar	_s @ sp[(0)+-2]
  2536  000EC8  0EFE               	movlw	-2
  2537  000ECA  CFE3 FFD9          	movff	plusw1,fsr2l
  2538  000ECE  0EFF               	movlw	-1
  2539  000ED0  CFE3 FFDA          	movff	plusw1,fsr2h
  2540  000ED4  06DE               	decf	postinc2,f,c
  2541  000ED6  0E00               	movlw	0
  2542  000ED8  5ADD               	subwfb	postdec2,f,c
  2543                           
  2544                           ;semaphore.c: 24:   if (s->contador < 0) {
  2545                           ;stkvar	_s @ sp[(0)+-2]
  2546  000EDA  0EFE               	movlw	-2
  2547  000EDC  CFE3 FFD9          	movff	plusw1,fsr2l
  2548  000EE0  0EFF               	movlw	-1
  2549  000EE2  CFE3 FFDA          	movff	plusw1,fsr2h
  2550  000EE6  0E01               	movlw	1
  2551  000EE8  AEDB               	btfss	plusw2,7,c
  2552  000EEA  D053               	goto	l1887
  2553                           
  2554                           ;semaphore.c: 25:     s->bloqued_Queue[s->bloqued_size] = ready_queue.task_running;
  2555  000EEC  EE22  F0F8         	lfsr	2,_ready_queue+542
  2556                           
  2557                           ;stkvar	_s @ sp[(0)+-2]
  2558  000EF0  0EFE               	movlw	-2
  2559  000EF2  CFE3 F051          	movff	plusw1,btemp+10
  2560  000EF6  0EFF               	movlw	-1
  2561  000EF8  CFE3 F052          	movff	plusw1,btemp+11
  2562  000EFC  0E0A               	movlw	10
  2563  000EFE  2451               	addwf	btemp+10,w,c
  2564  000F00  6EE9               	movwf	fsr0l,c
  2565  000F02  0E00               	movlw	0
  2566  000F04  2052               	addwfc	btemp+11,w,c
  2567  000F06  6EEA               	movwf	fsr0h,c
  2568  000F08  CFEE F051          	movff	postinc0,btemp+10
  2569  000F0C  CFED F052          	movff	postdec0,btemp+11
  2570  000F10  90D8               	bcf	status,0,c
  2571  000F12  3451               	rlcf	btemp+10,w,c
  2572  000F14  6E4F               	movwf	btemp+8,c
  2573  000F16  3452               	rlcf	btemp+11,w,c
  2574  000F18  6E50               	movwf	btemp+9,c
  2575                           
  2576                           ;stkvar	_s @ sp[(0)+-2]
  2577  000F1A  0EFE               	movlw	-2
  2578  000F1C  50E3               	movf	plusw1,w,c
  2579  000F1E  264F               	addwf	btemp+8,f,c
  2580  000F20  0EFF               	movlw	-1
  2581  000F22  50E3               	movf	plusw1,w,c
  2582  000F24  2250               	addwfc	btemp+9,f,c
  2583  000F26  0E02               	movlw	2
  2584  000F28  244F               	addwf	btemp+8,w,c
  2585  000F2A  6EE9               	movwf	fsr0l,c
  2586  000F2C  0E00               	movlw	0
  2587  000F2E  2050               	addwfc	btemp+9,w,c
  2588  000F30  6EEA               	movwf	fsr0h,c
  2589  000F32  CFDE FFEE          	movff	postinc2,postinc0
  2590  000F36  CFDD FFED          	movff	postdec2,postdec0
  2591                           
  2592                           ;semaphore.c: 26:     s->bloqued_size = (s->bloqued_size + 1) % 4;
  2593                           ;stkvar	_s @ sp[(0)+-2]
  2594  000F3A  0EFE               	movlw	-2
  2595  000F3C  CFE3 F051          	movff	plusw1,btemp+10
  2596  000F40  0EFF               	movlw	-1
  2597  000F42  CFE3 F052          	movff	plusw1,btemp+11
  2598  000F46  0E0A               	movlw	10
  2599  000F48  2451               	addwf	btemp+10,w,c
  2600  000F4A  6ED9               	movwf	fsr2l,c
  2601  000F4C  0E00               	movlw	0
  2602  000F4E  2052               	addwfc	btemp+11,w,c
  2603  000F50  6EDA               	movwf	fsr2h,c
  2604  000F52  CFDE F051          	movff	postinc2,btemp+10
  2605  000F56  CFDD F052          	movff	postdec2,btemp+11
  2606  000F5A  0E01               	movlw	1
  2607  000F5C  2651               	addwf	btemp+10,f,c
  2608  000F5E  0E00               	movlw	0
  2609  000F60  2252               	addwfc	btemp+11,f,c
  2610  000F62  0E03               	movlw	3
  2611  000F64  1651               	andwf	btemp+10,f,c
  2612  000F66  0E00               	movlw	0
  2613  000F68  1652               	andwf	btemp+11,f,c
  2614                           
  2615                           ;stkvar	_s @ sp[(0)+-2]
  2616  000F6A  0EFE               	movlw	-2
  2617  000F6C  CFE3 F04F          	movff	plusw1,btemp+8
  2618  000F70  0EFF               	movlw	-1
  2619  000F72  CFE3 F050          	movff	plusw1,btemp+9
  2620  000F76  0E0A               	movlw	10
  2621  000F78  244F               	addwf	btemp+8,w,c
  2622  000F7A  6ED9               	movwf	fsr2l,c
  2623  000F7C  0E00               	movlw	0
  2624  000F7E  2050               	addwfc	btemp+9,w,c
  2625  000F80  6EDA               	movwf	fsr2h,c
  2626  000F82  C051  FFDE         	movff	btemp+10,postinc2
  2627  000F86  C052  FFDD         	movff	btemp+11,postdec2
  2628                           
  2629                           ;semaphore.c: 27:     dispatcher(WAITING_SEM);
  2630  000F8A  0E05               	movlw	5
  2631  000F8C  6EE6               	movwf	postinc1,c
  2632  000F8E  EC9A  F003         	call	_dispatcher	;wreg free
  2633  000F92                     l1887:
  2634                           
  2635                           ;semaphore.c: 30:   INTCONbits.GIE = 1;
  2636  000F92  8EF2               	bsf	4082,7,c	;volatile
  2637                           
  2638                           ; _sem_wait: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  2639  000F94  52E5               	movf	postdec1,f,c
  2640  000F96  52E5               	movf	postdec1,f,c
  2641  000F98  0012               	return		;funcret
  2642  000F9A                     __end_of_sem_wait:
  2643                           	opt callstack 0
  2644                           
  2645 ;; *************** function _sem_post *****************
  2646 ;; Defined at:
  2647 ;;		line 33 in file "semaphore.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;  s               2  [STACK] PTR struct semaphore
  2650 ;;		 -> s_pipe_start(14), s_pipe_time(14), s_pipe(14), teste_2(14), 
  2651 ;;		 -> teste_1(14), s_time(14), s_count(14), s_started(14), 
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;		None
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  1  [STACK] void 
  2656 ;; Registers used:
  2657 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl, prodh
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2663 ;;      Params:         0       0       0       0       0       0       0
  2664 ;;      Locals:         0       0       0       0       0       0       0
  2665 ;;      Temps:          0       0       0       0       0       0       0
  2666 ;;      Totals:         0       0       0       0       0       0       0
  2667 ;;Total ram usage:        0 bytes
  2668 ;; Hardware stack levels used:    1
  2669 ;; Hardware stack levels required when called:   10
  2670 ;; This function calls:
  2671 ;;		_dispatcher
  2672 ;; This function is called by:
  2673 ;;		_ISR_timer0
  2674 ;;		_task_keyboard
  2675 ;; This function uses a reentrant model
  2676 ;;
  2677                           
  2678                           	psect	text18
  2679  000CD0                     __ptext18:
  2680                           	opt callstack 0
  2681  000CD0                     _sem_post:
  2682                           	opt callstack 9
  2683                           
  2684                           ;semaphore.c: 34:   INTCONbits.GIE = 0;
  2685                           
  2686                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2687                           ;incstack = 0
  2688  000CD0  9EF2               	bcf	4082,7,c	;volatile
  2689                           
  2690                           ;semaphore.c: 36:   s->contador += 1;
  2691                           ;stkvar	_s @ sp[(0)+-2]
  2692  000CD2  0EFE               	movlw	-2
  2693  000CD4  CFE3 FFD9          	movff	plusw1,fsr2l
  2694  000CD8  0EFF               	movlw	-1
  2695  000CDA  CFE3 FFDA          	movff	plusw1,fsr2h
  2696  000CDE  2ADE               	incf	postinc2,f,c
  2697  000CE0  0E00               	movlw	0
  2698  000CE2  22DD               	addwfc	postdec2,f,c
  2699                           
  2700                           ;semaphore.c: 37:   if (s->contador <= 0) {
  2701                           ;stkvar	_s @ sp[(0)+-2]
  2702  000CE4  0EFE               	movlw	-2
  2703  000CE6  CFE3 FFD9          	movff	plusw1,fsr2l
  2704  000CEA  0EFF               	movlw	-1
  2705  000CEC  CFE3 FFDA          	movff	plusw1,fsr2h
  2706  000CF0  0E01               	movlw	1
  2707  000CF2  BEDB               	btfsc	plusw2,7,c
  2708  000CF4  D006               	goto	u49_20
  2709  000CF6  0E01               	movlw	1
  2710  000CF8  50DB               	movf	plusw2,w,c
  2711  000CFA  E165               	bnz	l1901
  2712  000CFC  04DE               	decf	postinc2,w,c
  2713  000CFE  B0D8               	btfsc	status,0,c
  2714  000D00  D062               	goto	l1901
  2715  000D02                     u49_20:
  2716                           
  2717                           ;semaphore.c: 38:     ready_queue.tasks[s->bloqued_Queue[s->task_to_ready]].task_state =
      +                           READY;
  2718                           ;stkvar	_s @ sp[(0)+-2]
  2719  000D02  0EFE               	movlw	-2
  2720  000D04  CFE3 F051          	movff	plusw1,btemp+10
  2721  000D08  0EFF               	movlw	-1
  2722  000D0A  CFE3 F052          	movff	plusw1,btemp+11
  2723  000D0E  0E0C               	movlw	12
  2724  000D10  2451               	addwf	btemp+10,w,c
  2725  000D12  6ED9               	movwf	fsr2l,c
  2726  000D14  0E00               	movlw	0
  2727  000D16  2052               	addwfc	btemp+11,w,c
  2728  000D18  6EDA               	movwf	fsr2h,c
  2729  000D1A  CFDE F051          	movff	postinc2,btemp+10
  2730  000D1E  CFDD F052          	movff	postdec2,btemp+11
  2731  000D22  90D8               	bcf	status,0,c
  2732  000D24  3451               	rlcf	btemp+10,w,c
  2733  000D26  6E4F               	movwf	btemp+8,c
  2734  000D28  3452               	rlcf	btemp+11,w,c
  2735  000D2A  6E50               	movwf	btemp+9,c
  2736                           
  2737                           ;stkvar	_s @ sp[(0)+-2]
  2738  000D2C  0EFE               	movlw	-2
  2739  000D2E  50E3               	movf	plusw1,w,c
  2740  000D30  264F               	addwf	btemp+8,f,c
  2741  000D32  0EFF               	movlw	-1
  2742  000D34  50E3               	movf	plusw1,w,c
  2743  000D36  2250               	addwfc	btemp+9,f,c
  2744  000D38  0E02               	movlw	2
  2745  000D3A  244F               	addwf	btemp+8,w,c
  2746  000D3C  6ED9               	movwf	fsr2l,c
  2747  000D3E  0E00               	movlw	0
  2748  000D40  2050               	addwfc	btemp+9,w,c
  2749  000D42  6EDA               	movwf	fsr2h,c
  2750  000D44  CFDE F051          	movff	postinc2,btemp+10
  2751  000D48  CFDD F052          	movff	postdec2,btemp+11
  2752  000D4C  0E6C               	movlw	108
  2753  000D4E  0251               	mulwf	btemp+10,c
  2754  000D50  CFF3 F04F          	movff	prodl,btemp+8
  2755  000D54  CFF4 F050          	movff	prodh,btemp+9
  2756  000D58  0252               	mulwf	btemp+11,c
  2757  000D5A  50F3               	movf	prodl,w,c
  2758  000D5C  2650               	addwf	btemp+9,f,c
  2759  000D5E  0EE2               	movlw	low (_ready_queue+8)
  2760  000D60  244F               	addwf	btemp+8,w,c
  2761  000D62  6ED9               	movwf	fsr2l,c
  2762  000D64  0E00               	movlw	high (_ready_queue+8)
  2763  000D66  2050               	addwfc	btemp+9,w,c
  2764  000D68  6EDA               	movwf	fsr2h,c
  2765  000D6A  0E00               	movlw	0
  2766  000D6C  6EDF               	movwf	indf2,c
  2767                           
  2768                           ;semaphore.c: 39:     s->task_to_ready = (s->task_to_ready + 1) % 4;
  2769                           ;stkvar	_s @ sp[(0)+-2]
  2770  000D6E  0EFE               	movlw	-2
  2771  000D70  CFE3 F051          	movff	plusw1,btemp+10
  2772  000D74  0EFF               	movlw	-1
  2773  000D76  CFE3 F052          	movff	plusw1,btemp+11
  2774  000D7A  0E0C               	movlw	12
  2775  000D7C  2451               	addwf	btemp+10,w,c
  2776  000D7E  6ED9               	movwf	fsr2l,c
  2777  000D80  0E00               	movlw	0
  2778  000D82  2052               	addwfc	btemp+11,w,c
  2779  000D84  6EDA               	movwf	fsr2h,c
  2780  000D86  CFDE F051          	movff	postinc2,btemp+10
  2781  000D8A  CFDD F052          	movff	postdec2,btemp+11
  2782  000D8E  0E01               	movlw	1
  2783  000D90  2651               	addwf	btemp+10,f,c
  2784  000D92  0E00               	movlw	0
  2785  000D94  2252               	addwfc	btemp+11,f,c
  2786  000D96  0E03               	movlw	3
  2787  000D98  1651               	andwf	btemp+10,f,c
  2788  000D9A  0E00               	movlw	0
  2789  000D9C  1652               	andwf	btemp+11,f,c
  2790                           
  2791                           ;stkvar	_s @ sp[(0)+-2]
  2792  000D9E  0EFE               	movlw	-2
  2793  000DA0  CFE3 F04F          	movff	plusw1,btemp+8
  2794  000DA4  0EFF               	movlw	-1
  2795  000DA6  CFE3 F050          	movff	plusw1,btemp+9
  2796  000DAA  0E0C               	movlw	12
  2797  000DAC  244F               	addwf	btemp+8,w,c
  2798  000DAE  6ED9               	movwf	fsr2l,c
  2799  000DB0  0E00               	movlw	0
  2800  000DB2  2050               	addwfc	btemp+9,w,c
  2801  000DB4  6EDA               	movwf	fsr2h,c
  2802  000DB6  C051  FFDE         	movff	btemp+10,postinc2
  2803  000DBA  C052  FFDD         	movff	btemp+11,postdec2
  2804                           
  2805                           ;semaphore.c: 40:     dispatcher(READY);
  2806  000DBE  0E00               	movlw	0
  2807  000DC0  6EE6               	movwf	postinc1,c
  2808  000DC2  EC9A  F003         	call	_dispatcher	;wreg free
  2809  000DC6                     l1901:
  2810                           
  2811                           ;semaphore.c: 43:   INTCONbits.GIE = 1;
  2812  000DC6  8EF2               	bsf	4082,7,c	;volatile
  2813                           
  2814                           ; _sem_post: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  2815  000DC8  52E5               	movf	postdec1,f,c
  2816  000DCA  52E5               	movf	postdec1,f,c
  2817  000DCC  0012               	return		;funcret
  2818  000DCE                     __end_of_sem_post:
  2819                           	opt callstack 0
  2820                           
  2821 ;; *************** function _ISR_timer0 *****************
  2822 ;; Defined at:
  2823 ;;		line 64 in file "int0_test.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;		None
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;		None
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  1    wreg      void 
  2830 ;; Registers used:
  2831 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2837 ;;      Params:         0       0       0       0       0       0       0
  2838 ;;      Locals:         0       0       0       0       0       0       0
  2839 ;;      Temps:         18       0       0       0       0       0       0
  2840 ;;      Totals:        18       0       0       0       0       0       0
  2841 ;;Total ram usage:       18 bytes
  2842 ;; Hardware stack levels used:    1
  2843 ;; Hardware stack levels required when called:    5
  2844 ;; This function calls:
  2845 ;;		___wmul
  2846 ;;		__div
  2847 ;;		__mod
  2848 ;;		_delay_decrement
  2849 ;;		_dp_update
  2850 ;;		_round_robin
  2851 ;;		_sem_post
  2852 ;;		_sem_wait
  2853 ;; This function is called by:
  2854 ;;		Interrupt level 2
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           	psect	intcode
  2859  000008                     __pintcode:
  2860                           	opt callstack 0
  2861  000008                     _ISR_timer0:
  2862                           	opt callstack 15
  2863                           
  2864                           ;incstack = 0
  2865  000008  ED0A  F000         	call	int_func,f	;refresh shadow registers
  2866                           
  2867                           	psect	intcode_body
  2868  000014                     __pintcode_body:
  2869                           	opt callstack 15
  2870  000014                     int_func:
  2871                           	opt callstack 15
  2872  000014  0006               	pop		; remove dummy address from shadow register refresh
  2873  000016  CFE9 F069          	movff	fsr0l,??_ISR_timer0+2
  2874  00001A  CFEA F06A          	movff	fsr0h,??_ISR_timer0+3
  2875  00001E  CFE1 F06B          	movff	fsr1l,??_ISR_timer0+4
  2876  000022  CFE2 F06C          	movff	fsr1h,??_ISR_timer0+5
  2877  000026  CFD9 F06D          	movff	fsr2l,??_ISR_timer0+6
  2878  00002A  CFDA F06E          	movff	fsr2h,??_ISR_timer0+7
  2879  00002E  CFF3 F06F          	movff	prodl,??_ISR_timer0+8
  2880  000032  CFF4 F070          	movff	prodh,??_ISR_timer0+9
  2881  000036  C047  F071         	movff	btemp,??_ISR_timer0+10
  2882  00003A  C048  F072         	movff	btemp+1,??_ISR_timer0+11
  2883  00003E  C04D  F073         	movff	btemp+6,??_ISR_timer0+12
  2884  000042  C04E  F074         	movff	btemp+7,??_ISR_timer0+13
  2885  000046  C04F  F075         	movff	btemp+8,??_ISR_timer0+14
  2886  00004A  C050  F076         	movff	btemp+9,??_ISR_timer0+15
  2887  00004E  C051  F077         	movff	btemp+10,??_ISR_timer0+16
  2888  000052  C052  F078         	movff	btemp+11,??_ISR_timer0+17
  2889  000056  EE15  F052         	lfsr	1,___inthi_sp
  2890                           
  2891                           ;int0_test.c: 65:   INTCONbits.GIE = 0;
  2892  00005A  9EF2               	bcf	4082,7,c	;volatile
  2893                           
  2894                           ;int0_test.c: 68:     if (INTCONbits.INT0IF) {
  2895  00005C  A2F2               	btfss	4082,1,c	;volatile
  2896  00005E  D0DD               	goto	i2l87
  2897                           
  2898                           ;int0_test.c: 69:         INTCONbits.INT0IF = 0;
  2899  000060  92F2               	bcf	4082,1,c	;volatile
  2900                           
  2901                           ;int0_test.c: 71:         if( PORTBbits.RB1 == 0 ){
  2902  000062  B281               	btfsc	3969,1,c	;volatile
  2903  000064  D025               	goto	i2l2003
  2904                           
  2905                           ;int0_test.c: 72:             sem_wait(&s_started);
  2906  000066  0E13               	movlw	low _s_started
  2907  000068  6EE6               	movwf	postinc1,c
  2908  00006A  0E00               	movlw	high _s_started
  2909  00006C  6EE6               	movwf	postinc1,c
  2910  00006E  EC63  F007         	call	_sem_wait	;wreg free
  2911                           
  2912                           ;int0_test.c: 73:             PORTCbits.RC0 = 1;
  2913  000072  8082               	bsf	3970,0,c	;volatile
  2914                           
  2915                           ;int0_test.c: 74:             PORTDbits.RD7 = ~PORTDbits.RD7;
  2916  000074  AE83               	btfss	3971,7,c	;volatile
  2917  000076  D002               	goto	i2u58_40
  2918  000078  0E01               	movlw	1
  2919  00007A  D001               	goto	i2u58_46
  2920  00007C                     i2u58_40:
  2921  00007C  0E00               	movlw	0
  2922  00007E                     i2u58_46:
  2923  00007E  0AFF               	xorlw	255
  2924  000080  6E67               	movwf	??_ISR_timer0& (0+255),c
  2925  000082  3267               	rrcf	??_ISR_timer0,f,c
  2926  000084  3267               	rrcf	??_ISR_timer0,f,c
  2927  000086  5083               	movf	3971,w,c	;volatile
  2928  000088  1867               	xorwf	??_ISR_timer0,w,c
  2929  00008A  0B7F               	andlw	-129
  2930  00008C  1867               	xorwf	??_ISR_timer0,w,c
  2931  00008E  6E83               	movwf	3971,c	;volatile
  2932                           
  2933                           ;int0_test.c: 75:             started = 0;
  2934  000090  6A0B               	clrf	_started,c
  2935  000092  6A0C               	clrf	_started+1,c
  2936                           
  2937                           ;int0_test.c: 76:             time = 0;
  2938  000094  6A07               	clrf	_time,c
  2939  000096  6A08               	clrf	_time+1,c
  2940                           
  2941                           ;int0_test.c: 77:             count = 0;
  2942  000098  6A09               	clrf	_count,c
  2943  00009A  6A0A               	clrf	_count+1,c
  2944                           
  2945                           ;int0_test.c: 78:             dezena = 0;
  2946  00009C  6A05               	clrf	_dezena,c
  2947  00009E  6A06               	clrf	_dezena+1,c
  2948                           
  2949                           ;int0_test.c: 79:             unidade = 0;
  2950  0000A0  6A03               	clrf	_unidade,c
  2951  0000A2  6A04               	clrf	_unidade+1,c
  2952                           
  2953                           ;int0_test.c: 80:             sem_post(&s_started);
  2954  0000A4  0E13               	movlw	low _s_started
  2955  0000A6  6EE6               	movwf	postinc1,c
  2956  0000A8  0E00               	movlw	high _s_started
  2957  0000AA  6EE6               	movwf	postinc1,c
  2958  0000AC  EC68  F006         	call	_sem_post	;wreg free
  2959  0000B0                     i2l2003:
  2960                           
  2961                           ;int0_test.c: 84:         if( PORTBbits.RB2 == 0 ){
  2962  0000B0  B481               	btfsc	3969,2,c	;volatile
  2963  0000B2  D042               	goto	i2l2025
  2964                           
  2965                           ;int0_test.c: 85:             PORTCbits.RC1 = 1;
  2966  0000B4  8282               	bsf	3970,1,c	;volatile
  2967                           
  2968                           ;int0_test.c: 86:             if(started == 1){
  2969  0000B6  040B               	decf	_started,w,c
  2970  0000B8  100C               	iorwf	_started+1,w,c
  2971  0000BA  A4D8               	btfss	status,2,c
  2972  0000BC  D011               	goto	i2l2015
  2973                           
  2974                           ;int0_test.c: 87:                 sem_wait(&s_count);
  2975  0000BE  0E2F               	movlw	low _s_count
  2976  0000C0  6EE6               	movwf	postinc1,c
  2977  0000C2  0E00               	movlw	high _s_count
  2978  0000C4  6EE6               	movwf	postinc1,c
  2979  0000C6  EC63  F007         	call	_sem_wait	;wreg free
  2980                           
  2981                           ;int0_test.c: 88:                 count += 10;
  2982  0000CA  0E0A               	movlw	10
  2983  0000CC  2609               	addwf	_count,f,c
  2984  0000CE  0E00               	movlw	0
  2985  0000D0  220A               	addwfc	_count+1,f,c
  2986                           
  2987                           ;int0_test.c: 89:                 sem_post(&s_count);
  2988  0000D2  0E2F               	movlw	low _s_count
  2989  0000D4  6EE6               	movwf	postinc1,c
  2990  0000D6  0E00               	movlw	high _s_count
  2991  0000D8  6EE6               	movwf	postinc1,c
  2992  0000DA  EC68  F006         	call	_sem_post	;wreg free
  2993                           
  2994                           ;int0_test.c: 90:             }else{
  2995  0000DE  D02C               	goto	i2l2025
  2996  0000E0                     i2l2015:
  2997                           
  2998                           ;int0_test.c: 91:                 sem_wait(&s_time);
  2999  0000E0  0E21               	movlw	low _s_time
  3000  0000E2  6EE6               	movwf	postinc1,c
  3001  0000E4  0E00               	movlw	high _s_time
  3002  0000E6  6EE6               	movwf	postinc1,c
  3003  0000E8  EC63  F007         	call	_sem_wait	;wreg free
  3004                           
  3005                           ;int0_test.c: 92:                 time += 10;
  3006  0000EC  0E0A               	movlw	10
  3007  0000EE  2607               	addwf	_time,f,c
  3008  0000F0  0E00               	movlw	0
  3009  0000F2  2208               	addwfc	_time+1,f,c
  3010                           
  3011                           ;int0_test.c: 93:                 unidade = _mod(time, 10);
  3012  0000F4  0E0A               	movlw	10
  3013  0000F6  6EE6               	movwf	postinc1,c
  3014  0000F8  0E00               	movlw	0
  3015  0000FA  6EE6               	movwf	postinc1,c
  3016  0000FC  C007  FFE6         	movff	_time,postinc1
  3017  000100  C008  FFE6         	movff	_time+1,postinc1
  3018  000104  EC60  F00A         	call	__mod	;wreg free
  3019  000108  C047  F003         	movff	btemp,_unidade
  3020  00010C  C048  F004         	movff	btemp+1,_unidade+1
  3021                           
  3022                           ;int0_test.c: 94:                 dezena = _div(time, 10);
  3023  000110  0E0A               	movlw	10
  3024  000112  6EE6               	movwf	postinc1,c
  3025  000114  0E00               	movlw	0
  3026  000116  6EE6               	movwf	postinc1,c
  3027  000118  C007  FFE6         	movff	_time,postinc1
  3028  00011C  C008  FFE6         	movff	_time+1,postinc1
  3029  000120  ECD5  F009         	call	__div	;wreg free
  3030  000124  C047  F005         	movff	btemp,_dezena
  3031  000128  C048  F006         	movff	btemp+1,_dezena+1
  3032                           
  3033                           ;int0_test.c: 95:                 sem_post(&s_time);
  3034  00012C  0E21               	movlw	low _s_time
  3035  00012E  6EE6               	movwf	postinc1,c
  3036  000130  0E00               	movlw	high _s_time
  3037  000132  6EE6               	movwf	postinc1,c
  3038  000134  EC68  F006         	call	_sem_post	;wreg free
  3039  000138                     i2l2025:
  3040                           
  3041                           ;int0_test.c: 99:         if( PORTBbits.RB3 == 0 ){
  3042  000138  B681               	btfsc	3969,3,c	;volatile
  3043  00013A  D042               	goto	i2l2047
  3044                           
  3045                           ;int0_test.c: 100:             PORTCbits.RC2 = 1;
  3046  00013C  8482               	bsf	3970,2,c	;volatile
  3047                           
  3048                           ;int0_test.c: 101:             if(started == 1){
  3049  00013E  040B               	decf	_started,w,c
  3050  000140  100C               	iorwf	_started+1,w,c
  3051  000142  A4D8               	btfss	status,2,c
  3052  000144  D011               	goto	i2l2037
  3053                           
  3054                           ;int0_test.c: 102:                 sem_wait(&s_count);
  3055  000146  0E2F               	movlw	low _s_count
  3056  000148  6EE6               	movwf	postinc1,c
  3057  00014A  0E00               	movlw	high _s_count
  3058  00014C  6EE6               	movwf	postinc1,c
  3059  00014E  EC63  F007         	call	_sem_wait	;wreg free
  3060                           
  3061                           ;int0_test.c: 103:                 count += 60;
  3062  000152  0E3C               	movlw	60
  3063  000154  2609               	addwf	_count,f,c
  3064  000156  0E00               	movlw	0
  3065  000158  220A               	addwfc	_count+1,f,c
  3066                           
  3067                           ;int0_test.c: 104:                 sem_post(&s_count);
  3068  00015A  0E2F               	movlw	low _s_count
  3069  00015C  6EE6               	movwf	postinc1,c
  3070  00015E  0E00               	movlw	high _s_count
  3071  000160  6EE6               	movwf	postinc1,c
  3072  000162  EC68  F006         	call	_sem_post	;wreg free
  3073                           
  3074                           ;int0_test.c: 105:             }else{
  3075  000166  D02C               	goto	i2l2047
  3076  000168                     i2l2037:
  3077                           
  3078                           ;int0_test.c: 106:                 sem_wait(&s_time);
  3079  000168  0E21               	movlw	low _s_time
  3080  00016A  6EE6               	movwf	postinc1,c
  3081  00016C  0E00               	movlw	high _s_time
  3082  00016E  6EE6               	movwf	postinc1,c
  3083  000170  EC63  F007         	call	_sem_wait	;wreg free
  3084                           
  3085                           ;int0_test.c: 107:                 time += 60;
  3086  000174  0E3C               	movlw	60
  3087  000176  2607               	addwf	_time,f,c
  3088  000178  0E00               	movlw	0
  3089  00017A  2208               	addwfc	_time+1,f,c
  3090                           
  3091                           ;int0_test.c: 108:                 unidade = _mod(time, 10);
  3092  00017C  0E0A               	movlw	10
  3093  00017E  6EE6               	movwf	postinc1,c
  3094  000180  0E00               	movlw	0
  3095  000182  6EE6               	movwf	postinc1,c
  3096  000184  C007  FFE6         	movff	_time,postinc1
  3097  000188  C008  FFE6         	movff	_time+1,postinc1
  3098  00018C  EC60  F00A         	call	__mod	;wreg free
  3099  000190  C047  F003         	movff	btemp,_unidade
  3100  000194  C048  F004         	movff	btemp+1,_unidade+1
  3101                           
  3102                           ;int0_test.c: 109:                 dezena = _div(time, 10);
  3103  000198  0E0A               	movlw	10
  3104  00019A  6EE6               	movwf	postinc1,c
  3105  00019C  0E00               	movlw	0
  3106  00019E  6EE6               	movwf	postinc1,c
  3107  0001A0  C007  FFE6         	movff	_time,postinc1
  3108  0001A4  C008  FFE6         	movff	_time+1,postinc1
  3109  0001A8  ECD5  F009         	call	__div	;wreg free
  3110  0001AC  C047  F005         	movff	btemp,_dezena
  3111  0001B0  C048  F006         	movff	btemp+1,_dezena+1
  3112                           
  3113                           ;int0_test.c: 110:                 sem_post(&s_time);
  3114  0001B4  0E21               	movlw	low _s_time
  3115  0001B6  6EE6               	movwf	postinc1,c
  3116  0001B8  0E00               	movlw	high _s_time
  3117  0001BA  6EE6               	movwf	postinc1,c
  3118  0001BC  EC68  F006         	call	_sem_post	;wreg free
  3119  0001C0                     i2l2047:
  3120                           
  3121                           ;int0_test.c: 114:         if( PORTBbits.RB4 == 1 ){
  3122  0001C0  A881               	btfss	3969,4,c	;volatile
  3123  0001C2  D296               	goto	i2l2151
  3124                           
  3125                           ;int0_test.c: 115:             sem_wait(&s_started);
  3126  0001C4  0E13               	movlw	low _s_started
  3127  0001C6  6EE6               	movwf	postinc1,c
  3128  0001C8  0E00               	movlw	high _s_started
  3129  0001CA  6EE6               	movwf	postinc1,c
  3130  0001CC  EC63  F007         	call	_sem_wait	;wreg free
  3131                           
  3132                           ;int0_test.c: 116:             started = 0;
  3133  0001D0  6A0B               	clrf	_started,c
  3134  0001D2  6A0C               	clrf	_started+1,c
  3135                           
  3136                           ;int0_test.c: 117:             sem_post(&s_started);
  3137  0001D4  0E13               	movlw	low _s_started
  3138  0001D6  6EE6               	movwf	postinc1,c
  3139  0001D8  0E00               	movlw	high _s_started
  3140  0001DA  6EE6               	movwf	postinc1,c
  3141  0001DC  EC68  F006         	call	_sem_post	;wreg free
  3142                           
  3143                           ;int0_test.c: 119:             sem_wait(&s_time);
  3144  0001E0  0E21               	movlw	low _s_time
  3145  0001E2  6EE6               	movwf	postinc1,c
  3146  0001E4  0E00               	movlw	high _s_time
  3147  0001E6  6EE6               	movwf	postinc1,c
  3148  0001E8  EC63  F007         	call	_sem_wait	;wreg free
  3149                           
  3150                           ;int0_test.c: 120:             sem_wait(&s_count);
  3151  0001EC  0E2F               	movlw	low _s_count
  3152  0001EE  6EE6               	movwf	postinc1,c
  3153  0001F0  0E00               	movlw	high _s_count
  3154  0001F2  6EE6               	movwf	postinc1,c
  3155  0001F4  EC63  F007         	call	_sem_wait	;wreg free
  3156                           
  3157                           ;int0_test.c: 121:             time = count;
  3158  0001F8  C009  F007         	movff	_count,_time
  3159  0001FC  C00A  F008         	movff	_count+1,_time+1
  3160                           
  3161                           ;int0_test.c: 122:             sem_post(&s_count);
  3162  000200  0E2F               	movlw	low _s_count
  3163  000202  6EE6               	movwf	postinc1,c
  3164  000204  0E00               	movlw	high _s_count
  3165  000206  6EE6               	movwf	postinc1,c
  3166  000208  EC68  F006         	call	_sem_post	;wreg free
  3167                           
  3168                           ;int0_test.c: 123:             sem_post(&s_time);
  3169  00020C  0E21               	movlw	low _s_time
  3170  00020E  6EE6               	movwf	postinc1,c
  3171  000210  0E00               	movlw	high _s_time
  3172  000212  6EE6               	movwf	postinc1,c
  3173  000214  EC68  F006         	call	_sem_post	;wreg free
  3174  000218  D26B               	goto	i2l2151
  3175  00021A                     i2l87:
  3176                           
  3177                           ;int0_test.c: 128:         if(INTCONbits.TMR0IF){
  3178  00021A  A4F2               	btfss	4082,2,c	;volatile
  3179  00021C  D269               	goto	i2l2151
  3180                           
  3181                           ;int0_test.c: 129:             dp_update();
  3182  00021E  EC95  F00B         	call	_dp_update	;wreg free
  3183                           
  3184                           ;int0_test.c: 130:             INTCONbits.TMR0IF = 0;
  3185  000222  94F2               	bcf	4082,2,c	;volatile
  3186                           
  3187                           ;int0_test.c: 131:             TMR0L = 252;
  3188  000224  0EFC               	movlw	252
  3189  000226  6ED6               	movwf	4054,c	;volatile
  3190                           
  3191                           ;int0_test.c: 132:             delay_decrement();
  3192  000228  ECE0  F005         	call	_delay_decrement	;wreg free
  3193                           
  3194                           ;int0_test.c: 134:             if(started == 1){
  3195  00022C  040B               	decf	_started,w,c
  3196  00022E  100C               	iorwf	_started+1,w,c
  3197  000230  A4D8               	btfss	status,2,c
  3198  000232  D054               	goto	i2l2103
  3199                           
  3200                           ;int0_test.c: 135:                 timer_index++;
  3201  000234  4A01               	infsnz	_timer_index,f,c
  3202  000236  2A02               	incf	_timer_index+1,f,c
  3203                           
  3204                           ;int0_test.c: 136:                 if(timer_index == 250){
  3205  000238  0EFA               	movlw	250
  3206  00023A  1801               	xorwf	_timer_index,w,c
  3207  00023C  1002               	iorwf	_timer_index+1,w,c
  3208  00023E  A4D8               	btfss	status,2,c
  3209  000240  D04D               	goto	i2l2103
  3210                           
  3211                           ;int0_test.c: 137:                     sem_wait(&s_count);
  3212  000242  0E2F               	movlw	low _s_count
  3213  000244  6EE6               	movwf	postinc1,c
  3214  000246  0E00               	movlw	high _s_count
  3215  000248  6EE6               	movwf	postinc1,c
  3216  00024A  EC63  F007         	call	_sem_wait	;wreg free
  3217                           
  3218                           ;int0_test.c: 138:                     count--;
  3219  00024E  0609               	decf	_count,f,c
  3220  000250  A0D8               	btfss	status,0,c
  3221  000252  060A               	decf	_count+1,f,c
  3222                           
  3223                           ;int0_test.c: 139:                     unidade = _mod(count, 10);
  3224  000254  0E0A               	movlw	10
  3225  000256  6EE6               	movwf	postinc1,c
  3226  000258  0E00               	movlw	0
  3227  00025A  6EE6               	movwf	postinc1,c
  3228  00025C  C009  FFE6         	movff	_count,postinc1
  3229  000260  C00A  FFE6         	movff	_count+1,postinc1
  3230  000264  EC60  F00A         	call	__mod	;wreg free
  3231  000268  C047  F003         	movff	btemp,_unidade
  3232  00026C  C048  F004         	movff	btemp+1,_unidade+1
  3233                           
  3234                           ;int0_test.c: 140:                     dezena = _div(count, 10);
  3235  000270  0E0A               	movlw	10
  3236  000272  6EE6               	movwf	postinc1,c
  3237  000274  0E00               	movlw	0
  3238  000276  6EE6               	movwf	postinc1,c
  3239  000278  C009  FFE6         	movff	_count,postinc1
  3240  00027C  C00A  FFE6         	movff	_count+1,postinc1
  3241  000280  ECD5  F009         	call	__div	;wreg free
  3242  000284  C047  F005         	movff	btemp,_dezena
  3243  000288  C048  F006         	movff	btemp+1,_dezena+1
  3244                           
  3245                           ;int0_test.c: 141:                     sem_post(&s_count);
  3246  00028C  0E2F               	movlw	low _s_count
  3247  00028E  6EE6               	movwf	postinc1,c
  3248  000290  0E00               	movlw	high _s_count
  3249  000292  6EE6               	movwf	postinc1,c
  3250  000294  EC68  F006         	call	_sem_post	;wreg free
  3251                           
  3252                           ;int0_test.c: 143:                     timer_index = 0;
  3253  000298  6A01               	clrf	_timer_index,c
  3254  00029A  6A02               	clrf	_timer_index+1,c
  3255                           
  3256                           ;int0_test.c: 144:                     if(count == 0){
  3257  00029C  5009               	movf	_count,w,c
  3258  00029E  100A               	iorwf	_count+1,w,c
  3259  0002A0  A4D8               	btfss	status,2,c
  3260  0002A2  D01C               	goto	i2l2103
  3261                           
  3262                           ;int0_test.c: 145:                         sem_wait(&s_started);
  3263  0002A4  0E13               	movlw	low _s_started
  3264  0002A6  6EE6               	movwf	postinc1,c
  3265  0002A8  0E00               	movlw	high _s_started
  3266  0002AA  6EE6               	movwf	postinc1,c
  3267  0002AC  EC63  F007         	call	_sem_wait	;wreg free
  3268                           
  3269                           ;int0_test.c: 146:                         sem_wait(&s_time);
  3270  0002B0  0E21               	movlw	low _s_time
  3271  0002B2  6EE6               	movwf	postinc1,c
  3272  0002B4  0E00               	movlw	high _s_time
  3273  0002B6  6EE6               	movwf	postinc1,c
  3274  0002B8  EC63  F007         	call	_sem_wait	;wreg free
  3275                           
  3276                           ;int0_test.c: 147:                         started = 0;
  3277  0002BC  6A0B               	clrf	_started,c
  3278  0002BE  6A0C               	clrf	_started+1,c
  3279                           
  3280                           ;int0_test.c: 148:                         time = 0;
  3281  0002C0  6A07               	clrf	_time,c
  3282  0002C2  6A08               	clrf	_time+1,c
  3283                           
  3284                           ;int0_test.c: 149:                         sem_post(&s_time);
  3285  0002C4  0E21               	movlw	low _s_time
  3286  0002C6  6EE6               	movwf	postinc1,c
  3287  0002C8  0E00               	movlw	high _s_time
  3288  0002CA  6EE6               	movwf	postinc1,c
  3289  0002CC  EC68  F006         	call	_sem_post	;wreg free
  3290                           
  3291                           ;int0_test.c: 150:                         sem_post(&s_started);
  3292  0002D0  0E13               	movlw	low _s_started
  3293  0002D2  6EE6               	movwf	postinc1,c
  3294  0002D4  0E00               	movlw	high _s_started
  3295  0002D6  6EE6               	movwf	postinc1,c
  3296  0002D8  EC68  F006         	call	_sem_post	;wreg free
  3297  0002DC                     i2l2103:
  3298                           
  3299                           ;int0_test.c: 155:             quantum--;
  3300  0002DC  0679               	decf	_quantum,f,c
  3301  0002DE  A0D8               	btfss	status,0,c
  3302  0002E0  067A               	decf	_quantum+1,f,c
  3303                           
  3304                           ;int0_test.c: 156:             if (quantum <= 0) {
  3305  0002E2  BE7A               	btfsc	_quantum+1,7,c
  3306  0002E4  D005               	goto	i2u68_40
  3307  0002E6  507A               	movf	_quantum+1,w,c
  3308  0002E8  E102               	bnz	i2u68_41
  3309  0002EA  0479               	decf	_quantum,w,c
  3310  0002EC  B0D8               	btfsc	status,0,c
  3311  0002EE                     i2u68_41:
  3312  0002EE  D1FD               	goto	i2u71_40
  3313  0002F0                     i2u68_40:
  3314                           
  3315                           ;int0_test.c: 157:                 quantum = 10;
  3316  0002F0  0E00               	movlw	0
  3317  0002F2  6E7A               	movwf	_quantum+1,c
  3318  0002F4  0E0A               	movlw	10
  3319  0002F6  6E79               	movwf	_quantum,c
  3320                           
  3321                           ;int0_test.c: 158:                 { who = ready_queue.task_running; ready_queue.tasks[w
      +                          ho].task_state = READY; ready_queue.tasks[who].W_reg = WREG; ready_queue.tasks[who].STAT
      +                          US_reg = STATUS; ready_queue.tasks[who].BSR_reg = BSR; size = 0; while (STKPTR) { ready_
      +                          queue.tasks[who].task_stack.h_stack[size].TOSU_reg = TOSU; ready_queue.tasks[who].task_s
      +                          tack.h_stack[size].TOSH_reg = TOSH; ready_queue.tasks[who].task_stack.h_stack[size].TOSL
      +                          _reg = TOSL; size++; __asm("POP"); } ready_queue.tasks[who].task_stack.stack_level = siz
      +                          e;};
  3322  0002F8  C2F8  F011         	movff	_ready_queue+542,_who
  3323  0002FC  C2F9  F012         	movff	_ready_queue+543,_who+1
  3324  000300  0E6C               	movlw	108
  3325  000302  6EE6               	movwf	postinc1,c
  3326  000304  0E00               	movlw	0
  3327  000306  6EE6               	movwf	postinc1,c
  3328  000308  C011  FFE6         	movff	_who,postinc1
  3329  00030C  C012  FFE6         	movff	_who+1,postinc1
  3330  000310  ECF8  F008         	call	___wmul	;wreg free
  3331  000314  0EE2               	movlw	low (_ready_queue+8)
  3332  000316  2447               	addwf	btemp,w,c
  3333  000318  6ED9               	movwf	fsr2l,c
  3334  00031A  0E00               	movlw	high (_ready_queue+8)
  3335  00031C  2048               	addwfc	btemp+1,w,c
  3336  00031E  6EDA               	movwf	fsr2h,c
  3337  000320  0E00               	movlw	0
  3338  000322  6EDF               	movwf	indf2,c
  3339  000324  0E6C               	movlw	108
  3340  000326  6EE6               	movwf	postinc1,c
  3341  000328  0E00               	movlw	0
  3342  00032A  6EE6               	movwf	postinc1,c
  3343  00032C  C011  FFE6         	movff	_who,postinc1
  3344  000330  C012  FFE6         	movff	_who+1,postinc1
  3345  000334  ECF8  F008         	call	___wmul	;wreg free
  3346  000338  0EDF               	movlw	low (_ready_queue+5)
  3347  00033A  2447               	addwf	btemp,w,c
  3348  00033C  6ED9               	movwf	fsr2l,c
  3349  00033E  0E00               	movlw	high (_ready_queue+5)
  3350  000340  2048               	addwfc	btemp+1,w,c
  3351  000342  6EDA               	movwf	fsr2h,c
  3352  000344  CFE8 FFDF          	movff	wreg,indf2	;volatile
  3353  000348  0E6C               	movlw	108
  3354  00034A  6EE6               	movwf	postinc1,c
  3355  00034C  0E00               	movlw	0
  3356  00034E  6EE6               	movwf	postinc1,c
  3357  000350  C011  FFE6         	movff	_who,postinc1
  3358  000354  C012  FFE6         	movff	_who+1,postinc1
  3359  000358  ECF8  F008         	call	___wmul	;wreg free
  3360  00035C  0EE0               	movlw	low (_ready_queue+6)
  3361  00035E  2447               	addwf	btemp,w,c
  3362  000360  6ED9               	movwf	fsr2l,c
  3363  000362  0E00               	movlw	high (_ready_queue+6)
  3364  000364  2048               	addwfc	btemp+1,w,c
  3365  000366  6EDA               	movwf	fsr2h,c
  3366  000368  CFD8 FFDF          	movff	status,indf2	;volatile
  3367  00036C  0E6C               	movlw	108
  3368  00036E  6EE6               	movwf	postinc1,c
  3369  000370  0E00               	movlw	0
  3370  000372  6EE6               	movwf	postinc1,c
  3371  000374  C011  FFE6         	movff	_who,postinc1
  3372  000378  C012  FFE6         	movff	_who+1,postinc1
  3373  00037C  ECF8  F008         	call	___wmul	;wreg free
  3374  000380  0EE1               	movlw	low (_ready_queue+7)
  3375  000382  2447               	addwf	btemp,w,c
  3376  000384  6ED9               	movwf	fsr2l,c
  3377  000386  0E00               	movlw	high (_ready_queue+7)
  3378  000388  2048               	addwfc	btemp+1,w,c
  3379  00038A  6EDA               	movwf	fsr2h,c
  3380  00038C  CFE0 FFDF          	movff	bsr,indf2	;volatile
  3381  000390  6A0F               	clrf	_size,c
  3382  000392  6A10               	clrf	_size+1,c
  3383  000394  D07B               	goto	i2l2125
  3384  000396                     i2l2121:
  3385  000396  0E6C               	movlw	108
  3386  000398  6EE6               	movwf	postinc1,c
  3387  00039A  0E00               	movlw	0
  3388  00039C  6EE6               	movwf	postinc1,c
  3389  00039E  C011  FFE6         	movff	_who,postinc1
  3390  0003A2  C012  FFE6         	movff	_who+1,postinc1
  3391  0003A6  ECF8  F008         	call	___wmul	;wreg free
  3392  0003AA  0EDA               	movlw	low _ready_queue
  3393  0003AC  6E67               	movwf	??_ISR_timer0& (0+255),c
  3394  0003AE  0E00               	movlw	high _ready_queue
  3395  0003B0  6E68               	movwf	(??_ISR_timer0+1)& (0+255),c
  3396  0003B2  0E09               	movlw	9
  3397  0003B4  2667               	addwf	??_ISR_timer0,f,c
  3398  0003B6  0E00               	movlw	0
  3399  0003B8  2268               	addwfc	??_ISR_timer0+1,f,c
  3400  0003BA  5047               	movf	btemp,w,c
  3401  0003BC  2667               	addwf	??_ISR_timer0,f,c
  3402  0003BE  5048               	movf	btemp+1,w,c
  3403  0003C0  2268               	addwfc	??_ISR_timer0+1,f,c
  3404  0003C2  0E03               	movlw	3
  3405  0003C4  6EE6               	movwf	postinc1,c
  3406  0003C6  0E00               	movlw	0
  3407  0003C8  6EE6               	movwf	postinc1,c
  3408  0003CA  C00F  FFE6         	movff	_size,postinc1
  3409  0003CE  C010  FFE6         	movff	_size+1,postinc1
  3410  0003D2  ECF8  F008         	call	___wmul	;wreg free
  3411  0003D6  5047               	movf	btemp,w,c
  3412  0003D8  2467               	addwf	??_ISR_timer0,w,c
  3413  0003DA  6ED9               	movwf	fsr2l,c
  3414  0003DC  5048               	movf	btemp+1,w,c
  3415  0003DE  2068               	addwfc	??_ISR_timer0+1,w,c
  3416  0003E0  6EDA               	movwf	fsr2h,c
  3417  0003E2  CFFF FFDF          	movff	tosu,indf2	;volatile
  3418  0003E6  0E6C               	movlw	108
  3419  0003E8  6EE6               	movwf	postinc1,c
  3420  0003EA  0E00               	movlw	0
  3421  0003EC  6EE6               	movwf	postinc1,c
  3422  0003EE  C011  FFE6         	movff	_who,postinc1
  3423  0003F2  C012  FFE6         	movff	_who+1,postinc1
  3424  0003F6  ECF8  F008         	call	___wmul	;wreg free
  3425  0003FA  0EDA               	movlw	low _ready_queue
  3426  0003FC  6E67               	movwf	??_ISR_timer0& (0+255),c
  3427  0003FE  0E00               	movlw	high _ready_queue
  3428  000400  6E68               	movwf	(??_ISR_timer0+1)& (0+255),c
  3429  000402  0E0B               	movlw	11
  3430  000404  2667               	addwf	??_ISR_timer0,f,c
  3431  000406  0E00               	movlw	0
  3432  000408  2268               	addwfc	??_ISR_timer0+1,f,c
  3433  00040A  5047               	movf	btemp,w,c
  3434  00040C  2667               	addwf	??_ISR_timer0,f,c
  3435  00040E  5048               	movf	btemp+1,w,c
  3436  000410  2268               	addwfc	??_ISR_timer0+1,f,c
  3437  000412  0E03               	movlw	3
  3438  000414  6EE6               	movwf	postinc1,c
  3439  000416  0E00               	movlw	0
  3440  000418  6EE6               	movwf	postinc1,c
  3441  00041A  C00F  FFE6         	movff	_size,postinc1
  3442  00041E  C010  FFE6         	movff	_size+1,postinc1
  3443  000422  ECF8  F008         	call	___wmul	;wreg free
  3444  000426  5047               	movf	btemp,w,c
  3445  000428  2467               	addwf	??_ISR_timer0,w,c
  3446  00042A  6ED9               	movwf	fsr2l,c
  3447  00042C  5048               	movf	btemp+1,w,c
  3448  00042E  2068               	addwfc	??_ISR_timer0+1,w,c
  3449  000430  6EDA               	movwf	fsr2h,c
  3450  000432  CFFE FFDF          	movff	tosh,indf2	;volatile
  3451  000436  0E6C               	movlw	108
  3452  000438  6EE6               	movwf	postinc1,c
  3453  00043A  0E00               	movlw	0
  3454  00043C  6EE6               	movwf	postinc1,c
  3455  00043E  C011  FFE6         	movff	_who,postinc1
  3456  000442  C012  FFE6         	movff	_who+1,postinc1
  3457  000446  ECF8  F008         	call	___wmul	;wreg free
  3458  00044A  0EDA               	movlw	low _ready_queue
  3459  00044C  6E67               	movwf	??_ISR_timer0& (0+255),c
  3460  00044E  0E00               	movlw	high _ready_queue
  3461  000450  6E68               	movwf	(??_ISR_timer0+1)& (0+255),c
  3462  000452  0E0A               	movlw	10
  3463  000454  2667               	addwf	??_ISR_timer0,f,c
  3464  000456  0E00               	movlw	0
  3465  000458  2268               	addwfc	??_ISR_timer0+1,f,c
  3466  00045A  5047               	movf	btemp,w,c
  3467  00045C  2667               	addwf	??_ISR_timer0,f,c
  3468  00045E  5048               	movf	btemp+1,w,c
  3469  000460  2268               	addwfc	??_ISR_timer0+1,f,c
  3470  000462  0E03               	movlw	3
  3471  000464  6EE6               	movwf	postinc1,c
  3472  000466  0E00               	movlw	0
  3473  000468  6EE6               	movwf	postinc1,c
  3474  00046A  C00F  FFE6         	movff	_size,postinc1
  3475  00046E  C010  FFE6         	movff	_size+1,postinc1
  3476  000472  ECF8  F008         	call	___wmul	;wreg free
  3477  000476  5047               	movf	btemp,w,c
  3478  000478  2467               	addwf	??_ISR_timer0,w,c
  3479  00047A  6ED9               	movwf	fsr2l,c
  3480  00047C  5048               	movf	btemp+1,w,c
  3481  00047E  2068               	addwfc	??_ISR_timer0+1,w,c
  3482  000480  6EDA               	movwf	fsr2h,c
  3483  000482  CFFD FFDF          	movff	tosl,indf2	;volatile
  3484  000486  4A0F               	infsnz	_size,f,c
  3485  000488  2A10               	incf	_size+1,f,c
  3486  00048A  0006               	pop		;# 
  3487  00048C                     i2l2125:
  3488  00048C  50FC               	movf	stkptr,w,c	;volatile
  3489  00048E  A4D8               	btfss	status,2,c
  3490  000490  D782               	goto	i2l2121
  3491  000492  0E6C               	movlw	108
  3492  000494  6EE6               	movwf	postinc1,c
  3493  000496  0E00               	movlw	0
  3494  000498  6EE6               	movwf	postinc1,c
  3495  00049A  C011  FFE6         	movff	_who,postinc1
  3496  00049E  C012  FFE6         	movff	_who+1,postinc1
  3497  0004A2  ECF8  F008         	call	___wmul	;wreg free
  3498  0004A6  0E40               	movlw	low (_ready_queue+102)
  3499  0004A8  2447               	addwf	btemp,w,c
  3500  0004AA  6ED9               	movwf	fsr2l,c
  3501  0004AC  0E01               	movlw	high (_ready_queue+102)
  3502  0004AE  2048               	addwfc	btemp+1,w,c
  3503  0004B0  6EDA               	movwf	fsr2h,c
  3504  0004B2  C00F  FFDE         	movff	_size,postinc2
  3505  0004B6  C010  FFDD         	movff	_size+1,postdec2
  3506                           
  3507                           ;int0_test.c: 159:                 ready_queue.task_running = round_robin();
  3508  0004BA  EC8D  F009         	call	_round_robin	;wreg free
  3509  0004BE  C047  F2F8         	movff	btemp,_ready_queue+542
  3510  0004C2  C048  F2F9         	movff	btemp+1,_ready_queue+543
  3511                           
  3512                           ;int0_test.c: 160:                 { STKPTR = 0; who = ready_queue.task_running; if (rea
      +                          dy_queue.tasks[who].task_stack.stack_level == 0) { __asm("PUSH"); TOS = ready_queue.task
      +                          s[who].task_f; } else { ready_queue.tasks[who].task_state = RUNNING; WREG = ready_queue.
      +                          tasks[who].W_reg; STATUS = ready_queue.tasks[who].STATUS_reg; BSR = ready_queue.tasks[wh
      +                          o].BSR_reg; size = ready_queue.tasks[who].task_stack.stack_level; while (size) { __asm("
      +                          PUSH"); TOSL = ready_queue.tasks[who].task_stack.h_stack[size-1].TOSL_reg; TOSH = ready_
      +                          queue.tasks[who].task_stack.h_stack[size-1].TOSH_reg; TOSU = ready_queue.tasks[who].task
      +                          _stack.h_stack[size-1].TOSU_reg; size--; } }};
  3513  0004C6  6AFC               	clrf	stkptr,c	;volatile
  3514  0004C8  C2F8  F011         	movff	_ready_queue+542,_who
  3515  0004CC  C2F9  F012         	movff	_ready_queue+543,_who+1
  3516  0004D0  0E6C               	movlw	108
  3517  0004D2  6EE6               	movwf	postinc1,c
  3518  0004D4  0E00               	movlw	0
  3519  0004D6  6EE6               	movwf	postinc1,c
  3520  0004D8  C011  FFE6         	movff	_who,postinc1
  3521  0004DC  C012  FFE6         	movff	_who+1,postinc1
  3522  0004E0  ECF8  F008         	call	___wmul	;wreg free
  3523  0004E4  0E40               	movlw	low (_ready_queue+102)
  3524  0004E6  2447               	addwf	btemp,w,c
  3525  0004E8  6ED9               	movwf	fsr2l,c
  3526  0004EA  0E01               	movlw	high (_ready_queue+102)
  3527  0004EC  2048               	addwfc	btemp+1,w,c
  3528  0004EE  6EDA               	movwf	fsr2h,c
  3529  0004F0  50DE               	movf	postinc2,w,c
  3530  0004F2  10DE               	iorwf	postinc2,w,c
  3531  0004F4  A4D8               	btfss	status,2,c
  3532  0004F6  D01B               	goto	i2l2141
  3533  0004F8  0005               	push		;# 
  3534  0004FA  0E6C               	movlw	108
  3535  0004FC  6EE6               	movwf	postinc1,c
  3536  0004FE  0E00               	movlw	0
  3537  000500  6EE6               	movwf	postinc1,c
  3538  000502  C011  FFE6         	movff	_who,postinc1
  3539  000506  C012  FFE6         	movff	_who+1,postinc1
  3540  00050A  ECF8  F008         	call	___wmul	;wreg free
  3541  00050E  0E42               	movlw	low (_ready_queue+104)
  3542  000510  2447               	addwf	btemp,w,c
  3543  000512  6ED9               	movwf	fsr2l,c
  3544  000514  0E01               	movlw	high (_ready_queue+104)
  3545  000516  2048               	addwfc	btemp+1,w,c
  3546  000518  6EDA               	movwf	fsr2h,c
  3547  00051A  CFDE F067          	movff	postinc2,??_ISR_timer0
  3548  00051E  CFDD F068          	movff	postdec2,??_ISR_timer0+1
  3549  000522  C067  FFFD         	movff	??_ISR_timer0,tosl	;volatile
  3550  000526  C068  FFFE         	movff	??_ISR_timer0+1,tosh	;volatile
  3551  00052A  6AFF               	clrf	tosu,c	;volatile
  3552  00052C  D0DE               	goto	i2u71_40
  3553  00052E                     i2l2141:
  3554  00052E  0E6C               	movlw	108
  3555  000530  6EE6               	movwf	postinc1,c
  3556  000532  0E00               	movlw	0
  3557  000534  6EE6               	movwf	postinc1,c
  3558  000536  C011  FFE6         	movff	_who,postinc1
  3559  00053A  C012  FFE6         	movff	_who+1,postinc1
  3560  00053E  ECF8  F008         	call	___wmul	;wreg free
  3561  000542  0EE2               	movlw	low (_ready_queue+8)
  3562  000544  2447               	addwf	btemp,w,c
  3563  000546  6ED9               	movwf	fsr2l,c
  3564  000548  0E00               	movlw	high (_ready_queue+8)
  3565  00054A  2048               	addwfc	btemp+1,w,c
  3566  00054C  6EDA               	movwf	fsr2h,c
  3567  00054E  0E01               	movlw	1
  3568  000550  6EDF               	movwf	indf2,c
  3569  000552  0E6C               	movlw	108
  3570  000554  6EE6               	movwf	postinc1,c
  3571  000556  0E00               	movlw	0
  3572  000558  6EE6               	movwf	postinc1,c
  3573  00055A  C011  FFE6         	movff	_who,postinc1
  3574  00055E  C012  FFE6         	movff	_who+1,postinc1
  3575  000562  ECF8  F008         	call	___wmul	;wreg free
  3576  000566  0EDF               	movlw	low (_ready_queue+5)
  3577  000568  2447               	addwf	btemp,w,c
  3578  00056A  6ED9               	movwf	fsr2l,c
  3579  00056C  0E00               	movlw	high (_ready_queue+5)
  3580  00056E  2048               	addwfc	btemp+1,w,c
  3581  000570  6EDA               	movwf	fsr2h,c
  3582  000572  50DF               	movf	indf2,w,c
  3583  000574  6E67               	movwf	??_ISR_timer0& (0+255),c
  3584  000576  5067               	movf	??_ISR_timer0,w,c
  3585  000578  0E6C               	movlw	108
  3586  00057A  6EE6               	movwf	postinc1,c
  3587  00057C  0E00               	movlw	0
  3588  00057E  6EE6               	movwf	postinc1,c
  3589  000580  C011  FFE6         	movff	_who,postinc1
  3590  000584  C012  FFE6         	movff	_who+1,postinc1
  3591  000588  ECF8  F008         	call	___wmul	;wreg free
  3592  00058C  0EE0               	movlw	low (_ready_queue+6)
  3593  00058E  2447               	addwf	btemp,w,c
  3594  000590  6ED9               	movwf	fsr2l,c
  3595  000592  0E00               	movlw	high (_ready_queue+6)
  3596  000594  2048               	addwfc	btemp+1,w,c
  3597  000596  6EDA               	movwf	fsr2h,c
  3598  000598  50DF               	movf	indf2,w,c
  3599  00059A  6ED8               	movwf	status,c	;volatile
  3600  00059C  0E6C               	movlw	108
  3601  00059E  6EE6               	movwf	postinc1,c
  3602  0005A0  0E00               	movlw	0
  3603  0005A2  6EE6               	movwf	postinc1,c
  3604  0005A4  C011  FFE6         	movff	_who,postinc1
  3605  0005A8  C012  FFE6         	movff	_who+1,postinc1
  3606  0005AC  ECF8  F008         	call	___wmul	;wreg free
  3607  0005B0  0EE1               	movlw	low (_ready_queue+7)
  3608  0005B2  2447               	addwf	btemp,w,c
  3609  0005B4  6ED9               	movwf	fsr2l,c
  3610  0005B6  0E00               	movlw	high (_ready_queue+7)
  3611  0005B8  2048               	addwfc	btemp+1,w,c
  3612  0005BA  6EDA               	movwf	fsr2h,c
  3613  0005BC  50DF               	movf	indf2,w,c
  3614  0005BE  6EE0               	movwf	bsr,c	;volatile
  3615  0005C0  0E6C               	movlw	108
  3616  0005C2  6EE6               	movwf	postinc1,c
  3617  0005C4  0E00               	movlw	0
  3618  0005C6  6EE6               	movwf	postinc1,c
  3619  0005C8  C011  FFE6         	movff	_who,postinc1
  3620  0005CC  C012  FFE6         	movff	_who+1,postinc1
  3621  0005D0  ECF8  F008         	call	___wmul	;wreg free
  3622  0005D4  0E40               	movlw	low (_ready_queue+102)
  3623  0005D6  2447               	addwf	btemp,w,c
  3624  0005D8  6ED9               	movwf	fsr2l,c
  3625  0005DA  0E01               	movlw	high (_ready_queue+102)
  3626  0005DC  2048               	addwfc	btemp+1,w,c
  3627  0005DE  6EDA               	movwf	fsr2h,c
  3628  0005E0  CFDE F00F          	movff	postinc2,_size
  3629  0005E4  CFDD F010          	movff	postdec2,_size+1
  3630  0005E8  D07C               	goto	i2l2147
  3631  0005EA                     i2l108:
  3632  0005EA  0005               	push		;# 
  3633  0005EC  0E6C               	movlw	108
  3634  0005EE  6EE6               	movwf	postinc1,c
  3635  0005F0  0E00               	movlw	0
  3636  0005F2  6EE6               	movwf	postinc1,c
  3637  0005F4  C011  FFE6         	movff	_who,postinc1
  3638  0005F8  C012  FFE6         	movff	_who+1,postinc1
  3639  0005FC  ECF8  F008         	call	___wmul	;wreg free
  3640  000600  0EDA               	movlw	low _ready_queue
  3641  000602  6E67               	movwf	??_ISR_timer0& (0+255),c
  3642  000604  0E00               	movlw	high _ready_queue
  3643  000606  6E68               	movwf	(??_ISR_timer0+1)& (0+255),c
  3644  000608  0E07               	movlw	7
  3645  00060A  2667               	addwf	??_ISR_timer0,f,c
  3646  00060C  0E00               	movlw	0
  3647  00060E  2268               	addwfc	??_ISR_timer0+1,f,c
  3648  000610  5047               	movf	btemp,w,c
  3649  000612  2667               	addwf	??_ISR_timer0,f,c
  3650  000614  5048               	movf	btemp+1,w,c
  3651  000616  2268               	addwfc	??_ISR_timer0+1,f,c
  3652  000618  0E03               	movlw	3
  3653  00061A  6EE6               	movwf	postinc1,c
  3654  00061C  0E00               	movlw	0
  3655  00061E  6EE6               	movwf	postinc1,c
  3656  000620  C00F  FFE6         	movff	_size,postinc1
  3657  000624  C010  FFE6         	movff	_size+1,postinc1
  3658  000628  ECF8  F008         	call	___wmul	;wreg free
  3659  00062C  5047               	movf	btemp,w,c
  3660  00062E  2467               	addwf	??_ISR_timer0,w,c
  3661  000630  6ED9               	movwf	fsr2l,c
  3662  000632  5048               	movf	btemp+1,w,c
  3663  000634  2068               	addwfc	??_ISR_timer0+1,w,c
  3664  000636  6EDA               	movwf	fsr2h,c
  3665  000638  50DF               	movf	indf2,w,c
  3666  00063A  6EFD               	movwf	tosl,c	;volatile
  3667  00063C  0E6C               	movlw	108
  3668  00063E  6EE6               	movwf	postinc1,c
  3669  000640  0E00               	movlw	0
  3670  000642  6EE6               	movwf	postinc1,c
  3671  000644  C011  FFE6         	movff	_who,postinc1
  3672  000648  C012  FFE6         	movff	_who+1,postinc1
  3673  00064C  ECF8  F008         	call	___wmul	;wreg free
  3674  000650  0EDA               	movlw	low _ready_queue
  3675  000652  6E67               	movwf	??_ISR_timer0& (0+255),c
  3676  000654  0E00               	movlw	high _ready_queue
  3677  000656  6E68               	movwf	(??_ISR_timer0+1)& (0+255),c
  3678  000658  0E08               	movlw	8
  3679  00065A  2667               	addwf	??_ISR_timer0,f,c
  3680  00065C  0E00               	movlw	0
  3681  00065E  2268               	addwfc	??_ISR_timer0+1,f,c
  3682  000660  5047               	movf	btemp,w,c
  3683  000662  2667               	addwf	??_ISR_timer0,f,c
  3684  000664  5048               	movf	btemp+1,w,c
  3685  000666  2268               	addwfc	??_ISR_timer0+1,f,c
  3686  000668  0E03               	movlw	3
  3687  00066A  6EE6               	movwf	postinc1,c
  3688  00066C  0E00               	movlw	0
  3689  00066E  6EE6               	movwf	postinc1,c
  3690  000670  C00F  FFE6         	movff	_size,postinc1
  3691  000674  C010  FFE6         	movff	_size+1,postinc1
  3692  000678  ECF8  F008         	call	___wmul	;wreg free
  3693  00067C  5047               	movf	btemp,w,c
  3694  00067E  2467               	addwf	??_ISR_timer0,w,c
  3695  000680  6ED9               	movwf	fsr2l,c
  3696  000682  5048               	movf	btemp+1,w,c
  3697  000684  2068               	addwfc	??_ISR_timer0+1,w,c
  3698  000686  6EDA               	movwf	fsr2h,c
  3699  000688  50DF               	movf	indf2,w,c
  3700  00068A  6EFE               	movwf	tosh,c	;volatile
  3701  00068C  0E6C               	movlw	108
  3702  00068E  6EE6               	movwf	postinc1,c
  3703  000690  0E00               	movlw	0
  3704  000692  6EE6               	movwf	postinc1,c
  3705  000694  C011  FFE6         	movff	_who,postinc1
  3706  000698  C012  FFE6         	movff	_who+1,postinc1
  3707  00069C  ECF8  F008         	call	___wmul	;wreg free
  3708  0006A0  0EDA               	movlw	low _ready_queue
  3709  0006A2  6E67               	movwf	??_ISR_timer0& (0+255),c
  3710  0006A4  0E00               	movlw	high _ready_queue
  3711  0006A6  6E68               	movwf	(??_ISR_timer0+1)& (0+255),c
  3712  0006A8  0E06               	movlw	6
  3713  0006AA  2667               	addwf	??_ISR_timer0,f,c
  3714  0006AC  0E00               	movlw	0
  3715  0006AE  2268               	addwfc	??_ISR_timer0+1,f,c
  3716  0006B0  5047               	movf	btemp,w,c
  3717  0006B2  2667               	addwf	??_ISR_timer0,f,c
  3718  0006B4  5048               	movf	btemp+1,w,c
  3719  0006B6  2268               	addwfc	??_ISR_timer0+1,f,c
  3720  0006B8  0E03               	movlw	3
  3721  0006BA  6EE6               	movwf	postinc1,c
  3722  0006BC  0E00               	movlw	0
  3723  0006BE  6EE6               	movwf	postinc1,c
  3724  0006C0  C00F  FFE6         	movff	_size,postinc1
  3725  0006C4  C010  FFE6         	movff	_size+1,postinc1
  3726  0006C8  ECF8  F008         	call	___wmul	;wreg free
  3727  0006CC  5047               	movf	btemp,w,c
  3728  0006CE  2467               	addwf	??_ISR_timer0,w,c
  3729  0006D0  6ED9               	movwf	fsr2l,c
  3730  0006D2  5048               	movf	btemp+1,w,c
  3731  0006D4  2068               	addwfc	??_ISR_timer0+1,w,c
  3732  0006D6  6EDA               	movwf	fsr2h,c
  3733  0006D8  50DF               	movf	indf2,w,c
  3734  0006DA  6EFF               	movwf	tosu,c	;volatile
  3735  0006DC  060F               	decf	_size,f,c
  3736  0006DE  A0D8               	btfss	status,0,c
  3737  0006E0  0610               	decf	_size+1,f,c
  3738  0006E2                     i2l2147:
  3739  0006E2  500F               	movf	_size,w,c
  3740  0006E4  1010               	iorwf	_size+1,w,c
  3741  0006E6  A4D8               	btfss	status,2,c
  3742  0006E8  D780               	goto	i2l108
  3743  0006EA                     i2u71_40:
  3744                           
  3745                           ;int0_test.c: 164:             PORTDbits.RD0 = 1;
  3746                           
  3747                           ;int0_test.c: 161:             }
  3748  0006EA  8083               	bsf	3971,0,c	;volatile
  3749                           
  3750                           ;int0_test.c: 168:             delay_decrement();
  3751  0006EC  ECE0  F005         	call	_delay_decrement	;wreg free
  3752  0006F0                     i2l2151:
  3753                           
  3754                           ;int0_test.c: 174:   INTCONbits.GIE = 1;
  3755  0006F0  8EF2               	bsf	4082,7,c	;volatile
  3756  0006F2  C078  F052         	movff	??_ISR_timer0+17,btemp+11
  3757  0006F6  C077  F051         	movff	??_ISR_timer0+16,btemp+10
  3758  0006FA  C076  F050         	movff	??_ISR_timer0+15,btemp+9
  3759  0006FE  C075  F04F         	movff	??_ISR_timer0+14,btemp+8
  3760  000702  C074  F04E         	movff	??_ISR_timer0+13,btemp+7
  3761  000706  C073  F04D         	movff	??_ISR_timer0+12,btemp+6
  3762  00070A  C072  F048         	movff	??_ISR_timer0+11,btemp+1
  3763  00070E  C071  F047         	movff	??_ISR_timer0+10,btemp
  3764  000712  C070  FFF4         	movff	??_ISR_timer0+9,prodh
  3765  000716  C06F  FFF3         	movff	??_ISR_timer0+8,prodl
  3766  00071A  C06E  FFDA         	movff	??_ISR_timer0+7,fsr2h
  3767  00071E  C06D  FFD9         	movff	??_ISR_timer0+6,fsr2l
  3768  000722  C06C  FFE2         	movff	??_ISR_timer0+5,fsr1h
  3769  000726  C06B  FFE1         	movff	??_ISR_timer0+4,fsr1l
  3770  00072A  C06A  FFEA         	movff	??_ISR_timer0+3,fsr0h
  3771  00072E  C069  FFE9         	movff	??_ISR_timer0+2,fsr0l
  3772  000732  0011               	retfie		f
  3773  000734                     __end_of_ISR_timer0:
  3774                           	opt callstack 0
  3775                           
  3776 ;; *************** function _dp_update *****************
  3777 ;; Defined at:
  3778 ;;		line 7 in file "display7.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;		None
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;		None
  3783 ;; Return value:  Size  Location     Type
  3784 ;;                  1  [STACK] void 
  3785 ;; Registers used:
  3786 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3792 ;;      Params:         0       0       0       0       0       0       0
  3793 ;;      Locals:         0       0       0       0       0       0       0
  3794 ;;      Temps:          0       0       0       0       0       0       0
  3795 ;;      Totals:         0       0       0       0       0       0       0
  3796 ;;Total ram usage:        0 bytes
  3797 ;; Hardware stack levels used:    1
  3798 ;; Hardware stack levels required when called:    1
  3799 ;; This function calls:
  3800 ;;		_set_number
  3801 ;; This function is called by:
  3802 ;;		_ISR_timer0
  3803 ;; This function uses a reentrant model
  3804 ;;
  3805                           
  3806                           	psect	text20
  3807  00172A                     __ptext20:
  3808                           	opt callstack 0
  3809  00172A                     _dp_update:
  3810                           	opt callstack 18
  3811                           
  3812                           ;display7.c: 9:    indice++;
  3813                           
  3814                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3815                           ;incstack = 0
  3816  00172A  4A0D               	infsnz	_indice,f,c
  3817  00172C  2A0E               	incf	_indice+1,f,c
  3818                           
  3819                           ;display7.c: 13:    if( indice == 1 ){
  3820  00172E  040D               	decf	_indice,w,c
  3821  001730  100E               	iorwf	_indice+1,w,c
  3822  001732  A4D8               	btfss	status,2,c
  3823  001734  D008               	goto	l539
  3824                           
  3825                           ;display7.c: 14:        PORTDbits.RD1 = 1;
  3826  001736  8283               	bsf	3971,1,c	;volatile
  3827                           
  3828                           ;display7.c: 16:        set_number(dezena);
  3829  001738  C005  FFE6         	movff	_dezena,postinc1
  3830  00173C  C006  FFE6         	movff	_dezena+1,postinc1
  3831  001740  EC1B  F00A         	call	_set_number	;wreg free
  3832                           
  3833                           ;display7.c: 18:    }else{
  3834  001744  0012               	return	
  3835  001746                     l539:
  3836                           
  3837                           ;display7.c: 19:        PORTDbits.RD1 = 0;
  3838  001746  9283               	bcf	3971,1,c	;volatile
  3839                           
  3840                           ;display7.c: 20:        set_number(unidade);
  3841  001748  C003  FFE6         	movff	_unidade,postinc1
  3842  00174C  C004  FFE6         	movff	_unidade+1,postinc1
  3843  001750  EC1B  F00A         	call	_set_number	;wreg free
  3844                           
  3845                           ;display7.c: 21:          indice = 0 ;
  3846  001754  6A0D               	clrf	_indice,c
  3847  001756  6A0E               	clrf	_indice+1,c
  3848                           
  3849                           ; _dp_update: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  3850  001758  0012               	return		;funcret
  3851  00175A                     __end_of_dp_update:
  3852                           	opt callstack 0
  3853                           
  3854 ;; *************** function _set_number *****************
  3855 ;; Defined at:
  3856 ;;		line 26 in file "display7.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;  a               2  [STACK] int 
  3859 ;; Auto vars:     Size  Location     Type
  3860 ;;		None
  3861 ;; Return value:  Size  Location     Type
  3862 ;;                  1  [STACK] void 
  3863 ;; Registers used:
  3864 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  3865 ;; Tracked objects:
  3866 ;;		On entry : 0/0
  3867 ;;		On exit  : 0/0
  3868 ;;		Unchanged: 0/0
  3869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3870 ;;      Params:         0       0       0       0       0       0       0
  3871 ;;      Locals:         0       0       0       0       0       0       0
  3872 ;;      Temps:          0       0       0       0       0       0       0
  3873 ;;      Totals:         0       0       0       0       0       0       0
  3874 ;;Total ram usage:        0 bytes
  3875 ;; Hardware stack levels used:    1
  3876 ;; This function calls:
  3877 ;;		Nothing
  3878 ;; This function is called by:
  3879 ;;		_dp_update
  3880 ;; This function uses a reentrant model
  3881 ;;
  3882                           
  3883                           	psect	text21
  3884  001436                     __ptext21:
  3885                           	opt callstack 0
  3886  001436                     _set_number:
  3887                           	opt callstack 18
  3888                           
  3889                           ;display7.c: 27:     switch(a){
  3890                           
  3891                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3892                           ;incstack = 0
  3893  001436  D017               	goto	l1869
  3894  001438                     l1845:
  3895                           
  3896                           ;display7.c: 29:             PORTC = 0b00111111;
  3897  001438  0E3F               	movlw	63
  3898  00143A  D013               	goto	L11
  3899  00143C                     l1847:
  3900                           
  3901                           ;display7.c: 32:             PORTC = 0b00000110;
  3902  00143C  0E06               	movlw	6
  3903  00143E  D011               	goto	L11
  3904  001440                     l1849:
  3905                           
  3906                           ;display7.c: 35:             PORTC = 0b01011011;
  3907  001440  0E5B               	movlw	91
  3908  001442  D00F               	goto	L11
  3909  001444                     l1851:
  3910                           
  3911                           ;display7.c: 38:             PORTC = 0b01001111;
  3912  001444  0E4F               	movlw	79
  3913  001446  D00D               	goto	L11
  3914  001448                     l1853:
  3915                           
  3916                           ;display7.c: 41:             PORTC = 0b01100110;
  3917  001448  0E66               	movlw	102
  3918  00144A  D00B               	goto	L11
  3919  00144C                     l1855:
  3920                           
  3921                           ;display7.c: 44:             PORTC = 0b01101101;
  3922  00144C  0E6D               	movlw	109
  3923  00144E  D009               	goto	L11
  3924  001450                     l1857:
  3925                           
  3926                           ;display7.c: 47:             PORTC = 0b01111101;
  3927  001450  0E7D               	movlw	125
  3928  001452  D007               	goto	L11
  3929  001454                     l1859:
  3930                           
  3931                           ;display7.c: 50:             PORTC = 0b00000111;
  3932  001454  0E07               	movlw	7
  3933  001456  D005               	goto	L11
  3934  001458                     l1861:
  3935                           
  3936                           ;display7.c: 53:             PORTC= 0b01111111;
  3937  001458  0E7F               	movlw	127
  3938  00145A  D003               	goto	L11
  3939  00145C                     l1863:
  3940                           
  3941                           ;display7.c: 56:             PORTC = 0b01101111;
  3942  00145C  0E6F               	movlw	111
  3943  00145E  D001               	goto	L11
  3944  001460                     l1865:
  3945                           
  3946                           ;display7.c: 59:             PORTC = 0b01111001;
  3947  001460  0E79               	movlw	121
  3948  001462                     L11:
  3949  001462  6E82               	movwf	3970,c	;volatile
  3950                           
  3951                           ;display7.c: 60:             break;
  3952  001464  D02A               	goto	l557
  3953  001466                     l1869:
  3954                           
  3955                           ;stkvar	_a @ sp[(0)+-2]
  3956  001466  0EFE               	movlw	-2
  3957  001468  CFE3 F051          	movff	plusw1,btemp+10
  3958  00146C  0EFF               	movlw	-1
  3959  00146E  CFE3 F052          	movff	plusw1,btemp+11
  3960                           
  3961                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3962                           ; Switch size 1, requested type "simple"
  3963                           ; Number of cases is 1, Range of values is 0 to 0
  3964                           ; switch strategies available:
  3965                           ; Name         Instructions Cycles
  3966                           ; simple_byte            4     3 (average)
  3967                           ;	Chosen strategy is simple_byte
  3968  001472  5052               	movf	btemp+11,w,c
  3969  001474  0A00               	xorlw	0	; case 0
  3970  001476  A4D8               	btfss	status,2,c
  3971  001478  D7F3               	goto	l1865
  3972                           
  3973                           ; Switch size 1, requested type "simple"
  3974                           ; Number of cases is 10, Range of values is 0 to 9
  3975                           ; switch strategies available:
  3976                           ; Name         Instructions Cycles
  3977                           ; simple_byte           31    16 (average)
  3978                           ;	Chosen strategy is simple_byte
  3979  00147A  5051               	movf	btemp+10,w,c
  3980  00147C  0A00               	xorlw	0	; case 0
  3981  00147E  B4D8               	btfsc	status,2,c
  3982  001480  D7DB               	goto	l1845
  3983  001482  0A01               	xorlw	1	; case 1
  3984  001484  B4D8               	btfsc	status,2,c
  3985  001486  D7DA               	goto	l1847
  3986  001488  0A03               	xorlw	3	; case 2
  3987  00148A  B4D8               	btfsc	status,2,c
  3988  00148C  D7D9               	goto	l1849
  3989  00148E  0A01               	xorlw	1	; case 3
  3990  001490  B4D8               	btfsc	status,2,c
  3991  001492  D7D8               	goto	l1851
  3992  001494  0A07               	xorlw	7	; case 4
  3993  001496  B4D8               	btfsc	status,2,c
  3994  001498  D7D7               	goto	l1853
  3995  00149A  0A01               	xorlw	1	; case 5
  3996  00149C  B4D8               	btfsc	status,2,c
  3997  00149E  D7D6               	goto	l1855
  3998  0014A0  0A03               	xorlw	3	; case 6
  3999  0014A2  B4D8               	btfsc	status,2,c
  4000  0014A4  D7D5               	goto	l1857
  4001  0014A6  0A01               	xorlw	1	; case 7
  4002  0014A8  B4D8               	btfsc	status,2,c
  4003  0014AA  D7D4               	goto	l1859
  4004  0014AC  0A0F               	xorlw	15	; case 8
  4005  0014AE  B4D8               	btfsc	status,2,c
  4006  0014B0  D7D3               	goto	l1861
  4007  0014B2  0A01               	xorlw	1	; case 9
  4008  0014B4  B4D8               	btfsc	status,2,c
  4009  0014B6  D7D2               	goto	l1863
  4010  0014B8  D7D3               	goto	l1865
  4011  0014BA                     l557:
  4012                           
  4013                           ; _set_number: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
  4014  0014BA  52E5               	movf	postdec1,f,c
  4015  0014BC  52E5               	movf	postdec1,f,c
  4016  0014BE  0012               	return		;funcret
  4017  0014C0                     __end_of_set_number:
  4018                           	opt callstack 0
  4019                           
  4020 ;; *************** function _delay_decrement *****************
  4021 ;; Defined at:
  4022 ;;		line 100 in file "kernel.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;		None
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;  i               2  [STACK] int 
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  1  [STACK] void 
  4029 ;; Registers used:
  4030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4036 ;;      Params:         0       0       0       0       0       0       0
  4037 ;;      Locals:         0       0       0       0       0       0       0
  4038 ;;      Temps:          0       0       0       0       0       0       0
  4039 ;;      Totals:         0       0       0       0       0       0       0
  4040 ;;Total ram usage:        0 bytes
  4041 ;; Hardware stack levels used:    1
  4042 ;; This function calls:
  4043 ;;		Nothing
  4044 ;; This function is called by:
  4045 ;;		_ISR_timer0
  4046 ;; This function uses a reentrant model
  4047 ;;
  4048                           
  4049                           	psect	text22
  4050  000BC0                     __ptext22:
  4051                           	opt callstack 0
  4052  000BC0                     _delay_decrement:
  4053                           	opt callstack 0
  4054                           
  4055                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4056  000BC0  52E6               	movf	postinc1,f,c
  4057  000BC2  52E6               	movf	postinc1,f,c
  4058                           
  4059                           ;kernel.c: 101:   int i;;kernel.c: 103:   for (i = 0; i < ready_queue.tasks_installed; i
      +                          ++) {
  4060                           ;stkvar	_i @ sp[(-2)+0]
  4061                           
  4062                           ;incstack = 0
  4063  000BC4  0EFE               	movlw	-2
  4064  000BC6  6AE3               	clrf	plusw1,c
  4065  000BC8  0EFF               	movlw	-1
  4066  000BCA  6AE3               	clrf	plusw1,c
  4067  000BCC  D070               	goto	l1947
  4068  000BCE                     l1937:
  4069                           
  4070                           ;kernel.c: 104:     if (ready_queue.tasks[i].task_state == WAITING) {
  4071                           ;stkvar	_i @ sp[(-2)+0]
  4072  000BCE  0EFE               	movlw	-2
  4073  000BD0  CFE3 F051          	movff	plusw1,btemp+10
  4074  000BD4  0EFF               	movlw	-1
  4075  000BD6  CFE3 F052          	movff	plusw1,btemp+11
  4076  000BDA  0E6C               	movlw	108
  4077  000BDC  0251               	mulwf	btemp+10,c
  4078  000BDE  CFF3 F04F          	movff	prodl,btemp+8
  4079  000BE2  CFF4 F050          	movff	prodh,btemp+9
  4080  000BE6  0252               	mulwf	btemp+11,c
  4081  000BE8  50F3               	movf	prodl,w,c
  4082  000BEA  2650               	addwf	btemp+9,f,c
  4083  000BEC  0EE2               	movlw	low (_ready_queue+8)
  4084  000BEE  244F               	addwf	btemp+8,w,c
  4085  000BF0  6ED9               	movwf	fsr2l,c
  4086  000BF2  0E00               	movlw	high (_ready_queue+8)
  4087  000BF4  2050               	addwfc	btemp+9,w,c
  4088  000BF6  6EDA               	movwf	fsr2h,c
  4089  000BF8  0E02               	movlw	2
  4090  000BFA  18DE               	xorwf	postinc2,w,c
  4091  000BFC  A4D8               	btfss	status,2,c
  4092  000BFE  D048               	goto	l1945
  4093                           
  4094                           ;kernel.c: 105:       ready_queue.tasks[i].task_delay_time--;
  4095                           ;stkvar	_i @ sp[(-2)+0]
  4096  000C00  0EFE               	movlw	-2
  4097  000C02  CFE3 F051          	movff	plusw1,btemp+10
  4098  000C06  0EFF               	movlw	-1
  4099  000C08  CFE3 F052          	movff	plusw1,btemp+11
  4100  000C0C  0E6C               	movlw	108
  4101  000C0E  0251               	mulwf	btemp+10,c
  4102  000C10  CFF3 F04F          	movff	prodl,btemp+8
  4103  000C14  CFF4 F050          	movff	prodh,btemp+9
  4104  000C18  0252               	mulwf	btemp+11,c
  4105  000C1A  50F3               	movf	prodl,w,c
  4106  000C1C  2650               	addwf	btemp+9,f,c
  4107  000C1E  0E44               	movlw	low (_ready_queue+106)
  4108  000C20  244F               	addwf	btemp+8,w,c
  4109  000C22  6ED9               	movwf	fsr2l,c
  4110  000C24  0E01               	movlw	high (_ready_queue+106)
  4111  000C26  2050               	addwfc	btemp+9,w,c
  4112  000C28  6EDA               	movwf	fsr2h,c
  4113  000C2A  06DE               	decf	postinc2,f,c
  4114  000C2C  0E00               	movlw	0
  4115  000C2E  5ADD               	subwfb	postdec2,f,c
  4116                           
  4117                           ;kernel.c: 106:       if (ready_queue.tasks[i].task_delay_time == 0) {
  4118                           ;stkvar	_i @ sp[(-2)+0]
  4119  000C30  0EFE               	movlw	-2
  4120  000C32  CFE3 F051          	movff	plusw1,btemp+10
  4121  000C36  0EFF               	movlw	-1
  4122  000C38  CFE3 F052          	movff	plusw1,btemp+11
  4123  000C3C  0E6C               	movlw	108
  4124  000C3E  0251               	mulwf	btemp+10,c
  4125  000C40  CFF3 F04F          	movff	prodl,btemp+8
  4126  000C44  CFF4 F050          	movff	prodh,btemp+9
  4127  000C48  0252               	mulwf	btemp+11,c
  4128  000C4A  50F3               	movf	prodl,w,c
  4129  000C4C  2650               	addwf	btemp+9,f,c
  4130  000C4E  0E44               	movlw	low (_ready_queue+106)
  4131  000C50  244F               	addwf	btemp+8,w,c
  4132  000C52  6ED9               	movwf	fsr2l,c
  4133  000C54  0E01               	movlw	high (_ready_queue+106)
  4134  000C56  2050               	addwfc	btemp+9,w,c
  4135  000C58  6EDA               	movwf	fsr2h,c
  4136  000C5A  50DE               	movf	postinc2,w,c
  4137  000C5C  10DE               	iorwf	postinc2,w,c
  4138  000C5E  A4D8               	btfss	status,2,c
  4139  000C60  D017               	goto	l1945
  4140                           
  4141                           ;kernel.c: 107:         ready_queue.tasks[i].task_state = READY;
  4142                           ;stkvar	_i @ sp[(-2)+0]
  4143  000C62  0EFE               	movlw	-2
  4144  000C64  CFE3 F051          	movff	plusw1,btemp+10
  4145  000C68  0EFF               	movlw	-1
  4146  000C6A  CFE3 F052          	movff	plusw1,btemp+11
  4147  000C6E  0E6C               	movlw	108
  4148  000C70  0251               	mulwf	btemp+10,c
  4149  000C72  CFF3 F04F          	movff	prodl,btemp+8
  4150  000C76  CFF4 F050          	movff	prodh,btemp+9
  4151  000C7A  0252               	mulwf	btemp+11,c
  4152  000C7C  50F3               	movf	prodl,w,c
  4153  000C7E  2650               	addwf	btemp+9,f,c
  4154  000C80  0EE2               	movlw	low (_ready_queue+8)
  4155  000C82  244F               	addwf	btemp+8,w,c
  4156  000C84  6ED9               	movwf	fsr2l,c
  4157  000C86  0E00               	movlw	high (_ready_queue+8)
  4158  000C88  2050               	addwfc	btemp+9,w,c
  4159  000C8A  6EDA               	movwf	fsr2h,c
  4160  000C8C  0E00               	movlw	0
  4161  000C8E  6EDF               	movwf	indf2,c
  4162  000C90                     l1945:
  4163                           
  4164                           ;kernel.c: 113:   }
  4165                           ;stkvar	_i @ sp[(-2)+0]
  4166  000C90  0EFE               	movlw	-2
  4167  000C92  50E3               	movf	plusw1,w,c
  4168  000C94  0F01               	addlw	1
  4169  000C96  6E47               	movwf	btemp,c
  4170  000C98  0EFE               	movlw	-2
  4171  000C9A  C047  FFE3         	movff	btemp,plusw1
  4172  000C9E  6A47               	clrf	btemp,c
  4173  000CA0  0EFF               	movlw	-1
  4174  000CA2  50E3               	movf	plusw1,w,c
  4175  000CA4  2047               	addwfc	btemp,w,c
  4176  000CA6  6E47               	movwf	btemp,c
  4177  000CA8  0EFF               	movlw	-1
  4178  000CAA  C047  FFE3         	movff	btemp,plusw1
  4179  000CAE                     l1947:
  4180  000CAE  EE22  F0F6         	lfsr	2,_ready_queue+540
  4181                           
  4182                           ;stkvar	_i @ sp[(-2)+0]
  4183  000CB2  0EFE               	movlw	-2
  4184  000CB4  CFE3 F047          	movff	plusw1,btemp
  4185  000CB8  50DE               	movf	postinc2,w,c
  4186  000CBA  5C47               	subwf	btemp,w,c
  4187  000CBC  0EFF               	movlw	-1
  4188  000CBE  CFE3 F047          	movff	plusw1,btemp
  4189  000CC2  50DE               	movf	postinc2,w,c
  4190  000CC4  5847               	subwfb	btemp,w,c
  4191  000CC6  A0D8               	btfss	status,0,c
  4192  000CC8  D782               	goto	l1937
  4193                           
  4194                           ; _delay_decrement: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  4195  000CCA  52E5               	movf	postdec1,f,c
  4196  000CCC  52E5               	movf	postdec1,f,c
  4197  000CCE  0012               	return		;funcret
  4198  000CD0                     __end_of_delay_decrement:
  4199                           	opt callstack 0
  4200                           
  4201 ;; *************** function __mod *****************
  4202 ;; Defined at:
  4203 ;;		line 146 in file "car.c"
  4204 ;; Parameters:    Size  Location     Type
  4205 ;;  number          2  [STACK] int 
  4206 ;;  div             2  [STACK] int 
  4207 ;; Auto vars:     Size  Location     Type
  4208 ;;  result          2  [STACK] int 
  4209 ;; Return value:  Size  Location     Type
  4210 ;;                  2  [STACK] int 
  4211 ;; Registers used:
  4212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  4213 ;; Tracked objects:
  4214 ;;		On entry : 0/0
  4215 ;;		On exit  : 0/0
  4216 ;;		Unchanged: 0/0
  4217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4218 ;;      Params:         0       0       0       0       0       0       0
  4219 ;;      Locals:         0       0       0       0       0       0       0
  4220 ;;      Temps:          0       0       0       0       0       0       0
  4221 ;;      Totals:         0       0       0       0       0       0       0
  4222 ;;Total ram usage:        0 bytes
  4223 ;; Hardware stack levels used:    1
  4224 ;; This function calls:
  4225 ;;		Nothing
  4226 ;; This function is called by:
  4227 ;;		_ISR_timer0
  4228 ;; This function uses a reentrant model
  4229 ;;
  4230                           
  4231                           	psect	text23
  4232  0014C0                     __ptext23:
  4233                           	opt callstack 0
  4234  0014C0                     __mod:
  4235                           	opt callstack 0
  4236                           
  4237                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4238  0014C0  52E6               	movf	postinc1,f,c
  4239  0014C2  52E6               	movf	postinc1,f,c
  4240                           
  4241                           ;car.c: 147:     int result = number;
  4242                           ;stkvar	_number @ sp[(-2)+-2]
  4243                           ;stkvar	_result @ sp[(-2)+0]
  4244                           
  4245                           ;incstack = 0
  4246  0014C4  0EFC               	movlw	-4
  4247  0014C6  CFE3 F047          	movff	plusw1,btemp
  4248  0014CA  0EFE               	movlw	-2
  4249  0014CC  C047  FFE3         	movff	btemp,plusw1
  4250  0014D0  0EFD               	movlw	-3
  4251  0014D2  CFE3 F047          	movff	plusw1,btemp
  4252  0014D6  D00F               	goto	L12
  4253  0014D8                     l1905:
  4254                           
  4255                           ;car.c: 149:         result = result - div;
  4256                           ;stkvar	_div @ sp[(-2)+-4]
  4257                           ;stkvar	_result @ sp[(-2)+0]
  4258  0014D8  0EFE               	movlw	-2
  4259  0014DA  50E3               	movf	plusw1,w,c
  4260  0014DC  6E47               	movwf	btemp,c
  4261  0014DE  0EFA               	movlw	-6
  4262  0014E0  50E3               	movf	plusw1,w,c
  4263  0014E2  5E47               	subwf	btemp,f,c
  4264  0014E4  0EFE               	movlw	-2
  4265  0014E6  C047  FFE3         	movff	btemp,plusw1
  4266  0014EA  0EFF               	movlw	-1
  4267  0014EC  50E3               	movf	plusw1,w,c
  4268  0014EE  6E47               	movwf	btemp,c
  4269  0014F0  0EFB               	movlw	-5
  4270  0014F2  50E3               	movf	plusw1,w,c
  4271  0014F4  5A47               	subwfb	btemp,f,c
  4272  0014F6                     L12:
  4273  0014F6  0EFF               	movlw	-1
  4274  0014F8  C047  FFE3         	movff	btemp,plusw1
  4275                           
  4276                           ;car.c: 148:     while(result >= div){
  4277                           ;stkvar	_div @ sp[(-2)+-4]
  4278                           ;stkvar	_result @ sp[(-2)+0]
  4279  0014FC  50E1               	movf	fsr1l,w,c
  4280  0014FE  0FFE               	addlw	-2
  4281  001500  6ED9               	movwf	fsr2l,c
  4282  001502  50E2               	movf	fsr1h,w,c
  4283  001504  6EDA               	movwf	fsr2h,c
  4284  001506  0EFF               	movlw	255
  4285  001508  22DA               	addwfc	fsr2h,f,c
  4286  00150A  0EFA               	movlw	-6
  4287  00150C  50E3               	movf	plusw1,w,c
  4288  00150E  5CDE               	subwf	postinc2,w,c
  4289  001510  50DE               	movf	postinc2,w,c
  4290  001512  0A80               	xorlw	128
  4291  001514  6E47               	movwf	btemp,c
  4292  001516  0EFB               	movlw	-5
  4293  001518  50E3               	movf	plusw1,w,c
  4294  00151A  0A80               	xorlw	128
  4295  00151C  5847               	subwfb	btemp,w,c
  4296  00151E  B0D8               	btfsc	status,0,c
  4297  001520  D7DB               	goto	l1905
  4298                           
  4299                           ;car.c: 151:     return result;
  4300                           ;stkvar	_result @ sp[(-2)+0]
  4301  001522  0EFE               	movlw	-2
  4302  001524  CFE3 F047          	movff	plusw1,btemp
  4303  001528  0EFF               	movlw	-1
  4304  00152A  CFE3 F048          	movff	plusw1,btemp+1
  4305                           
  4306                           ; __mod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize 
      +                          = 4, vargsize = 0
  4307  00152E  0EFA               	movlw	250
  4308  001530  26E1               	addwf	fsr1l,f,c
  4309  001532  0EFF               	movlw	255
  4310  001534  22E2               	addwfc	fsr1h,f,c
  4311  001536  0012               	return		;funcret
  4312  001538                     __end_of__mod:
  4313                           	opt callstack 0
  4314                           
  4315 ;; *************** function __div *****************
  4316 ;; Defined at:
  4317 ;;		line 154 in file "car.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;  number          2  [STACK] int 
  4320 ;;  div             2  [STACK] int 
  4321 ;; Auto vars:     Size  Location     Type
  4322 ;;  result          2  [STACK] int 
  4323 ;; Return value:  Size  Location     Type
  4324 ;;                  2  [STACK] int 
  4325 ;; Registers used:
  4326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  4327 ;; Tracked objects:
  4328 ;;		On entry : 0/0
  4329 ;;		On exit  : 0/0
  4330 ;;		Unchanged: 0/0
  4331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4332 ;;      Params:         0       0       0       0       0       0       0
  4333 ;;      Locals:         0       0       0       0       0       0       0
  4334 ;;      Temps:          0       0       0       0       0       0       0
  4335 ;;      Totals:         0       0       0       0       0       0       0
  4336 ;;Total ram usage:        0 bytes
  4337 ;; Hardware stack levels used:    1
  4338 ;; This function calls:
  4339 ;;		Nothing
  4340 ;; This function is called by:
  4341 ;;		_ISR_timer0
  4342 ;; This function uses a reentrant model
  4343 ;;
  4344                           
  4345                           	psect	text24
  4346  0013AA                     __ptext24:
  4347                           	opt callstack 0
  4348  0013AA                     __div:
  4349                           	opt callstack 0
  4350                           
  4351                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4352  0013AA  52E6               	movf	postinc1,f,c
  4353  0013AC  52E6               	movf	postinc1,f,c
  4354                           
  4355                           ;car.c: 155:     int result = 0;
  4356                           ;stkvar	_result @ sp[(-2)+0]
  4357                           
  4358                           ;incstack = 0
  4359  0013AE  0EFE               	movlw	-2
  4360  0013B0  6AE3               	clrf	plusw1,c
  4361  0013B2  0EFF               	movlw	-1
  4362  0013B4  6AE3               	clrf	plusw1,c
  4363                           
  4364                           ;car.c: 156:     while(number >= div){
  4365  0013B6  D021               	goto	l1917
  4366  0013B8                     l1915:
  4367                           
  4368                           ;car.c: 157:         number = number - div;
  4369                           ;stkvar	_div @ sp[(-2)+-4]
  4370                           ;stkvar	_number @ sp[(-2)+-2]
  4371  0013B8  0EFC               	movlw	-4
  4372  0013BA  50E3               	movf	plusw1,w,c
  4373  0013BC  6E47               	movwf	btemp,c
  4374  0013BE  0EFA               	movlw	-6
  4375  0013C0  50E3               	movf	plusw1,w,c
  4376  0013C2  5E47               	subwf	btemp,f,c
  4377  0013C4  0EFC               	movlw	-4
  4378  0013C6  C047  FFE3         	movff	btemp,plusw1
  4379  0013CA  0EFD               	movlw	-3
  4380  0013CC  50E3               	movf	plusw1,w,c
  4381  0013CE  6E47               	movwf	btemp,c
  4382  0013D0  0EFB               	movlw	-5
  4383  0013D2  50E3               	movf	plusw1,w,c
  4384  0013D4  5A47               	subwfb	btemp,f,c
  4385  0013D6  0EFD               	movlw	-3
  4386  0013D8  C047  FFE3         	movff	btemp,plusw1
  4387                           
  4388                           ;car.c: 158:         result++;
  4389                           ;stkvar	_result @ sp[(-2)+0]
  4390  0013DC  0EFE               	movlw	-2
  4391  0013DE  50E3               	movf	plusw1,w,c
  4392  0013E0  0F01               	addlw	1
  4393  0013E2  6E47               	movwf	btemp,c
  4394  0013E4  0EFE               	movlw	-2
  4395  0013E6  C047  FFE3         	movff	btemp,plusw1
  4396  0013EA  6A47               	clrf	btemp,c
  4397  0013EC  0EFF               	movlw	-1
  4398  0013EE  50E3               	movf	plusw1,w,c
  4399  0013F0  2047               	addwfc	btemp,w,c
  4400  0013F2  6E47               	movwf	btemp,c
  4401  0013F4  0EFF               	movlw	-1
  4402  0013F6  C047  FFE3         	movff	btemp,plusw1
  4403  0013FA                     l1917:
  4404                           
  4405                           ;car.c: 156:     while(number >= div){
  4406                           ;stkvar	_div @ sp[(-2)+-4]
  4407                           ;stkvar	_number @ sp[(-2)+-2]
  4408  0013FA  50E1               	movf	fsr1l,w,c
  4409  0013FC  0FFC               	addlw	-4
  4410  0013FE  6ED9               	movwf	fsr2l,c
  4411  001400  50E2               	movf	fsr1h,w,c
  4412  001402  6EDA               	movwf	fsr2h,c
  4413  001404  0EFF               	movlw	255
  4414  001406  22DA               	addwfc	fsr2h,f,c
  4415  001408  0EFA               	movlw	-6
  4416  00140A  50E3               	movf	plusw1,w,c
  4417  00140C  5CDE               	subwf	postinc2,w,c
  4418  00140E  50DE               	movf	postinc2,w,c
  4419  001410  0A80               	xorlw	128
  4420  001412  6E47               	movwf	btemp,c
  4421  001414  0EFB               	movlw	-5
  4422  001416  50E3               	movf	plusw1,w,c
  4423  001418  0A80               	xorlw	128
  4424  00141A  5847               	subwfb	btemp,w,c
  4425  00141C  B0D8               	btfsc	status,0,c
  4426  00141E  D7CC               	goto	l1915
  4427                           
  4428                           ;car.c: 160:     return result;
  4429                           ;stkvar	_result @ sp[(-2)+0]
  4430  001420  0EFE               	movlw	-2
  4431  001422  CFE3 F047          	movff	plusw1,btemp
  4432  001426  0EFF               	movlw	-1
  4433  001428  CFE3 F048          	movff	plusw1,btemp+1
  4434                           
  4435                           ; __div: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize 
      +                          = 4, vargsize = 0
  4436  00142C  0EFA               	movlw	250
  4437  00142E  26E1               	addwf	fsr1l,f,c
  4438  001430  0EFF               	movlw	255
  4439  001432  22E2               	addwfc	fsr1h,f,c
  4440  001434  0012               	return		;funcret
  4441  001436                     __end_of__div:
  4442                           	opt callstack 0
  4443                           
  4444 ;; *************** function ___wmul *****************
  4445 ;; Defined at:
  4446 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;  multiplier      2  [STACK] unsigned int 
  4449 ;;  multiplicand    2  [STACK] unsigned int 
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;  product         2  [STACK] unsigned int 
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  2  [STACK] unsigned int 
  4454 ;; Registers used:
  4455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4461 ;;      Params:         0       0       0       0       0       0       0
  4462 ;;      Locals:         0       0       0       0       0       0       0
  4463 ;;      Temps:          0       0       0       0       0       0       0
  4464 ;;      Totals:         0       0       0       0       0       0       0
  4465 ;;Total ram usage:        0 bytes
  4466 ;; Hardware stack levels used:    1
  4467 ;; This function calls:
  4468 ;;		Nothing
  4469 ;; This function is called by:
  4470 ;;		_ISR_timer0
  4471 ;; This function uses a reentrant model
  4472 ;;
  4473                           
  4474                           	psect	text25
  4475  0011F0                     __ptext25:
  4476                           	opt callstack 0
  4477  0011F0                     ___wmul:
  4478                           	opt callstack 0
  4479                           
  4480                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4481  0011F0  52E6               	movf	postinc1,f,c
  4482  0011F2  52E6               	movf	postinc1,f,c
  4483                           
  4484                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  4485                           
  4486                           ;incstack = 0
  4487  0011F4  0EFA               	movlw	-6
  4488  0011F6  CFE3 F052          	movff	plusw1,btemp+11
  4489                           
  4490                           ;stkvar	_multiplier @ sp[(-2)+-2]
  4491  0011FA  0EFC               	movlw	-4
  4492  0011FC  50E3               	movf	plusw1,w,c
  4493  0011FE  0252               	mulwf	btemp+11,c
  4494                           
  4495                           ;stkvar	_product @ sp[(-2)+0]
  4496  001200  0EFE               	movlw	-2
  4497  001202  CFF3 FFE3          	movff	prodl,plusw1
  4498  001206  0EFF               	movlw	-1
  4499  001208  CFF4 FFE3          	movff	prodh,plusw1
  4500                           
  4501                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  4502  00120C  0EFB               	movlw	251
  4503  00120E  24E1               	addwf	fsr1l,w,c
  4504  001210  6ED9               	movwf	fsr2l,c
  4505  001212  0EFF               	movlw	255
  4506  001214  20E2               	addwfc	fsr1h,w,c
  4507  001216  6EDA               	movwf	fsr2h,c
  4508  001218  50DF               	movf	indf2,w,c
  4509  00121A  6E52               	movwf	btemp+11,c
  4510                           
  4511                           ;stkvar	_multiplier @ sp[(-2)+-2]
  4512  00121C  0EFC               	movlw	-4
  4513  00121E  50E3               	movf	plusw1,w,c
  4514  001220  0252               	mulwf	btemp+11,c
  4515  001222  CFF3 FFF4          	movff	prodl,prodh
  4516  001226  6AF3               	clrf	prodl,c
  4517                           
  4518                           ;stkvar	_product @ sp[(-2)+0]
  4519  001228  50E1               	movf	fsr1l,w,c
  4520  00122A  0FFE               	addlw	-2
  4521  00122C  6ED9               	movwf	fsr2l,c
  4522  00122E  50E2               	movf	fsr1h,w,c
  4523  001230  6EDA               	movwf	fsr2h,c
  4524  001232  0EFF               	movlw	255
  4525  001234  22DA               	addwfc	fsr2h,f,c
  4526  001236  50F3               	movf	prodl,w,c
  4527  001238  26DE               	addwf	postinc2,f,c
  4528  00123A  50F4               	movf	prodh,w,c
  4529  00123C  22DD               	addwfc	postdec2,f,c
  4530                           
  4531                           ;stkvar	_multiplicand @ sp[(-2)+-4]
  4532  00123E  0EFA               	movlw	-6
  4533  001240  CFE3 F052          	movff	plusw1,btemp+11
  4534                           
  4535                           ;stkvar	_multiplier @ sp[(-2)+-2]
  4536  001244  0EFD               	movlw	253
  4537  001246  24E1               	addwf	fsr1l,w,c
  4538  001248  6ED9               	movwf	fsr2l,c
  4539  00124A  0EFF               	movlw	255
  4540  00124C  20E2               	addwfc	fsr1h,w,c
  4541  00124E  6EDA               	movwf	fsr2h,c
  4542  001250  50DF               	movf	indf2,w,c
  4543  001252  0252               	mulwf	btemp+11,c
  4544  001254  CFF3 FFF4          	movff	prodl,prodh
  4545  001258  6AF3               	clrf	prodl,c
  4546                           
  4547                           ;stkvar	_product @ sp[(-2)+0]
  4548  00125A  50E1               	movf	fsr1l,w,c
  4549  00125C  0FFE               	addlw	-2
  4550  00125E  6ED9               	movwf	fsr2l,c
  4551  001260  50E2               	movf	fsr1h,w,c
  4552  001262  6EDA               	movwf	fsr2h,c
  4553  001264  0EFF               	movlw	255
  4554  001266  22DA               	addwfc	fsr2h,f,c
  4555  001268  50F3               	movf	prodl,w,c
  4556  00126A  26DE               	addwf	postinc2,f,c
  4557  00126C  50F4               	movf	prodh,w,c
  4558  00126E  22DD               	addwfc	postdec2,f,c
  4559                           
  4560                           ;stkvar	_product @ sp[(-2)+0]
  4561  001270  0EFE               	movlw	-2
  4562  001272  CFE3 F047          	movff	plusw1,btemp
  4563  001276  0EFF               	movlw	-1
  4564  001278  CFE3 F048          	movff	plusw1,btemp+1
  4565                           
  4566                           ; ___wmul: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
  4567  00127C  0EFA               	movlw	250
  4568  00127E  26E1               	addwf	fsr1l,f,c
  4569  001280  0EFF               	movlw	255
  4570  001282  22E2               	addwfc	fsr1h,f,c
  4571  001284  0012               	return		;funcret
  4572  001286                     __end_of___wmul:
  4573                           	opt callstack 0
  4574  0000                     
  4575                           	psect	text26
  4576  000000                     __ptext26:
  4577                           	opt callstack 0
  4578                           
  4579                           	psect	rparam
  4580  0000                     
  4581                           	psect	temp
  4582  000047                     btemp:
  4583                           	opt callstack 0
  4584  000047                     	ds	32
  4585  0000                     wtemp0	set	btemp
  4586  0000                     wtemp1	set	btemp+2
  4587  0000                     wtemp2	set	btemp+4
  4588  0000                     wtemp3	set	btemp+6
  4589  0000                     wtemp4	set	btemp+8
  4590  0000                     wtemp5	set	btemp+10
  4591  0000                     wtemp8	set	btemp+1
  4592  0000                     ttemp0	set	btemp
  4593  0000                     ttemp1	set	btemp+3
  4594  0000                     ttemp2	set	btemp+6
  4595  0000                     ttemp3	set	btemp+9
  4596  0000                     ttemp5	set	btemp+1
  4597  0000                     ttemp6	set	btemp+4
  4598  0000                     ttemp7	set	btemp+8
  4599  0000                     ltemp0	set	btemp
  4600  0000                     ltemp1	set	btemp+4
  4601  0000                     ltemp2	set	btemp+8
  4602  0000                     lltemp0	set	btemp
  4603  0000                     lltemp1	set	btemp+8
  4604  0000                     lltemp2	set	btemp+16
  4605  0000                     lltemp3	set	btemp+24
  4606                           tosu	equ	0xFFF
  4607                           tosh	equ	0xFFE
  4608                           tosl	equ	0xFFD
  4609                           stkptr	equ	0xFFC
  4610                           pclatu	equ	0xFFB
  4611                           pclath	equ	0xFFA
  4612                           pcl	equ	0xFF9
  4613                           tblptru	equ	0xFF8
  4614                           tblptrh	equ	0xFF7
  4615                           tblptrl	equ	0xFF6
  4616                           tablat	equ	0xFF5
  4617                           prodh	equ	0xFF4
  4618                           prodl	equ	0xFF3
  4619                           indf0	equ	0xFEF
  4620                           postinc0	equ	0xFEE
  4621                           postdec0	equ	0xFED
  4622                           preinc0	equ	0xFEC
  4623                           plusw0	equ	0xFEB
  4624                           fsr0h	equ	0xFEA
  4625                           fsr0l	equ	0xFE9
  4626                           wreg	equ	0xFE8
  4627                           indf1	equ	0xFE7
  4628                           postinc1	equ	0xFE6
  4629                           postdec1	equ	0xFE5
  4630                           preinc1	equ	0xFE4
  4631                           plusw1	equ	0xFE3
  4632                           fsr1h	equ	0xFE2
  4633                           fsr1l	equ	0xFE1
  4634                           bsr	equ	0xFE0
  4635                           indf2	equ	0xFDF
  4636                           postinc2	equ	0xFDE
  4637                           postdec2	equ	0xFDD
  4638                           preinc2	equ	0xFDC
  4639                           plusw2	equ	0xFDB
  4640                           fsr2h	equ	0xFDA
  4641                           fsr2l	equ	0xFD9
  4642                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         1216
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     18      90
    BANK0           128      0      90
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    pipe_start.s	PTR struct semaphore size(2) Largest target is 14
		 -> s_pipe_start(BANK0[14]), s_pipe_time(BANK0[14]), s_pipe(BANK0[14]), 

    pipe_time.s	PTR struct semaphore size(2) Largest target is 14
		 -> s_pipe_start(BANK0[14]), s_pipe_time(BANK0[14]), s_pipe(BANK0[14]), 

    pHeap	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    sp__SRAMalloc	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    mem	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    p.s	PTR struct semaphore size(2) Largest target is 14
		 -> s_pipe_start(BANK0[14]), s_pipe_time(BANK0[14]), s_pipe(BANK0[14]), 

    s	PTR struct semaphore size(2) Largest target is 14
		 -> s_pipe_start(BANK0[14]), s_pipe_time(BANK0[14]), s_pipe(BANK0[14]), teste_2(BANK0[14]), 
		 -> teste_1(BANK0[14]), s_time(COMRAM[14]), s_count(COMRAM[14]), s_started(COMRAM[14]), 

    s	PTR struct semaphore size(2) Largest target is 14
		 -> s_pipe_start(BANK0[14]), s_pipe_time(BANK0[14]), s_pipe(BANK0[14]), teste_2(BANK0[14]), 
		 -> teste_1(BANK0[14]), s_time(COMRAM[14]), s_count(COMRAM[14]), s_started(COMRAM[14]), 

    s	PTR struct semaphore size(2) Largest target is 14
		 -> s_pipe_start(BANK0[14]), s_pipe_time(BANK0[14]), s_pipe(BANK0[14]), teste_2(BANK0[14]), 
		 -> teste_1(BANK0[14]), s_time(COMRAM[14]), s_count(COMRAM[14]), s_started(COMRAM[14]), 

    p.s	PTR struct semaphore size(2) Largest target is 14
		 -> s_pipe_start(BANK0[14]), s_pipe_time(BANK0[14]), s_pipe(BANK0[14]), 

    p.s	PTR struct semaphore size(2) Largest target is 14
		 -> s_pipe_start(BANK0[14]), s_pipe_time(BANK0[14]), s_pipe(BANK0[14]), 

    p.s	PTR struct semaphore size(2) Largest target is 14
		 -> s_pipe_start(BANK0[14]), s_pipe_time(BANK0[14]), s_pipe(BANK0[14]), 

    s	PTR struct semaphore size(2) Largest target is 14
		 -> s_pipe_start(BANK0[14]), s_pipe_time(BANK0[14]), s_pipe(BANK0[14]), 

    S765pipe$s	PTR struct semaphore size(2) Largest target is 14
		 -> s_pipe_start(BANK0[14]), s_pipe_time(BANK0[14]), s_pipe(BANK0[14]), 

    p.s	PTR struct semaphore size(2) Largest target is 14
		 -> s_pipe_start(BANK0[14]), s_pipe_time(BANK0[14]), s_pipe(BANK0[14]), 

    p	PTR struct pipe size(2) Largest target is 11
		 -> pipe_start(BANK0[10]), pipe_time(COMRAM[10]), p(BANK0[10]), 

    f	PTR FTN()void  size(2) Largest target is 1
		 -> task_2heat(), task_keyboard(), task_idle(), 

    new_task.task_f	PTR FTN()void  size(2) Largest target is 1
		 -> task_2heat(), task_keyboard(), task_idle(), 

    S437pcb$task_f	PTR FTN()void  size(2) Largest target is 1
		 -> task_2heat(), task_keyboard(), task_idle(), 

    ready_queue.tasks.task_f	PTR FTN()void  size(2) Largest target is 1
		 -> task_2heat(), task_keyboard(), task_idle(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _task_idle in COMRAM

    None.

Critical Paths under _task_2heat in COMRAM

    None.

Critical Paths under _micro_setup in COMRAM

    None.

Critical Paths under _task_keyboard in COMRAM

    None.

Critical Paths under _micro_setup in COMRAM

    None.

Critical Paths under _task_keyboard in COMRAM

    None.

Critical Paths under _task_2heat in COMRAM

    None.

Critical Paths under _ISR_timer0 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _task_idle in BANK0

    None.

Critical Paths under _task_2heat in BANK0

    None.

Critical Paths under _micro_setup in BANK0

    None.

Critical Paths under _task_keyboard in BANK0

    None.

Critical Paths under _micro_setup in BANK0

    None.

Critical Paths under _task_keyboard in BANK0

    None.

Critical Paths under _task_2heat in BANK0

    None.

Critical Paths under _ISR_timer0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _task_idle in BANK1

    None.

Critical Paths under _task_2heat in BANK1

    None.

Critical Paths under _micro_setup in BANK1

    None.

Critical Paths under _task_keyboard in BANK1

    None.

Critical Paths under _micro_setup in BANK1

    None.

Critical Paths under _task_keyboard in BANK1

    None.

Critical Paths under _task_2heat in BANK1

    None.

Critical Paths under _ISR_timer0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _task_idle in BANK2

    None.

Critical Paths under _task_2heat in BANK2

    None.

Critical Paths under _micro_setup in BANK2

    None.

Critical Paths under _task_keyboard in BANK2

    None.

Critical Paths under _micro_setup in BANK2

    None.

Critical Paths under _task_keyboard in BANK2

    None.

Critical Paths under _task_2heat in BANK2

    None.

Critical Paths under _ISR_timer0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _task_idle in BANK3

    None.

Critical Paths under _task_2heat in BANK3

    None.

Critical Paths under _micro_setup in BANK3

    None.

Critical Paths under _task_keyboard in BANK3

    None.

Critical Paths under _micro_setup in BANK3

    None.

Critical Paths under _task_keyboard in BANK3

    None.

Critical Paths under _task_2heat in BANK3

    None.

Critical Paths under _ISR_timer0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _task_idle in BANK4

    None.

Critical Paths under _task_2heat in BANK4

    None.

Critical Paths under _micro_setup in BANK4

    None.

Critical Paths under _task_keyboard in BANK4

    None.

Critical Paths under _micro_setup in BANK4

    None.

Critical Paths under _task_keyboard in BANK4

    None.

Critical Paths under _task_2heat in BANK4

    None.

Critical Paths under _ISR_timer0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _task_idle in BANK5

    None.

Critical Paths under _task_2heat in BANK5

    None.

Critical Paths under _micro_setup in BANK5

    None.

Critical Paths under _task_keyboard in BANK5

    None.

Critical Paths under _micro_setup in BANK5

    None.

Critical Paths under _task_keyboard in BANK5

    None.

Critical Paths under _task_2heat in BANK5

    None.

Critical Paths under _ISR_timer0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1067
                        _config_INT0
                      _config_timer0
                         _dispatcher
                   _lunos_createTask
                         _lunos_init
                        _micro_setup
 ---------------------------------------------------------------------------------
 (5) _micro_setup                                          0     0      0     308
                        _pipe_create
                           _sem_init
 ---------------------------------------------------------------------------------
 (6) _pipe_create                                          4     0      4     220
                           _sem_init
 ---------------------------------------------------------------------------------
 (6) _sem_init                                             4     0      4      88
 ---------------------------------------------------------------------------------
 (1) _lunos_init                                           0     0      0     323
                       _SRAMInitHeap
                   _lunos_createTask
 ---------------------------------------------------------------------------------
 (2) _lunos_createTask                                   112   108      4     187
 ---------------------------------------------------------------------------------
 (2) _SRAMInitHeap                                         4     4      0     136
 ---------------------------------------------------------------------------------
 (13) _dispatcher                                          1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (15) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (16) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (1) _config_timer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_INT0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_idle                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_2heat                                           0     0      0     271
                    _lunos_delayTask
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (13) _dispatcher                                          1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (15) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (16) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _micro_setup                                          0     0      0     308
                        _pipe_create
                           _sem_init
 ---------------------------------------------------------------------------------
 (6) _pipe_create                                          4     0      4     220
                           _sem_init
 ---------------------------------------------------------------------------------
 (6) _sem_init                                             4     0      4      88
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_keyboard                                        0     0      0    1033
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (12) _sem_wait                                            2     0      2     381
                         _dispatcher
 ---------------------------------------------------------------------------------
 (12) _sem_post                                            2     0      2     381
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (13) _dispatcher                                          1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (15) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (16) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _micro_setup                                          0     0      0     308
                        _pipe_create
                           _sem_init
 ---------------------------------------------------------------------------------
 (6) _pipe_create                                          4     0      4     220
                           _sem_init
 ---------------------------------------------------------------------------------
 (6) _sem_init                                             4     0      4      88
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_keyboard                                        0     0      0    1033
                    _lunos_delayTask
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (12) _sem_wait                                            2     0      2     381
                         _dispatcher
 ---------------------------------------------------------------------------------
 (12) _sem_post                                            2     0      2     381
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (13) _dispatcher                                          1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (15) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (16) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_2heat                                           0     0      0     271
                    _lunos_delayTask
 ---------------------------------------------------------------------------------
 (6) _lunos_delayTask                                      2     0      2     271
                         _dispatcher
 ---------------------------------------------------------------------------------
 (13) _dispatcher                                          1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (15) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (16) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _ISR_timer0                                         18    18      0    1485
                                              0 COMRAM    18    18      0
                             ___wmul
                               __div
                               __mod
                    _delay_decrement
                          _dp_update
                        _round_robin
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (12) _sem_wait                                            2     0      2     381
                         _dispatcher
 ---------------------------------------------------------------------------------
 (12) _sem_post                                            2     0      2     381
                         _dispatcher
 ---------------------------------------------------------------------------------
 (13) _dispatcher                                          1     0      1     249
                          _scheduler
 ---------------------------------------------------------------------------------
 (14) _scheduler                                           0     0      0     227
                        _round_robin
 ---------------------------------------------------------------------------------
 (15) _round_robin                                         2     2      0     227
                            ___lwmod
 ---------------------------------------------------------------------------------
 (16) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (12) _dp_update                                           0     0      0      22
                         _set_number
 ---------------------------------------------------------------------------------
 (13) _set_number                                          2     0      2      22
 ---------------------------------------------------------------------------------
 (12) _delay_decrement                                     2     2      0     112
 ---------------------------------------------------------------------------------
 (12) __mod                                                6     2      4     112
 ---------------------------------------------------------------------------------
 (12) __div                                                6     2      4      91
 ---------------------------------------------------------------------------------
 (12) ___wmul                                              6     2      4     159
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_INT0
   _config_timer0
   _dispatcher
     _scheduler
       _round_robin
         ___lwmod
   _lunos_createTask
   _lunos_init
     _SRAMInitHeap
     _lunos_createTask
   _micro_setup
     _pipe_create
       _sem_init
     _sem_init

 _task_idle (ROOT)

 _task_2heat (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _micro_setup (ROOT)
   _pipe_create
     _sem_init
   _sem_init

 _task_keyboard (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _micro_setup (ROOT)
   _pipe_create
     _sem_init
   _sem_init

 _task_keyboard (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_post
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _task_2heat (ROOT)
   _lunos_delayTask
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 _ISR_timer0 (ROOT)
   ___wmul
   __div
   __mod
   _delay_decrement
   _dp_update
     _set_number
   _round_robin
     ___lwmod
   _sem_post
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod
   _sem_wait
     _dispatcher
       _scheduler
         _round_robin
           ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     420      17       68.8%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      5A       5       70.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     12      5A       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B4      15        0.0%
DATA                 0      0     4D4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Jun 07 04:17:44 2019

                        _p 00D0   __end_of_lunos_createTask 0EC6                        l176 0A96  
                      l249 16F6                        l490 176A                        l539 1746  
                      l557 14BA                        l488 1766                        _BSR 000FE0  
                      u410 11DA                        u431 0EAA                        u460 0BBA  
                      u390 1174                        u470 0FDE                        _TOS 000FFD  
                      _who 0011                _round_robin 131A                        wreg 000FE8  
             __CFG_WDT$OFF 000000                       l1901 0DC6                       l2189 1608  
                     l1813 0BB2                       l1727 114C                       l1807 09BC  
                     l1905 14D8                       l1737 11BC                       l1915 13B8  
                     l1851 1444                       l1747 132A                       l1827 1024  
                     l1819 0FCA                       l1917 13FA                       l1861 1458  
                     l1853 1448                       l1845 1438                       l1863 145C  
                     l1855 144C                       l1847 143C                       l1791 0908  
                     l1945 0C90                       l1937 0BCE                       l1865 1460  
                     l1857 1450                       l1849 1440                       l1947 0CAE  
                     l1859 1454                       l1787 07EE                       l1869 1466  
                     l1887 0F92                       i2l87 021A                       _TOSH 000FFE  
                     _TOSL 000FFD                       _WREG 000FE8                       _TOSU 000FFF  
                     __div 13AA                       __mod 14C0                       _main 16B6  
                     _time 0007                       _size 000F                       fsr0h 000FEA  
                     fsr1h 000FE2                       fsr2h 000FDA                       fsr0l 000FE9  
                     indf2 000FDF                       fsr1l 000FE1                       fsr2l 000FD9  
                     btemp 0047                       prodh 000FF4                       prodl 000FF3  
                     start 000C               ___param_bank 000000            __end_of___lwmod 11F0  
                    i2l108 05EA                      _TMR0L 000FD6                      _PORTC 000F82  
                    u49_20 0D02                      _TRISB 000F93                      _TRISC 000F94  
                    _TRISD 000F95                ?_ISR_timer0 0067                      _count 0009  
                    tablat 000FF5                      ltemp0 0047                      ltemp1 004B  
                    ltemp2 004F                      plusw0 000FEB                      plusw1 000FE3  
                    plusw2 000FDB                      ttemp0 0047                      ttemp1 004A  
                    ttemp2 004D                      ttemp3 0050                      ttemp5 0048  
                    ttemp6 004B                      ttemp7 004F                      status 000FD8  
                    wtemp0 0047                      wtemp1 0049                      wtemp2 004B  
                    wtemp3 004D                      wtemp4 004F                      wtemp5 0051  
                    wtemp8 0048   __size_of_delay_decrement 0110            __initialization 1668  
             __end_of__div 1436               __end_of__mod 1538               __end_of_main 16F8  
            __activetblptr 000002                     i2l2003 00B0                     i2l2103 02DC  
                   i2l2015 00E0                     i2l2121 0396                     i2l2025 0138  
                   i2l2141 052E                     i2l2125 048C                     i2l2037 0168  
                   i2l2151 06F0                     i2l2047 01C0                     i2l2147 06E2  
                   _STATUS 000FD8                     _STKPTR 000FFC       __size_of_config_INT0 0014  
      __size_of_ISR_timer0 072C                     ___wmul 11F0                     _dezena 0005  
                   _indice 000D                     clear_0 1688                     clear_1 169A  
                   clear_2 16A6                     _s_pipe 009C                     _s_time 0021  
         __end_of_sem_init 15A8           __end_of_sem_wait 0F9A           __end_of_sem_post 0DCE  
             __pdataCOMRAM 0079                     lltemp0 0047                     lltemp1 004F  
                   lltemp2 0057                     lltemp3 005F                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8      __end_of_task_keyboard 1616  
               __accesstop 0080    __end_of__initialization 16AC            __CFG_PBADEN$OFF 000000  
            ___rparam_used 000001             __pcstackCOMRAM 0067                 ___inthi_sp 0552  
       __size_of_dp_update 0030       __size_of_micro_setup 0094                 __pbssBANK0 0080  
            __uDynamicHeap 02FA         __size_of_scheduler 0006         __size_of_task_idle 0004  
             ??_ISR_timer0 0067                    i2u71_40 06EA                    i2u58_40 007C  
                  i2u58_46 007E                    i2u68_40 02F0                    i2u68_41 02EE  
               _dispatcher 0734            _lunos_delayTask 1616       __size_of_pipe_create 00CC  
                  __Hparam 0000                    __Lparam 0000          __end_of_dp_update 175A  
          __size_of___wmul 0096         __end_of_ISR_timer0 0734                    ___lwmod 1134  
                  __pcinit 1668                    __ramtop 0600                    __ptext0 16B6  
                  __ptext1 1068                    __ptext2 1538                    __ptext3 16F8  
                  __ptext4 0DCE                    __ptext5 0F9A                    __ptext6 0734  
                  __ptext7 17A0                    __ptext8 131A                    __ptext9 1134  
                _T0CONbits 000FD5                    _s_count 002F                    _teste_1 00B8  
                  _teste_2 00AA                    _unidade 0003                    _quantum 0079  
                  _started 000B          __end_of_scheduler 17A6             __pintcode_body 0014  
     end_of_initialization 16AC                 _task_2heat 175A          __end_of_task_idle 17AA  
            __Lmediumconst 0000                    int_func 0014                 _pipe_start 00C6  
    __end_of_config_timer0 17A0                    postdec0 000FED                    postdec1 000FE5  
                  postdec2 000FDD                 _set_number 1436                    postinc0 000FEE  
                  postinc1 000FE6                    postinc2 000FDE                 _lunos_init 16F8  
                _PORTBbits 000F81                  _PORTCbits 000F82                  _PORTDbits 000F83  
  __end_of_lunos_delayTask 1668                  _TRISDbits 000F95       __size_of_round_robin 0090  
          _delay_decrement 0BC0             __end_of___wmul 1286              __pidataCOMRAM 17AA  
      start_initialization 1668  __size_of_lunos_createTask 00F8        __end_of_config_INT0 178E  
      __size_of_dispatcher 048C     __size_of_task_keyboard 006E                __pbssBIGRAM 00DA  
              __pbssCOMRAM 0001    __end_of_delay_decrement 0CD0       __end_of_SRAMInitHeap 1068  
                __pintcode 0008          __size_of_sem_init 0070          __size_of_sem_wait 00D4  
        __size_of_sem_post 00FE                  _dp_update 172A        __size_of_task_2heat 0020  
            _task_keyboard 15A8        __size_of_set_number 008A        __end_of_micro_setup 131A  
      __size_of_lunos_init 0032                  _scheduler 17A0                _config_INT0 177A  
                _pipe_time 003D                  _s_started 0013                  _task_idle 17A6  
         _lunos_createTask 0DCE                _INTCON2bits 000FF1               _s_pipe_start 0080  
      __end_of_pipe_create 1134                   __Hrparam 0000                   __Lrparam 0000  
       __end_of_dispatcher 0BC0           __size_of___lwmod 00BC     __size_of_config_timer0 0012  
              _micro_setup 1286      __size_of_SRAMInitHeap 00CE                   __ptext10 178E  
                 __ptext11 177A                   __ptext20 172A                   __ptext12 17A6  
                 __ptext21 1436                   __ptext13 175A                   __ptext22 0BC0  
                 __ptext14 1616                   __ptext23 14C0                   __ptext15 1286  
                 __ptext24 13AA                   __ptext16 15A8                   __ptext25 11F0  
                 __ptext17 0EC6                   __ptext26 0000                   __ptext18 0CD0  
            __size_of__div 008C              __size_of__mod 0078              __size_of_main 0042  
              _ready_queue 00DA                   _sem_init 1538                   _sem_wait 0EC6  
                 _sem_post 0CD0               _SRAMInitHeap 0F9A         __end_of_task_2heat 177A  
              _s_pipe_time 008E                 _INTCONbits 000FF2                _pipe_create 1068  
      __end_of_round_robin 13AA                   intlevel1 0000                   intlevel2 0000  
       __end_of_set_number 14C0         __end_of_lunos_init 172A              _config_timer0 178E  
               _ISR_timer0 0008                _timer_index 0001   __size_of_lunos_delayTask 0052  
